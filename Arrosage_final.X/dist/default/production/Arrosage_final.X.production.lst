

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Nov 12 20:28:57 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     	FNCALL	_main,_LCD_Clear
   448                           	FNCALL	_main,_LCD_Init
   449                           	FNCALL	_main,_LCD_String_xy
   450                           	FNCALL	_main,_MSdelay
   451                           	FNCALL	_main,_PWM_Init
   452                           	FNCALL	_main,_SetDutyCycleTo
   453                           	FNCALL	_main,_adc_init
   454                           	FNCALL	_main,_adc_read_humid
   455                           	FNCALL	_main,_adc_read_lum
   456                           	FNCALL	_main,_adc_read_sol
   457                           	FNCALL	_main,_adc_read_temp
   458                           	FNCALL	_main,_hex_converter
   459                           	FNCALL	_main,_lcd_humid
   460                           	FNCALL	_main,_lcd_lum
   461                           	FNCALL	_main,_lcd_sol
   462                           	FNCALL	_main,_lcd_temp
   463                           	FNCALL	_main,_setPeriodTo
   464                           	FNCALL	_main,_stream
   465                           	FNCALL	_stream,_SetDutyCycleTo
   466                           	FNCALL	_stream,_arrosage
   467                           	FNCALL	_stream,_delay
   468                           	FNCALL	_stream,_lcd_arrosage
   469                           	FNCALL	_stream,_setPeriodTo
   470                           	FNCALL	_setPeriodTo,___fladd
   471                           	FNCALL	_setPeriodTo,___fldiv
   472                           	FNCALL	_setPeriodTo,___flmul
   473                           	FNCALL	_setPeriodTo,___fltol
   474                           	FNCALL	_setPeriodTo,___xxtofl
   475                           	FNCALL	_setPeriodTo,_roundf
   476                           	FNCALL	_roundf,___fladd
   477                           	FNCALL	_roundf,___flge
   478                           	FNCALL	_roundf,___flmul
   479                           	FNCALL	_roundf,___flneg
   480                           	FNCALL	_lcd_arrosage,_LCD_String_xy
   481                           	FNCALL	_lcd_arrosage,___awdiv
   482                           	FNCALL	_lcd_arrosage,___fleq
   483                           	FNCALL	_lcd_arrosage,_sprintf
   484                           	FNCALL	_lcd_arrosage,_strcat
   485                           	FNCALL	_arrosage,_SetDutyCycleTo
   486                           	FNCALL	_arrosage,_delay
   487                           	FNCALL	_SetDutyCycleTo,___fladd
   488                           	FNCALL	_SetDutyCycleTo,___fldiv
   489                           	FNCALL	_SetDutyCycleTo,___flmul
   490                           	FNCALL	_SetDutyCycleTo,___fltol
   491                           	FNCALL	_SetDutyCycleTo,___xxtofl
   492                           	FNCALL	_lcd_temp,_LCD_String_xy
   493                           	FNCALL	_lcd_temp,_MSdelay
   494                           	FNCALL	_lcd_temp,_sprintf
   495                           	FNCALL	_lcd_temp,_strcat
   496                           	FNCALL	_lcd_temp,_temp_convert
   497                           	FNCALL	_lcd_sol,_LCD_String_xy
   498                           	FNCALL	_lcd_sol,_MSdelay
   499                           	FNCALL	_lcd_sol,_sprintf
   500                           	FNCALL	_lcd_sol,_strcat
   501                           	FNCALL	_lcd_lum,_LCD_String_xy
   502                           	FNCALL	_lcd_lum,_MSdelay
   503                           	FNCALL	_lcd_lum,_sprintf
   504                           	FNCALL	_lcd_lum,_strcat
   505                           	FNCALL	_lcd_humid,_LCD_String_xy
   506                           	FNCALL	_lcd_humid,_MSdelay
   507                           	FNCALL	_lcd_humid,_humid_convert
   508                           	FNCALL	_lcd_humid,_sprintf
   509                           	FNCALL	_lcd_humid,_strcat
   510                           	FNCALL	_strcat,_strcpy
   511                           	FNCALL	_strcat,_strlen
   512                           	FNCALL	_sprintf,_vfprintf
   513                           	FNCALL	_vfprintf,_vfpfcnvrt
   514                           	FNCALL	_vfpfcnvrt,_dtoa
   515                           	FNCALL	_vfpfcnvrt,_fputc
   516                           	FNCALL	_dtoa,___aodiv
   517                           	FNCALL	_dtoa,___aomod
   518                           	FNCALL	_dtoa,_abs
   519                           	FNCALL	_dtoa,_pad
   520                           	FNCALL	_pad,_fputc
   521                           	FNCALL	_pad,_fputs
   522                           	FNCALL	_pad,_strlen
   523                           	FNCALL	_fputs,_fputc
   524                           	FNCALL	_fputc,_putch
   525                           	FNCALL	_LCD_String_xy,_LCD_Command
   526                           	FNCALL	_LCD_String_xy,_LCD_String
   527                           	FNCALL	_LCD_String,_LCD_Char
   528                           	FNCALL	_LCD_Char,_MSdelay
   529                           	FNCALL	_hex_converter,___lwdiv
   530                           	FNCALL	_hex_converter,___lwmod
   531                           	FNCALL	_hex_converter,_atoi
   532                           	FNCALL	_atoi,___wmul
   533                           	FNCALL	_atoi,_isdigit
   534                           	FNCALL	_atoi,_isspace
   535                           	FNCALL	_adc_read_temp,_MSdelay
   536                           	FNCALL	_adc_read_sol,_MSdelay
   537                           	FNCALL	_adc_read_lum,_MSdelay
   538                           	FNCALL	_adc_read_humid,_MSdelay
   539                           	FNCALL	_LCD_Init,_LCD_Command
   540                           	FNCALL	_LCD_Init,_MSdelay
   541                           	FNCALL	_LCD_Clear,_LCD_Command
   542                           	FNCALL	_LCD_Command,_MSdelay
   543                           	FNROOT	_main
   544                           	global	lcd_sol@F4232
   545                           	global	lcd_lum@F4226
   546                           	global	lcd_arrosage@F4173
   547                           	global	lcd_temp@F4248
   548                           	global	lcd_temp@F4245
   549                           	global	lcd_humid@F4239
   550                           	global	lcd_humid@F4236
   551                           	global	lcd_sol@F4230
   552                           	global	lcd_lum@F4224
   553                           	global	lcd_temp@F4250
   554                           	global	lcd_humid@F4241
   555                           psect	idataBANK0,class=CODE,space=0,delta=1,noexec
   556                           global __pidataBANK0
   557                           __pidataBANK0:
   558  0055FA                     	file	"main.c"
   559                           	line	117
   560                           
   561                           ;initializer for lcd_sol@F4232
   562                           	db	low(053h)
   563  0055FA  53                 	db	low(06Fh)
   564  0055FB  6F                 	db	low(069h)
   565  0055FC  69                 	db	low(06Ch)
   566  0055FD  6C                 	db	low(020h)
   567  0055FE  20                 	db	low(053h)
   568  0055FF  53                 	db	low(074h)
   569  005600  74                 	db	low(061h)
   570  005601  61                 	db	low(074h)
   571  005602  74                 	db	low(065h)
   572  005603  65                 	db	low(03Ah)
   573  005604  3A                 	db	low(020h)
   574  005605  20                 	db	low(0)
   575  005606  00                 	db   0
   576  005607  00                 	db   0
   577  005608  00                 	db   0
   578  005609  00                 	line	94
   579                           
   580                           ;initializer for lcd_lum@F4226
   581                           	db	low(04Eh)
   582  00560A  4E                 	db	low(069h)
   583  00560B  69                 	db	low(067h)
   584  00560C  67                 	db	low(068h)
   585  00560D  68                 	db	low(074h)
   586  00560E  74                 	db	low(04Eh)
   587  00560F  4E                 	db	low(044h)
   588  005610  44                 	db	low(061h)
   589  005611  61                 	db	low(079h)
   590  005612  79                 	db	low(03Ah)
   591  005613  3A                 	db	low(020h)
   592  005614  20                 	db	low(0)
   593  005615  00                 	db   0
   594  005616  00                 	db   0
   595  005617  00                 	db   0
   596  005618  00                 	db   0
   597  005619  00                 	file	"./servomoteur.h"
   598                           	line	91
   599                           
   600                           ;initializer for lcd_arrosage@F4173
   601                           	db	low(041h)
   602  00561A  41                 	db	low(067h)
   603  00561B  67                 	db	low(03Ah)
   604  00561C  3A                 	db	low(0)
   605  00561D  00                 	db   0
   606  00561E  00                 	db   0
   607  00561F  00                 	db   0
   608  005620  00                 	db   0
   609  005621  00                 	db   0
   610  005622  00                 	db   0
   611  005623  00                 	db   0
   612  005624  00                 	db   0
   613  005625  00                 	db   0
   614  005626  00                 	db   0
   615  005627  00                 	db   0
   616  005628  00                 	db   0
   617  005629  00                 	file	"main.c"
   618                           	line	182
   619                           
   620                           ;initializer for lcd_temp@F4248
   621                           	db	low(030h)
   622  00562A  30                 	db	low(030h)
   623  00562B  30                 	db	low(030h)
   624  00562C  30                 	line	176
   625                           
   626                           ;initializer for lcd_temp@F4245
   627                           	db	low(030h)
   628  00562D  30                 	db	low(030h)
   629  00562E  30                 	db	low(030h)
   630  00562F  30                 	line	153
   631                           
   632                           ;initializer for lcd_humid@F4239
   633                           	db	low(030h)
   634  005630  30                 	db	low(030h)
   635  005631  30                 	db	low(030h)
   636  005632  30                 	line	142
   637                           
   638                           ;initializer for lcd_humid@F4236
   639                           	db	low(030h)
   640  005633  30                 	db	low(030h)
   641  005634  30                 	db	low(030h)
   642  005635  30                 	line	115
   643                           
   644                           ;initializer for lcd_sol@F4230
   645                           	db	low(030h)
   646  005636  30                 	db	low(030h)
   647  005637  30                 	db	low(030h)
   648  005638  30                 	line	91
   649                           
   650                           ;initializer for lcd_lum@F4224
   651                           	db	low(030h)
   652  005639  30                 	db	low(030h)
   653  00563A  30                 	db	low(030h)
   654  00563B  30                 psect	idataBANK1,class=CODE,space=0,delta=1,noexec
   655                           global __pidataBANK1
   656                           __pidataBANK1:
   657  005766                     	line	184
   658                           
   659                           ;initializer for lcd_temp@F4250
   660                           	db	low(054h)
   661  005766  54                 	db	low(065h)
   662  005767  65                 	db	low(06Dh)
   663  005768  6D                 	db	low(070h)
   664  005769  70                 	db	low(020h)
   665  00576A  20                 	db	low(043h)
   666  00576B  43                 	db	low(03Ah)
   667  00576C  3A                 	db	low(020h)
   668  00576D  20                 	db	low(0)
   669  00576E  00                 	db   0
   670  00576F  00                 	db   0
   671  005770  00                 	db   0
   672  005771  00                 	db   0
   673  005772  00                 	db   0
   674  005773  00                 	db   0
   675  005774  00                 	db   0
   676  005775  00                 	line	155
   677                           
   678                           ;initializer for lcd_humid@F4241
   679                           	db	low(048h)
   680  005776  48                 	db	low(075h)
   681  005777  75                 	db	low(06Dh)
   682  005778  6D                 	db	low(069h)
   683  005779  69                 	db	low(064h)
   684  00577A  64                 	db	low(069h)
   685  00577B  69                 	db	low(074h)
   686  00577C  74                 	db	low(079h)
   687  00577D  79                 	db	low(020h)
   688  00577E  20                 	db	low(025h)
   689  00577F  25                 	db	low(03Ah)
   690  005780  3A                 	db	low(020h)
   691  005781  20                 	db	low(0)
   692  005782  00                 	db   0
   693  005783  00                 	db   0
   694  005784  00                 	db   0
   695  005785  00                 	global	_toint
   696                           psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   697                           global __psmallconst
   698                           __psmallconst:
   699  000800                     	db	0
   700  000800  00                 	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\roundf.c"
   701                           	line	10
   702                           _toint:
   703  000801                     	dw	(normalize32(0x4b000000) & 0ffffh)
   704  000801  0000               	dw	highword (normalize32(0x4b000000))
   705  000803  4B00               	global __end_of_toint
   706                           __end_of_toint:
   707  000805                     	global	stream@servo_max
   708                           psect	smallconst
   709                           	file	"./servomoteur.h"
   710                           	line	124
   711                           stream@servo_max:
   712  000805                     	dw	(normalize32(0x41400000) & 0ffffh)
   713  000805  0000               	dw	highword (normalize32(0x41400000))
   714  000807  4140               	global __end_ofstream@servo_max
   715                           __end_ofstream@servo_max:
   716  000809                     	global	stream@servo_mid
   717                           psect	smallconst
   718                           	file	"./servomoteur.h"
   719                           	line	123
   720                           stream@servo_mid:
   721  000809                     	dw	(normalize32(0x40f33333) & 0ffffh)
   722  000809  3333               	dw	highword (normalize32(0x40f33333))
   723  00080B  40F3               	global __end_ofstream@servo_mid
   724                           __end_ofstream@servo_mid:
   725  00080D                     	global	stream@servo_init
   726                           psect	smallconst
   727                           	file	"./servomoteur.h"
   728                           	line	122
   729                           stream@servo_init:
   730  00080D                     	dw	(normalize32(0x40400000) & 0ffffh)
   731  00080D  0000               	dw	highword (normalize32(0x40400000))
   732  00080F  4040               	global __end_ofstream@servo_init
   733                           __end_ofstream@servo_init:
   734  000811                     	global	main@limit_humidity_soil
   735                           psect	smallconst
   736                           	file	"main.c"
   737                           	line	32
   738                           main@limit_humidity_soil:
   739  000811                     	dw	(015Eh)&0ffffh
   740  000811  015E               	global __end_ofmain@limit_humidity_soil
   741                           __end_ofmain@limit_humidity_soil:
   742  000813                     	global	stream@limit_time
   743                           psect	smallconst
   744                           	file	"./servomoteur.h"
   745                           	line	130
   746                           stream@limit_time:
   747  000813                     	dw	(012Ch)&0ffffh
   748  000813  012C               	global __end_ofstream@limit_time
   749                           __end_ofstream@limit_time:
   750  000815                     	global	stream@limit_humidity_air
   751                           psect	smallconst
   752                           	file	"./servomoteur.h"
   753                           	line	128
   754                           stream@limit_humidity_air:
   755  000815                     	dw	(01F4h)&0ffffh
   756  000815  01F4               	global __end_ofstream@limit_humidity_air
   757                           __end_ofstream@limit_humidity_air:
   758  000817                     	global	stream@limit_temperature
   759                           psect	smallconst
   760                           	file	"./servomoteur.h"
   761                           	line	127
   762                           stream@limit_temperature:
   763  000817                     	dw	(01F4h)&0ffffh
   764  000817  01F4               	global __end_ofstream@limit_temperature
   765                           __end_ofstream@limit_temperature:
   766  000819                     	global	stream@time_max
   767                           psect	smallconst
   768                           	file	"./servomoteur.h"
   769                           	line	126
   770                           stream@time_max:
   771  000819                     	dw	(02710h)&0ffffh
   772  000819  2710               	global __end_ofstream@time_max
   773                           __end_ofstream@time_max:
   774  00081B                     	global	stream@time_mid
   775                           psect	smallconst
   776                           	file	"./servomoteur.h"
   777                           	line	125
   778                           stream@time_mid:
   779  00081B                     	dw	(01388h)&0ffffh
   780  00081B  1388               	global __end_ofstream@time_mid
   781                           __end_ofstream@time_mid:
   782  00081D                     	global	_toint
   783                           	global	stream@servo_max
   784                           	global	stream@servo_mid
   785                           	global	stream@servo_init
   786                           	global	main@limit_humidity_soil
   787                           	global	stream@limit_time
   788                           	global	stream@limit_humidity_air
   789                           	global	stream@limit_temperature
   790                           	global	stream@time_max
   791                           	global	stream@time_mid
   792                           	global	roundf@F521
   793                           	global	_nout
   794                           	global	_width
   795                           	global	_prec
   796                           	global	_flags
   797                           	global	_t
   798                           	global	_h
   799                           	global	_l
   800                           	global	_dbuf
   801                           	global	_ADRESH
   802                           _ADRESH	set	0xFC4
   803  0000                     	global	_ADRESL
   804                           _ADRESL	set	0xFC3
   805  0000                     	global	_CCPR1L
   806                           _CCPR1L	set	0xFBE
   807  0000                     	global	_T2CONbits
   808                           _T2CONbits	set	0xFCA
   809  0000                     	global	_TMR2
   810                           _TMR2	set	0xFCC
   811  0000                     	global	_T2CON
   812                           _T2CON	set	0xFCA
   813  0000                     	global	_PR2
   814                           _PR2	set	0xFCB
   815  0000                     	global	_OSCCON
   816                           _OSCCON	set	0xFD3
   817  0000                     	global	_CCP1CON
   818                           _CCP1CON	set	0xFBD
   819  0000                     	global	_TRISCbits
   820                           _TRISCbits	set	0xF94
   821  0000                     	global	_LATB
   822                           _LATB	set	0xF8A
   823  0000                     	global	_TRISB
   824                           _TRISB	set	0xF93
   825  0000                     	global	_ADCON2
   826                           _ADCON2	set	0xFC0
   827  0000                     	global	_ADCON1
   828                           _ADCON1	set	0xFC1
   829  0000                     	global	_ADCON0bits
   830                           _ADCON0bits	set	0xFC2
   831  0000                     	global	_TRISA
   832                           _TRISA	set	0xF92
   833  0000                     	global	_LATB1
   834                           _LATB1	set	0x7C51
   835  0000                     	global	_LATB0
   836                           _LATB0	set	0x7C50
   837  0000                     	
   838                           STR_14:
   839  00081D                     	db	83	;'S'
   840  00081D  53                 	db	111	;'o'
   841  00081E  6F                 	db	105	;'i'
   842  00081F  69                 	db	108	;'l'
   843  000820  6C                 	db	32
   844  000821  20                 	db	105	;'i'
   845  000822  69                 	db	115	;'s'
   846  000823  73                 	db	32
   847  000824  20                 	db	115	;'s'
   848  000825  73                 	db	111	;'o'
   849  000826  6F                 	db	97	;'a'
   850  000827  61                 	db	107	;'k'
   851  000828  6B                 	db	101	;'e'
   852  000829  65                 	db	100	;'d'
   853  00082A  64                 	db	0
   854  00082B  00                 	
   855                           STR_17:
   856  00082C                     	db	73	;'I'
   857  00082C  49                 	db	108	;'l'
   858  00082D  6C                 	db	32
   859  00082E  20                 	db	102	;'f'
   860  00082F  66                 	db	97	;'a'
   861  000830  61                 	db	105	;'i'
   862  000831  69                 	db	116	;'t'
   863  000832  74                 	db	32
   864  000833  20                 	db	104	;'h'
   865  000834  68                 	db	117	;'u'
   866  000835  75                 	db	109	;'m'
   867  000836  6D                 	db	105	;'i'
   868  000837  69                 	db	100	;'d'
   869  000838  64                 	db	101	;'e'
   870  000839  65                 	db	0
   871  00083A  00                 	
   872                           STR_19:
   873  00083B                     	db	73	;'I'
   874  00083B  49                 	db	108	;'l'
   875  00083C  6C                 	db	32
   876  00083D  20                 	db	102	;'f'
   877  00083E  66                 	db	97	;'a'
   878  00083F  61                 	db	105	;'i'
   879  000840  69                 	db	116	;'t'
   880  000841  74                 	db	32
   881  000842  20                 	db	102	;'f'
   882  000843  66                 	db	114	;'r'
   883  000844  72                 	db	111	;'o'
   884  000845  6F                 	db	105	;'i'
   885  000846  69                 	db	100	;'d'
   886  000847  64                 	db	0
   887  000848  00                 	
   888                           STR_20:
   889  000849                     	db	73	;'I'
   890  000849  49                 	db	108	;'l'
   891  00084A  6C                 	db	32
   892  00084B  20                 	db	102	;'f'
   893  00084C  66                 	db	97	;'a'
   894  00084D  61                 	db	105	;'i'
   895  00084E  69                 	db	116	;'t'
   896  00084F  74                 	db	32
   897  000850  20                 	db	99	;'c'
   898  000851  63                 	db	104	;'h'
   899  000852  68                 	db	97	;'a'
   900  000853  61                 	db	117	;'u'
   901  000854  75                 	db	100	;'d'
   902  000855  64                 	db	0
   903  000856  00                 	
   904                           STR_6:
   905  000857                     	db	32
   906  000857  20                 	db	32
   907  000858  20                 	db	32
   908  000859  20                 	db	32
   909  00085A  20                 	db	65	;'A'
   910  00085B  41                 	db	114	;'r'
   911  00085C  72                 	db	114	;'r'
   912  00085D  72                 	db	111	;'o'
   913  00085E  6F                 	db	115	;'s'
   914  00085F  73                 	db	97	;'a'
   915  000860  61                 	db	103	;'g'
   916  000861  67                 	db	101	;'e'
   917  000862  65                 	db	0
   918  000863  00                 	
   919                           STR_10:
   920  000864                     	db	73	;'I'
   921  000864  49                 	db	108	;'l'
   922  000865  6C                 	db	32
   923  000866  20                 	db	102	;'f'
   924  000867  66                 	db	97	;'a'
   925  000868  61                 	db	105	;'i'
   926  000869  69                 	db	116	;'t'
   927  00086A  74                 	db	32
   928  00086B  20                 	db	106	;'j'
   929  00086C  6A                 	db	111	;'o'
   930  00086D  6F                 	db	117	;'u'
   931  00086E  75                 	db	114	;'r'
   932  00086F  72                 	db	0
   933  000870  00                 	
   934                           STR_7:
   935  000871                     	db	71	;'G'
   936  000871  47                 	db	97	;'a'
   937  000872  61                 	db	114	;'r'
   938  000873  72                 	db	100	;'d'
   939  000874  64                 	db	101	;'e'
   940  000875  65                 	db	110	;'n'
   941  000876  6E                 	db	32
   942  000877  20                 	db	73	;'I'
   943  000878  49                 	db	110	;'n'
   944  000879  6E                 	db	102	;'f'
   945  00087A  66                 	db	111	;'o'
   946  00087B  6F                 	db	115	;'s'
   947  00087C  73                 	db	0
   948  00087D  00                 	
   949                           STR_9:
   950  00087E                     	db	73	;'I'
   951  00087E  49                 	db	108	;'l'
   952  00087F  6C                 	db	32
   953  000880  20                 	db	102	;'f'
   954  000881  66                 	db	97	;'a'
   955  000882  61                 	db	105	;'i'
   956  000883  69                 	db	116	;'t'
   957  000884  74                 	db	32
   958  000885  20                 	db	110	;'n'
   959  000886  6E                 	db	117	;'u'
   960  000887  75                 	db	105	;'i'
   961  000888  69                 	db	116	;'t'
   962  000889  74                 	db	0
   963  00088A  00                 	
   964                           STR_16:
   965  00088B                     	db	73	;'I'
   966  00088B  49                 	db	108	;'l'
   967  00088C  6C                 	db	32
   968  00088D  20                 	db	102	;'f'
   969  00088E  66                 	db	97	;'a'
   970  00088F  61                 	db	105	;'i'
   971  000890  69                 	db	116	;'t'
   972  000891  74                 	db	32
   973  000892  20                 	db	115	;'s'
   974  000893  73                 	db	101	;'e'
   975  000894  65                 	db	99	;'c'
   976  000895  63                 	db	0
   977  000896  00                 	
   978                           STR_13:
   979  000897                     	db	83	;'S'
   980  000897  53                 	db	111	;'o'
   981  000898  6F                 	db	105	;'i'
   982  000899  69                 	db	108	;'l'
   983  00089A  6C                 	db	32
   984  00089B  20                 	db	105	;'i'
   985  00089C  69                 	db	115	;'s'
   986  00089D  73                 	db	32
   987  00089E  20                 	db	119	;'w'
   988  00089F  77                 	db	101	;'e'
   989  0008A0  65                 	db	116	;'t'
   990  0008A1  74                 	db	0
   991  0008A2  00                 	
   992                           STR_12:
   993  0008A3                     	db	83	;'S'
   994  0008A3  53                 	db	111	;'o'
   995  0008A4  6F                 	db	105	;'i'
   996  0008A5  69                 	db	108	;'l'
   997  0008A6  6C                 	db	32
   998  0008A7  20                 	db	105	;'i'
   999  0008A8  69                 	db	115	;'s'
  1000  0008A9  73                 	db	32
  1001  0008AA  20                 	db	100	;'d'
  1002  0008AB  64                 	db	114	;'r'
  1003  0008AC  72                 	db	121	;'y'
  1004  0008AD  79                 	db	0
  1005  0008AE  00                 	
  1006                           STR_3:
  1007  0008AF                     	db	32
  1008  0008AF  20                 	db	84	;'T'
  1009  0008B0  54                 	db	105	;'i'
  1010  0008B1  69                 	db	109	;'m'
  1011  0008B2  6D                 	db	101	;'e'
  1012  0008B3  65                 	db	58	;':'
  1013  0008B4  3A                 	db	0
  1014  0008B5  00                 	
  1015                           STR_2:
  1016  0008B6                     	db	49	;'1'
  1017  0008B6  31                 	db	56	;'8'
  1018  0008B7  38                 	db	48	;'0'
  1019  0008B8  30                 	db	0
  1020  0008B9  00                 	
  1021                           STR_1:
  1022  0008BA                     	db	57	;'9'
  1023  0008BA  39                 	db	48	;'0'
  1024  0008BB  30                 	db	0
  1025  0008BC  00                 	
  1026                           STR_4:
  1027  0008BD                     	db	37
  1028  0008BD  25                 	db	100	;'d'
  1029  0008BE  64                 	db	0
  1030  0008BF  00                 STR_5	equ	STR_7+11
  1031  0000                     STR_8	equ	STR_4+0
  1032  0000                     STR_11	equ	STR_4+0
  1033  0000                     STR_15	equ	STR_4+0
  1034  0000                     STR_18	equ	STR_4+0
  1035  0000                     ; #config settings
  1036                           global __CFG_PLLDIV$1
  1037                           __CFG_PLLDIV$1 equ 0x0
  1038  0000                     global __CFG_CPUDIV$OSC1_PLL2
  1039                           __CFG_CPUDIV$OSC1_PLL2 equ 0x0
  1040  0000                     global __CFG_USBDIV$1
  1041                           __CFG_USBDIV$1 equ 0x0
  1042  0000                     global __CFG_FOSC$INTOSC_EC
  1043                           __CFG_FOSC$INTOSC_EC equ 0x0
  1044  0000                     global __CFG_FCMEN$OFF
  1045                           __CFG_FCMEN$OFF equ 0x0
  1046  0000                     global __CFG_IESO$OFF
  1047                           __CFG_IESO$OFF equ 0x0
  1048  0000                     global __CFG_PWRT$OFF
  1049                           __CFG_PWRT$OFF equ 0x0
  1050  0000                     global __CFG_BOR$ON
  1051                           __CFG_BOR$ON equ 0x0
  1052  0000                     global __CFG_BORV$3
  1053                           __CFG_BORV$3 equ 0x0
  1054  0000                     global __CFG_VREGEN$OFF
  1055                           __CFG_VREGEN$OFF equ 0x0
  1056  0000                     global __CFG_WDT$OFF
  1057                           __CFG_WDT$OFF equ 0x0
  1058  0000                     global __CFG_WDTPS$32768
  1059                           __CFG_WDTPS$32768 equ 0x0
  1060  0000                     global __CFG_CCP2MX$ON
  1061                           __CFG_CCP2MX$ON equ 0x0
  1062  0000                     global __CFG_PBADEN$ON
  1063                           __CFG_PBADEN$ON equ 0x0
  1064  0000                     global __CFG_LPT1OSC$OFF
  1065                           __CFG_LPT1OSC$OFF equ 0x0
  1066  0000                     global __CFG_MCLRE$OFF
  1067                           __CFG_MCLRE$OFF equ 0x0
  1068  0000                     global __CFG_STVREN$ON
  1069                           __CFG_STVREN$ON equ 0x0
  1070  0000                     global __CFG_LVP$OFF
  1071                           __CFG_LVP$OFF equ 0x0
  1072  0000                     global __CFG_ICPRT$OFF
  1073                           __CFG_ICPRT$OFF equ 0x0
  1074  0000                     global __CFG_XINST$OFF
  1075                           __CFG_XINST$OFF equ 0x0
  1076  0000                     global __CFG_CP0$OFF
  1077                           __CFG_CP0$OFF equ 0x0
  1078  0000                     global __CFG_CP1$OFF
  1079                           __CFG_CP1$OFF equ 0x0
  1080  0000                     global __CFG_CP2$OFF
  1081                           __CFG_CP2$OFF equ 0x0
  1082  0000                     global __CFG_CP3$OFF
  1083                           __CFG_CP3$OFF equ 0x0
  1084  0000                     global __CFG_CPB$OFF
  1085                           __CFG_CPB$OFF equ 0x0
  1086  0000                     global __CFG_CPD$OFF
  1087                           __CFG_CPD$OFF equ 0x0
  1088  0000                     global __CFG_WRT0$OFF
  1089                           __CFG_WRT0$OFF equ 0x0
  1090  0000                     global __CFG_WRT1$OFF
  1091                           __CFG_WRT1$OFF equ 0x0
  1092  0000                     global __CFG_WRT2$OFF
  1093                           __CFG_WRT2$OFF equ 0x0
  1094  0000                     global __CFG_WRT3$OFF
  1095                           __CFG_WRT3$OFF equ 0x0
  1096  0000                     global __CFG_WRTC$OFF
  1097                           __CFG_WRTC$OFF equ 0x0
  1098  0000                     global __CFG_WRTB$OFF
  1099                           __CFG_WRTB$OFF equ 0x0
  1100  0000                     global __CFG_WRTD$OFF
  1101                           __CFG_WRTD$OFF equ 0x0
  1102  0000                     global __CFG_EBTR0$OFF
  1103                           __CFG_EBTR0$OFF equ 0x0
  1104  0000                     global __CFG_EBTR1$OFF
  1105                           __CFG_EBTR1$OFF equ 0x0
  1106  0000                     global __CFG_EBTR2$OFF
  1107                           __CFG_EBTR2$OFF equ 0x0
  1108  0000                     global __CFG_EBTR3$OFF
  1109                           __CFG_EBTR3$OFF equ 0x0
  1110  0000                     global __CFG_EBTRB$OFF
  1111                           __CFG_EBTRB$OFF equ 0x0
  1112  0000                     	file	"C:\Users\Nicol\AppData\Local\Temp\s44k."
  1113                           	line	#
  1114                           psect	cinit,class=CODE,delta=1,reloc=2
  1115                           global __pcinit
  1116                           __pcinit:
  1117  0051B6                     global start_initialization
  1118                           start_initialization:
  1119  0051B6                     
  1120                           global __initialization
  1121                           __initialization:
  1122  0051B6                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
  1123                           global __pbssBANK0
  1124                           __pbssBANK0:
  1125  0000EE                     roundf@F521:
  1126  0000EE                            ds      4
  1127  0000EE                     _nout:
  1128  0000F2                            ds      2
  1129  0000F2                     _width:
  1130  0000F4                            ds      2
  1131  0000F4                     _prec:
  1132  0000F6                            ds      2
  1133  0000F6                     _flags:
  1134  0000F8                            ds      2
  1135  0000F8                     	global	_t
  1136                           _t:
  1137  0000FA                            ds      2
  1138  0000FA                     	global	_h
  1139                           _h:
  1140  0000FC                            ds      2
  1141  0000FC                     	global	_l
  1142                           _l:
  1143  0000FE                            ds      1
  1144  0000FE                     psect	dataBANK0,class=BANK0,space=1,noexec,lowdata
  1145                           global __pdataBANK0
  1146                           __pdataBANK0:
  1147  0000AC                     	file	"main.c"
  1148                           	line	117
  1149                           lcd_sol@F4232:
  1150  0000AC                            ds      16
  1151  0000AC                     psect	dataBANK0
  1152                           	file	"main.c"
  1153                           	line	94
  1154                           lcd_lum@F4226:
  1155  0000BC                            ds      16
  1156  0000BC                     psect	dataBANK0
  1157                           	file	"./servomoteur.h"
  1158                           	line	91
  1159                           lcd_arrosage@F4173:
  1160  0000CC                            ds      16
  1161  0000CC                     psect	dataBANK0
  1162                           	file	"main.c"
  1163                           	line	182
  1164                           lcd_temp@F4248:
  1165  0000DC                            ds      3
  1166  0000DC                     psect	dataBANK0
  1167                           	file	"main.c"
  1168                           	line	176
  1169                           lcd_temp@F4245:
  1170  0000DF                            ds      3
  1171  0000DF                     psect	dataBANK0
  1172                           	file	"main.c"
  1173                           	line	153
  1174                           lcd_humid@F4239:
  1175  0000E2                            ds      3
  1176  0000E2                     psect	dataBANK0
  1177                           	file	"main.c"
  1178                           	line	142
  1179                           lcd_humid@F4236:
  1180  0000E5                            ds      3
  1181  0000E5                     psect	dataBANK0
  1182                           	file	"main.c"
  1183                           	line	115
  1184                           lcd_sol@F4230:
  1185  0000E8                            ds      3
  1186  0000E8                     psect	dataBANK0
  1187                           	file	"main.c"
  1188                           	line	91
  1189                           lcd_lum@F4224:
  1190  0000EB                            ds      3
  1191  0000EB                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
  1192                           global __pbssBANK1
  1193                           __pbssBANK1:
  1194  000100                     _dbuf:
  1195  000100                            ds      32
  1196  000100                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
  1197                           global __pdataBANK1
  1198                           __pdataBANK1:
  1199  000120                     	file	"main.c"
  1200                           	line	184
  1201                           lcd_temp@F4250:
  1202  000120                            ds      16
  1203  000120                     psect	dataBANK1
  1204                           	file	"main.c"
  1205                           	line	155
  1206                           lcd_humid@F4241:
  1207  000130                            ds      16
  1208  000130                     	file	"C:\Users\Nicol\AppData\Local\Temp\s44k."
  1209                           	line	#
  1210                           psect	cinit
  1211                           ; Initialize objects allocated to BANK1 (32 bytes)
  1212                           	global __pidataBANK1
  1213                           	; load TBLPTR registers with __pidataBANK1
  1214                           	movlw	low (__pidataBANK1)
  1215  0051B6  0E66               	movwf	tblptrl
  1216  0051B8  6EF6               	movlw	high(__pidataBANK1)
  1217  0051BA  0E57               	movwf	tblptrh
  1218  0051BC  6EF7               	movlw	low highword(__pidataBANK1)
  1219  0051BE  0E00               	movwf	tblptru
  1220  0051C0  6EF8               	lfsr	0,__pdataBANK1
  1221  0051C2  EE01  F020         	lfsr	1,32
  1222  0051C6  EE10 F020          	copy_data0:
  1223  0051CA                     	tblrd	*+
  1224  0051CA  0009               	movff	tablat, postinc0
  1225  0051CC  CFF5 FFEE          	movf	postdec1,w
  1226  0051D0  50E5               	movf	fsr1l,w
  1227  0051D2  50E1               	bnz	copy_data0
  1228  0051D4  E1FA               ; Initialize objects allocated to BANK0 (66 bytes)
  1229                           	global __pidataBANK0
  1230                           	; load TBLPTR registers with __pidataBANK0
  1231                           	movlw	low (__pidataBANK0)
  1232  0051D6  0EFA               	movwf	tblptrl
  1233  0051D8  6EF6               	movlw	high(__pidataBANK0)
  1234  0051DA  0E55               	movwf	tblptrh
  1235  0051DC  6EF7               	movlw	low highword(__pidataBANK0)
  1236  0051DE  0E00               	movwf	tblptru
  1237  0051E0  6EF8               	lfsr	0,__pdataBANK0
  1238  0051E2  EE00  F0AC         	lfsr	1,66
  1239  0051E6  EE10 F042          	copy_data1:
  1240  0051EA                     	tblrd	*+
  1241  0051EA  0009               	movff	tablat, postinc0
  1242  0051EC  CFF5 FFEE          	movf	postdec1,w
  1243  0051F0  50E5               	movf	fsr1l,w
  1244  0051F2  50E1               	bnz	copy_data1
  1245  0051F4  E1FA               	line	#
  1246                           ; Clear objects allocated to BANK1 (32 bytes)
  1247                           	global __pbssBANK1
  1248                           lfsr	0,__pbssBANK1
  1249  0051F6  EE01  F000         movlw	32
  1250  0051FA  0E20               clear_0:
  1251  0051FC                     clrf	postinc0,c
  1252  0051FC  6AEE               decf	wreg
  1253  0051FE  06E8               bnz	clear_0
  1254  005200  E1FD               ; Clear objects allocated to BANK0 (17 bytes)
  1255                           	global __pbssBANK0
  1256                           lfsr	0,__pbssBANK0
  1257  005202  EE00  F0EE         movlw	17
  1258  005206  0E11               clear_1:
  1259  005208                     clrf	postinc0,c
  1260  005208  6AEE               decf	wreg
  1261  00520A  06E8               bnz	clear_1
  1262  00520C  E1FD               psect cinit,class=CODE,delta=1
  1263                           global end_of_initialization,__end_of__initialization
  1264                           
  1265                           ;End of C runtime variable initialization code
  1266                           
  1267                           end_of_initialization:
  1268  00520E                     __end_of__initialization:
  1269  00520E                     	GLOBAL	__Lmediumconst
  1270                           	movlw	low highword(__Lmediumconst)
  1271  00520E  0E00               	movwf	tblptru
  1272  005210  6EF8               movlb 0
  1273  005212  0100               goto _main	;jump to C main() function
  1274  005214  EF62  F020         psect	cstackBANK0,class=BANK0,space=1,noexec
  1275                           global __pcstackBANK0
  1276                           __pcstackBANK0:
  1277  000060                     ?_SetDutyCycleTo:	; 1 bytes @ 0x0
  1278  000060                     	global	sprintf@ret
  1279                           sprintf@ret:	; 2 bytes @ 0x0
  1280  000060                     	global	SetDutyCycleTo@Duty_cycle
  1281                           SetDutyCycleTo@Duty_cycle:	; 4 bytes @ 0x0
  1282  000060                     	global	_roundf$1283
  1283                           _roundf$1283:	; 4 bytes @ 0x0
  1284  000060                     	ds   2
  1285  000060                     	global	sprintf@ap
  1286                           sprintf@ap:	; 2 bytes @ 0x2
  1287  000062                     	ds   2
  1288  000062                     	global	SetDutyCycleTo@Period
  1289                           SetDutyCycleTo@Period:	; 2 bytes @ 0x4
  1290  000064                     	global	roundf@e
  1291                           roundf@e:	; 2 bytes @ 0x4
  1292  000064                     	global	sprintf@f
  1293                           sprintf@f:	; 6 bytes @ 0x4
  1294  000064                     	ds   2
  1295  000064                     ??_SetDutyCycleTo:	; 1 bytes @ 0x6
  1296  000066                     	global	_roundf$1282
  1297                           _roundf$1282:	; 4 bytes @ 0x6
  1298  000066                     	ds   2
  1299  000066                     	global	_SetDutyCycleTo$1281
  1300                           _SetDutyCycleTo$1281:	; 4 bytes @ 0x8
  1301  000068                     	ds   2
  1302  000068                     ?_lcd_arrosage:	; 1 bytes @ 0xA
  1303  00006A                     	global	lcd_arrosage@angle
  1304                           lcd_arrosage@angle:	; 4 bytes @ 0xA
  1305  00006A                     	global	roundf@u
  1306                           roundf@u:	; 4 bytes @ 0xA
  1307  00006A                     	global	lcd_lum@lum_info
  1308                           lcd_lum@lum_info:	; 16 bytes @ 0xA
  1309  00006A                     	global	lcd_sol@sol_info
  1310                           lcd_sol@sol_info:	; 16 bytes @ 0xA
  1311  00006A                     	global	lcd_humid@humid_info
  1312                           lcd_humid@humid_info:	; 16 bytes @ 0xA
  1313  00006A                     	global	lcd_temp@temp_info
  1314                           lcd_temp@temp_info:	; 16 bytes @ 0xA
  1315  00006A                     	ds   2
  1316  00006A                     	global	SetDutyCycleTo@PWM10BitValue
  1317                           SetDutyCycleTo@PWM10BitValue:	; 2 bytes @ 0xC
  1318  00006C                     	ds   2
  1319  00006C                     ?_arrosage:	; 1 bytes @ 0xE
  1320  00006E                     	global	lcd_arrosage@time
  1321                           lcd_arrosage@time:	; 2 bytes @ 0xE
  1322  00006E                     	global	arrosage@duty_cycle
  1323                           arrosage@duty_cycle:	; 4 bytes @ 0xE
  1324  00006E                     	global	roundf@y
  1325                           roundf@y:	; 4 bytes @ 0xE
  1326  00006E                     	ds   2
  1327  00006E                     	global	lcd_arrosage@data
  1328                           lcd_arrosage@data:	; 16 bytes @ 0x10
  1329  000070                     	ds   2
  1330  000070                     	global	?_setPeriodTo
  1331                           ?_setPeriodTo:	; 2 bytes @ 0x12
  1332  000072                     	global	arrosage@Period
  1333                           arrosage@Period:	; 2 bytes @ 0x12
  1334  000072                     	global	setPeriodTo@FPWM
  1335                           setPeriodTo@FPWM:	; 4 bytes @ 0x12
  1336  000072                     	ds   2
  1337  000072                     	global	arrosage@time
  1338                           arrosage@time:	; 2 bytes @ 0x14
  1339  000074                     	ds   2
  1340  000074                     	global	_setPeriodTo$1280
  1341                           _setPeriodTo$1280:	; 4 bytes @ 0x16
  1342  000076                     	ds   4
  1343  000076                     	global	setPeriodTo@TimerPrescaleBits
  1344                           setPeriodTo@TimerPrescaleBits:	; 2 bytes @ 0x1A
  1345  00007A                     	global	lcd_lum@value
  1346                           lcd_lum@value:	; 3 bytes @ 0x1A
  1347  00007A                     	global	lcd_sol@value
  1348                           lcd_sol@value:	; 3 bytes @ 0x1A
  1349  00007A                     	global	lcd_humid@value
  1350                           lcd_humid@value:	; 3 bytes @ 0x1A
  1351  00007A                     	global	lcd_temp@value
  1352                           lcd_temp@value:	; 3 bytes @ 0x1A
  1353  00007A                     	ds   2
  1354  00007A                     	global	setPeriodTo@TimerPrescaleValue
  1355                           setPeriodTo@TimerPrescaleValue:	; 2 bytes @ 0x1C
  1356  00007C                     	ds   1
  1357  00007C                     	global	lcd_humid@humidity
  1358                           lcd_humid@humidity:	; 3 bytes @ 0x1D
  1359  00007D                     	global	lcd_temp@temperature
  1360                           lcd_temp@temperature:	; 3 bytes @ 0x1D
  1361  00007D                     	ds   1
  1362  00007D                     	global	setPeriodTo@FOSC
  1363                           setPeriodTo@FOSC:	; 4 bytes @ 0x1E
  1364  00007E                     	ds   2
  1365  00007E                     	global	lcd_arrosage@time2
  1366                           lcd_arrosage@time2:	; 2 bytes @ 0x20
  1367  000080                     	global	lcd_humid@humid
  1368                           lcd_humid@humid:	; 2 bytes @ 0x20
  1369  000080                     	global	lcd_temp@temp
  1370                           lcd_temp@temp:	; 2 bytes @ 0x20
  1371  000080                     	ds   2
  1372  000080                     	global	setPeriodTo@clockSelectBits
  1373                           setPeriodTo@clockSelectBits:	; 2 bytes @ 0x22
  1374  000082                     	ds   2
  1375  000082                     	global	setPeriodTo@period
  1376                           setPeriodTo@period:	; 4 bytes @ 0x24
  1377  000084                     	ds   4
  1378  000084                     	global	setPeriodTo@_resolution
  1379                           setPeriodTo@_resolution:	; 4 bytes @ 0x28
  1380  000088                     	ds   4
  1381  000088                     ?_stream:	; 1 bytes @ 0x2C
  1382  00008C                     	global	stream@temperature
  1383                           stream@temperature:	; 2 bytes @ 0x2C
  1384  00008C                     	ds   2
  1385  00008C                     	global	stream@air_humidity
  1386                           stream@air_humidity:	; 2 bytes @ 0x2E
  1387  00008E                     	ds   2
  1388  00008E                     	global	stream@photoresistance
  1389                           stream@photoresistance:	; 2 bytes @ 0x30
  1390  000090                     	ds   2
  1391  000090                     ??_stream:	; 1 bytes @ 0x32
  1392  000092                     	ds   1
  1393  000092                     	global	stream@Period
  1394                           stream@Period:	; 2 bytes @ 0x33
  1395  000093                     	ds   2
  1396  000093                     ?_main:	; 2 bytes @ 0x35
  1397  000095                     main@argc:	; 2 bytes @ 0x35
  1398  000095                     	ds   2
  1399  000095                     main@argv:	; 3 bytes @ 0x37
  1400  000097                     	ds   3
  1401  000097                     	global	main@x_lum
  1402                           main@x_lum:	; 2 bytes @ 0x3A
  1403  00009A                     	ds   2
  1404  00009A                     	global	main@sol
  1405                           main@sol:	; 2 bytes @ 0x3C
  1406  00009C                     	ds   2
  1407  00009C                     	global	main@x_humid
  1408                           main@x_humid:	; 2 bytes @ 0x3E
  1409  00009E                     	ds   2
  1410  00009E                     	global	main@x_temp
  1411                           main@x_temp:	; 2 bytes @ 0x40
  1412  0000A0                     	ds   2
  1413  0000A0                     	global	main@Period
  1414                           main@Period:	; 2 bytes @ 0x42
  1415  0000A2                     	ds   2
  1416  0000A2                     	global	main@lum
  1417                           main@lum:	; 2 bytes @ 0x44
  1418  0000A4                     	ds   2
  1419  0000A4                     	global	main@x_sol
  1420                           main@x_sol:	; 2 bytes @ 0x46
  1421  0000A6                     	ds   2
  1422  0000A6                     	global	main@humid
  1423                           main@humid:	; 2 bytes @ 0x48
  1424  0000A8                     	ds   2
  1425  0000A8                     	global	main@temp
  1426                           main@temp:	; 2 bytes @ 0x4A
  1427  0000AA                     	ds   2
  1428  0000AA                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1429                           global __pcstackCOMRAM
  1430                           __pcstackCOMRAM:
  1431  000001                     ?___fleq:	; 1 bit 
  1432  000001                     ?___flge:	; 1 bit 
  1433  000001                     ?_MSdelay:	; 1 bytes @ 0x0
  1434  000001                     ?_LCD_Command:	; 1 bytes @ 0x0
  1435  000001                     ?_putch:	; 1 bytes @ 0x0
  1436  000001                     ??_putch:	; 1 bytes @ 0x0
  1437  000001                     ?_adc_init:	; 1 bytes @ 0x0
  1438  000001                     ??_adc_init:	; 1 bytes @ 0x0
  1439  000001                     ?_LCD_Init:	; 1 bytes @ 0x0
  1440  000001                     ?_LCD_Char:	; 1 bytes @ 0x0
  1441  000001                     ?_LCD_Clear:	; 1 bytes @ 0x0
  1442  000001                     ?_PWM_Init:	; 1 bytes @ 0x0
  1443  000001                     ??_PWM_Init:	; 1 bytes @ 0x0
  1444  000001                     ?_delay:	; 1 bytes @ 0x0
  1445  000001                     	global	?_humid_convert
  1446                           ?_humid_convert:	; 2 bytes @ 0x0
  1447  000001                     	global	?_temp_convert
  1448                           ?_temp_convert:	; 2 bytes @ 0x0
  1449  000001                     ?_fputc:	; 2 bytes @ 0x0
  1450  000001                     	global	?_strlen
  1451                           ?_strlen:	; 2 bytes @ 0x0
  1452  000001                     	global	?_isspace
  1453                           ?_isspace:	; 2 bytes @ 0x0
  1454  000001                     	global	?_isdigit
  1455                           ?_isdigit:	; 2 bytes @ 0x0
  1456  000001                     	global	?___wmul
  1457                           ?___wmul:	; 2 bytes @ 0x0
  1458  000001                     	global	?___awdiv
  1459                           ?___awdiv:	; 2 bytes @ 0x0
  1460  000001                     	global	?___lwdiv
  1461                           ?___lwdiv:	; 2 bytes @ 0x0
  1462  000001                     	global	?___flneg
  1463                           ?___flneg:	; 4 bytes @ 0x0
  1464  000001                     	global	?___xxtofl
  1465                           ?___xxtofl:	; 4 bytes @ 0x0
  1466  000001                     	global	?___aodiv
  1467                           ?___aodiv:	; 8 bytes @ 0x0
  1468  000001                     	global	?___aomod
  1469                           ?___aomod:	; 8 bytes @ 0x0
  1470  000001                     putch@c:	; 1 bytes @ 0x0
  1471  000001                     	global	MSdelay@val
  1472                           MSdelay@val:	; 2 bytes @ 0x0
  1473  000001                     	global	delay@val
  1474                           delay@val:	; 2 bytes @ 0x0
  1475  000001                     	global	humid_convert@x
  1476                           humid_convert@x:	; 2 bytes @ 0x0
  1477  000001                     	global	temp_convert@x
  1478                           temp_convert@x:	; 2 bytes @ 0x0
  1479  000001                     	global	___wmul@multiplier
  1480                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1481  000001                     	global	___awdiv@dividend
  1482                           ___awdiv@dividend:	; 2 bytes @ 0x0
  1483  000001                     	global	___lwdiv@dividend
  1484                           ___lwdiv@dividend:	; 2 bytes @ 0x0
  1485  000001                     	global	isdigit@c
  1486                           isdigit@c:	; 2 bytes @ 0x0
  1487  000001                     	global	isspace@c
  1488                           isspace@c:	; 2 bytes @ 0x0
  1489  000001                     	global	fputc@c
  1490                           fputc@c:	; 2 bytes @ 0x0
  1491  000001                     	global	strlen@s
  1492                           strlen@s:	; 2 bytes @ 0x0
  1493  000001                     	global	___fleq@ff1
  1494                           ___fleq@ff1:	; 4 bytes @ 0x0
  1495  000001                     	global	___flge@ff1
  1496                           ___flge@ff1:	; 4 bytes @ 0x0
  1497  000001                     	global	___flneg@f1
  1498                           ___flneg@f1:	; 4 bytes @ 0x0
  1499  000001                     	global	___xxtofl@val
  1500                           ___xxtofl@val:	; 4 bytes @ 0x0
  1501  000001                     	global	___aodiv@dividend
  1502                           ___aodiv@dividend:	; 8 bytes @ 0x0
  1503  000001                     	global	___aomod@dividend
  1504                           ___aomod@dividend:	; 8 bytes @ 0x0
  1505  000001                     	ds   2
  1506  000001                     ??_MSdelay:	; 1 bytes @ 0x2
  1507  000003                     ??_humid_convert:	; 1 bytes @ 0x2
  1508  000003                     ??_temp_convert:	; 1 bytes @ 0x2
  1509  000003                     ??_strlen:	; 1 bytes @ 0x2
  1510  000003                     ??_isspace:	; 1 bytes @ 0x2
  1511  000003                     ??_isdigit:	; 1 bytes @ 0x2
  1512  000003                     ??_delay:	; 1 bytes @ 0x2
  1513  000003                     	global	MSdelay@i
  1514                           MSdelay@i:	; 2 bytes @ 0x2
  1515  000003                     	global	delay@i
  1516                           delay@i:	; 2 bytes @ 0x2
  1517  000003                     	global	humid_convert@humidity
  1518                           humid_convert@humidity:	; 2 bytes @ 0x2
  1519  000003                     	global	temp_convert@temperature
  1520                           temp_convert@temperature:	; 2 bytes @ 0x2
  1521  000003                     	global	___wmul@multiplicand
  1522                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1523  000003                     	global	___awdiv@divisor
  1524                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1525  000003                     	global	___lwdiv@divisor
  1526                           ___lwdiv@divisor:	; 2 bytes @ 0x2
  1527  000003                     	global	fputc@fp
  1528                           fputc@fp:	; 2 bytes @ 0x2
  1529  000003                     	ds   2
  1530  000003                     ??_fputc:	; 1 bytes @ 0x4
  1531  000005                     ??___wmul:	; 1 bytes @ 0x4
  1532  000005                     ??___awdiv:	; 1 bytes @ 0x4
  1533  000005                     ??___flneg:	; 1 bytes @ 0x4
  1534  000005                     ??___lwdiv:	; 1 bytes @ 0x4
  1535  000005                     ??___xxtofl:	; 1 bytes @ 0x4
  1536  000005                     	global	___awdiv@counter
  1537                           ___awdiv@counter:	; 1 bytes @ 0x4
  1538  000005                     	global	MSdelay@j
  1539                           MSdelay@j:	; 2 bytes @ 0x4
  1540  000005                     	global	delay@j
  1541                           delay@j:	; 2 bytes @ 0x4
  1542  000005                     	global	___wmul@product
  1543                           ___wmul@product:	; 2 bytes @ 0x4
  1544  000005                     	global	___lwdiv@quotient
  1545                           ___lwdiv@quotient:	; 2 bytes @ 0x4
  1546  000005                     	global	strlen@a
  1547                           strlen@a:	; 2 bytes @ 0x4
  1548  000005                     	global	___fleq@ff2
  1549                           ___fleq@ff2:	; 4 bytes @ 0x4
  1550  000005                     	global	___flge@ff2
  1551                           ___flge@ff2:	; 4 bytes @ 0x4
  1552  000005                     	ds   1
  1553  000005                     	global	___awdiv@sign
  1554                           ___awdiv@sign:	; 1 bytes @ 0x5
  1555  000006                     	ds   1
  1556  000006                     ??_LCD_Command:	; 1 bytes @ 0x6
  1557  000007                     ??_LCD_Char:	; 1 bytes @ 0x6
  1558  000007                     	global	?_adc_read_lum
  1559                           ?_adc_read_lum:	; 2 bytes @ 0x6
  1560  000007                     	global	?_adc_read_sol
  1561                           ?_adc_read_sol:	; 2 bytes @ 0x6
  1562  000007                     	global	?_adc_read_humid
  1563                           ?_adc_read_humid:	; 2 bytes @ 0x6
  1564  000007                     	global	?_adc_read_temp
  1565                           ?_adc_read_temp:	; 2 bytes @ 0x6
  1566  000007                     ?_strcpy:	; 2 bytes @ 0x6
  1567  000007                     	global	___lwdiv@counter
  1568                           ___lwdiv@counter:	; 1 bytes @ 0x6
  1569  000007                     	global	_isspace$980
  1570                           _isspace$980:	; 1 bytes @ 0x6
  1571  000007                     	global	___awdiv@quotient
  1572                           ___awdiv@quotient:	; 2 bytes @ 0x6
  1573  000007                     	global	strcpy@dest
  1574                           strcpy@dest:	; 2 bytes @ 0x6
  1575  000007                     	ds   1
  1576  000007                     	global	?_atoi
  1577                           ?_atoi:	; 2 bytes @ 0x7
  1578  000008                     	global	?___lwmod
  1579                           ?___lwmod:	; 2 bytes @ 0x7
  1580  000008                     	global	LCD_Command@cmd
  1581                           LCD_Command@cmd:	; 1 bytes @ 0x7
  1582  000008                     	global	LCD_Char@dat
  1583                           LCD_Char@dat:	; 1 bytes @ 0x7
  1584  000008                     	global	___lwmod@dividend
  1585                           ___lwmod@dividend:	; 2 bytes @ 0x7
  1586  000008                     	global	atoi@s
  1587                           atoi@s:	; 2 bytes @ 0x7
  1588  000008                     	ds   1
  1589  000008                     ??_adc_read_lum:	; 1 bytes @ 0x8
  1590  000009                     ??_adc_read_sol:	; 1 bytes @ 0x8
  1591  000009                     ??_adc_read_humid:	; 1 bytes @ 0x8
  1592  000009                     ??_adc_read_temp:	; 1 bytes @ 0x8
  1593  000009                     ??_LCD_Init:	; 1 bytes @ 0x8
  1594  000009                     ?_LCD_String:	; 1 bytes @ 0x8
  1595  000009                     ??_LCD_Clear:	; 1 bytes @ 0x8
  1596  000009                     ??___fleq:	; 1 bytes @ 0x8
  1597  000009                     ??___flge:	; 1 bytes @ 0x8
  1598  000009                     	global	___xxtofl@sign
  1599                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1600  000009                     	global	LCD_String@msg
  1601                           LCD_String@msg:	; 2 bytes @ 0x8
  1602  000009                     	global	strcpy@src
  1603                           strcpy@src:	; 2 bytes @ 0x8
  1604  000009                     	global	___aodiv@divisor
  1605                           ___aodiv@divisor:	; 8 bytes @ 0x8
  1606  000009                     	global	___aomod@divisor
  1607                           ___aomod@divisor:	; 8 bytes @ 0x8
  1608  000009                     	ds   1
  1609  000009                     ??_atoi:	; 1 bytes @ 0x9
  1610  00000A                     ?_fputs:	; 2 bytes @ 0x9
  1611  00000A                     	global	___xxtofl@exp
  1612                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1613  00000A                     	global	___lwmod@divisor
  1614                           ___lwmod@divisor:	; 2 bytes @ 0x9
  1615  00000A                     	global	fputs@s
  1616                           fputs@s:	; 2 bytes @ 0x9
  1617  00000A                     	ds   1
  1618  00000A                     ??_strcpy:	; 1 bytes @ 0xA
  1619  00000B                     ??_LCD_String:	; 1 bytes @ 0xA
  1620  00000B                     ?_LCD_String_xy:	; 1 bytes @ 0xA
  1621  00000B                     	global	LCD_String_xy@pos
  1622                           LCD_String_xy@pos:	; 1 bytes @ 0xA
  1623  00000B                     	global	___xxtofl@arg
  1624                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1625  00000B                     	ds   1
  1626  00000B                     ??___lwmod:	; 1 bytes @ 0xB
  1627  00000C                     	global	___lwmod@counter
  1628                           ___lwmod@counter:	; 1 bytes @ 0xB
  1629  00000C                     	global	LCD_String_xy@msg
  1630                           LCD_String_xy@msg:	; 2 bytes @ 0xB
  1631  00000C                     	global	fputs@fp
  1632                           fputs@fp:	; 2 bytes @ 0xB
  1633  00000C                     	ds   1
  1634  00000C                     	global	strcpy@s
  1635                           strcpy@s:	; 2 bytes @ 0xC
  1636  00000D                     	ds   1
  1637  00000D                     ??_fputs:	; 1 bytes @ 0xD
  1638  00000E                     ??_LCD_String_xy:	; 1 bytes @ 0xD
  1639  00000E                     	global	LCD_String_xy@row
  1640                           LCD_String_xy@row:	; 1 bytes @ 0xD
  1641  00000E                     	global	fputs@c
  1642                           fputs@c:	; 1 bytes @ 0xD
  1643  00000E                     	global	atoi@neg
  1644                           atoi@neg:	; 2 bytes @ 0xD
  1645  00000E                     	ds   1
  1646  00000E                     	global	?___flmul
  1647                           ?___flmul:	; 4 bytes @ 0xE
  1648  00000F                     	global	LCD_String_xy@location
  1649                           LCD_String_xy@location:	; 1 bytes @ 0xE
  1650  00000F                     	global	fputs@i
  1651                           fputs@i:	; 2 bytes @ 0xE
  1652  00000F                     	global	strcpy@d
  1653                           strcpy@d:	; 2 bytes @ 0xE
  1654  00000F                     	global	___flmul@b
  1655                           ___flmul@b:	; 4 bytes @ 0xE
  1656  00000F                     	ds   1
  1657  00000F                     	global	_atoi$962
  1658                           _atoi$962:	; 2 bytes @ 0xF
  1659  000010                     	ds   1
  1660  000010                     ??___aodiv:	; 1 bytes @ 0x10
  1661  000011                     ??___aomod:	; 1 bytes @ 0x10
  1662  000011                     ?_strcat:	; 2 bytes @ 0x10
  1663  000011                     	global	?_pad
  1664                           ?_pad:	; 2 bytes @ 0x10
  1665  000011                     	global	___aodiv@counter
  1666                           ___aodiv@counter:	; 1 bytes @ 0x10
  1667  000011                     	global	___aomod@counter
  1668                           ___aomod@counter:	; 1 bytes @ 0x10
  1669  000011                     	global	pad@fp
  1670                           pad@fp:	; 2 bytes @ 0x10
  1671  000011                     	global	strcat@dest
  1672                           strcat@dest:	; 2 bytes @ 0x10
  1673  000011                     	ds   1
  1674  000011                     	global	___aodiv@sign
  1675                           ___aodiv@sign:	; 1 bytes @ 0x11
  1676  000012                     	global	___aomod@sign
  1677                           ___aomod@sign:	; 1 bytes @ 0x11
  1678  000012                     	global	_atoi$964
  1679                           _atoi$964:	; 2 bytes @ 0x11
  1680  000012                     	ds   1
  1681  000012                     	global	?_abs
  1682                           ?_abs:	; 2 bytes @ 0x12
  1683  000013                     	global	pad@buf
  1684                           pad@buf:	; 2 bytes @ 0x12
  1685  000013                     	global	abs@a
  1686                           abs@a:	; 2 bytes @ 0x12
  1687  000013                     	global	strcat@src
  1688                           strcat@src:	; 2 bytes @ 0x12
  1689  000013                     	global	___flmul@a
  1690                           ___flmul@a:	; 4 bytes @ 0x12
  1691  000013                     	global	___aodiv@quotient
  1692                           ___aodiv@quotient:	; 8 bytes @ 0x12
  1693  000013                     	ds   1
  1694  000013                     	global	_atoi$963
  1695                           _atoi$963:	; 1 bytes @ 0x13
  1696  000014                     	ds   1
  1697  000014                     ??_strcat:	; 1 bytes @ 0x14
  1698  000015                     ??_abs:	; 1 bytes @ 0x14
  1699  000015                     	global	pad@p
  1700                           pad@p:	; 2 bytes @ 0x14
  1701  000015                     	global	atoi@n
  1702                           atoi@n:	; 2 bytes @ 0x14
  1703  000015                     	ds   2
  1704  000015                     ??___flmul:	; 1 bytes @ 0x16
  1705  000017                     ??_pad:	; 1 bytes @ 0x16
  1706  000017                     	global	?_hex_converter
  1707                           ?_hex_converter:	; 2 bytes @ 0x16
  1708  000017                     	global	hex_converter@x
  1709                           hex_converter@x:	; 2 bytes @ 0x16
  1710  000017                     	ds   1
  1711  000017                     	global	pad@i
  1712                           pad@i:	; 2 bytes @ 0x17
  1713  000018                     	ds   1
  1714  000018                     ??_hex_converter:	; 1 bytes @ 0x18
  1715  000019                     	global	hex_converter@result
  1716                           hex_converter@result:	; 2 bytes @ 0x18
  1717  000019                     	ds   1
  1718  000019                     	global	pad@w
  1719                           pad@w:	; 2 bytes @ 0x19
  1720  00001A                     	ds   1
  1721  00001A                     	global	___flmul@sign
  1722                           ___flmul@sign:	; 1 bytes @ 0x1A
  1723  00001B                     	global	hex_converter@convert
  1724                           hex_converter@convert:	; 3 bytes @ 0x1A
  1725  00001B                     	ds   1
  1726  00001B                     	global	?_dtoa
  1727                           ?_dtoa:	; 2 bytes @ 0x1B
  1728  00001C                     	global	dtoa@fp
  1729                           dtoa@fp:	; 2 bytes @ 0x1B
  1730  00001C                     	global	___flmul@grs
  1731                           ___flmul@grs:	; 4 bytes @ 0x1B
  1732  00001C                     	ds   2
  1733  00001C                     	global	dtoa@d
  1734                           dtoa@d:	; 8 bytes @ 0x1D
  1735  00001E                     	ds   2
  1736  00001E                     	global	___flmul@aexp
  1737                           ___flmul@aexp:	; 1 bytes @ 0x1F
  1738  000020                     	ds   1
  1739  000020                     	global	___flmul@bexp
  1740                           ___flmul@bexp:	; 1 bytes @ 0x20
  1741  000021                     	ds   1
  1742  000021                     	global	___flmul@prod
  1743                           ___flmul@prod:	; 4 bytes @ 0x21
  1744  000022                     	ds   4
  1745  000022                     ??_dtoa:	; 1 bytes @ 0x25
  1746  000026                     	global	___flmul@temp
  1747                           ___flmul@temp:	; 2 bytes @ 0x25
  1748  000026                     	ds   2
  1749  000026                     	global	?___fldiv
  1750                           ?___fldiv:	; 4 bytes @ 0x27
  1751  000028                     	global	___fldiv@b
  1752                           ___fldiv@b:	; 4 bytes @ 0x27
  1753  000028                     	ds   4
  1754  000028                     	global	___fldiv@a
  1755                           ___fldiv@a:	; 4 bytes @ 0x2B
  1756  00002C                     	ds   2
  1757  00002C                     	global	_dtoa$487
  1758                           _dtoa$487:	; 2 bytes @ 0x2D
  1759  00002E                     	ds   2
  1760  00002E                     ??___fldiv:	; 1 bytes @ 0x2F
  1761  000030                     	global	dtoa@p
  1762                           dtoa@p:	; 2 bytes @ 0x2F
  1763  000030                     	ds   2
  1764  000030                     	global	dtoa@w
  1765                           dtoa@w:	; 2 bytes @ 0x31
  1766  000032                     	ds   2
  1767  000032                     	global	dtoa@s
  1768                           dtoa@s:	; 2 bytes @ 0x33
  1769  000034                     	global	___fldiv@rem
  1770                           ___fldiv@rem:	; 4 bytes @ 0x33
  1771  000034                     	ds   2
  1772  000034                     	global	dtoa@n
  1773                           dtoa@n:	; 8 bytes @ 0x35
  1774  000036                     	ds   2
  1775  000036                     	global	___fldiv@sign
  1776                           ___fldiv@sign:	; 1 bytes @ 0x37
  1777  000038                     	ds   1
  1778  000038                     	global	___fldiv@new_exp
  1779                           ___fldiv@new_exp:	; 2 bytes @ 0x38
  1780  000039                     	ds   2
  1781  000039                     	global	___fldiv@grs
  1782                           ___fldiv@grs:	; 4 bytes @ 0x3A
  1783  00003B                     	ds   3
  1784  00003B                     	global	dtoa@i
  1785                           dtoa@i:	; 2 bytes @ 0x3D
  1786  00003E                     	ds   1
  1787  00003E                     	global	___fldiv@bexp
  1788                           ___fldiv@bexp:	; 1 bytes @ 0x3E
  1789  00003F                     	ds   1
  1790  00003F                     	global	?_vfpfcnvrt
  1791                           ?_vfpfcnvrt:	; 2 bytes @ 0x3F
  1792  000040                     	global	___fldiv@aexp
  1793                           ___fldiv@aexp:	; 1 bytes @ 0x3F
  1794  000040                     	global	vfpfcnvrt@fp
  1795                           vfpfcnvrt@fp:	; 2 bytes @ 0x3F
  1796  000040                     	ds   1
  1797  000040                     	global	?___fladd
  1798                           ?___fladd:	; 4 bytes @ 0x40
  1799  000041                     	global	___fladd@b
  1800                           ___fladd@b:	; 4 bytes @ 0x40
  1801  000041                     	ds   1
  1802  000041                     	global	vfpfcnvrt@fmt
  1803                           vfpfcnvrt@fmt:	; 2 bytes @ 0x41
  1804  000042                     	ds   2
  1805  000042                     	global	vfpfcnvrt@ap
  1806                           vfpfcnvrt@ap:	; 2 bytes @ 0x43
  1807  000044                     	ds   1
  1808  000044                     	global	___fladd@a
  1809                           ___fladd@a:	; 4 bytes @ 0x44
  1810  000045                     	ds   1
  1811  000045                     ??_vfpfcnvrt:	; 1 bytes @ 0x45
  1812  000046                     	ds   2
  1813  000046                     	global	vfpfcnvrt@ll
  1814                           vfpfcnvrt@ll:	; 8 bytes @ 0x47
  1815  000048                     	ds   1
  1816  000048                     ??___fladd:	; 1 bytes @ 0x48
  1817  000049                     	ds   7
  1818  000049                     	global	?_vfprintf
  1819                           ?_vfprintf:	; 2 bytes @ 0x4F
  1820  000050                     	global	vfprintf@fp
  1821                           vfprintf@fp:	; 2 bytes @ 0x4F
  1822  000050                     	ds   1
  1823  000050                     	global	___fladd@signs
  1824                           ___fladd@signs:	; 1 bytes @ 0x50
  1825  000051                     	ds   1
  1826  000051                     	global	___fladd@aexp
  1827                           ___fladd@aexp:	; 1 bytes @ 0x51
  1828  000052                     	global	vfprintf@fmt
  1829                           vfprintf@fmt:	; 2 bytes @ 0x51
  1830  000052                     	ds   1
  1831  000052                     	global	___fladd@bexp
  1832                           ___fladd@bexp:	; 1 bytes @ 0x52
  1833  000053                     	ds   1
  1834  000053                     	global	___fladd@grs
  1835                           ___fladd@grs:	; 1 bytes @ 0x53
  1836  000054                     	global	vfprintf@ap
  1837                           vfprintf@ap:	; 2 bytes @ 0x53
  1838  000054                     	ds   1
  1839  000054                     	global	?_roundf
  1840                           ?_roundf:	; 4 bytes @ 0x54
  1841  000055                     	global	?___fltol
  1842                           ?___fltol:	; 4 bytes @ 0x54
  1843  000055                     	global	___fltol@f1
  1844                           ___fltol@f1:	; 4 bytes @ 0x54
  1845  000055                     	global	roundf@x
  1846                           roundf@x:	; 4 bytes @ 0x54
  1847  000055                     	ds   1
  1848  000055                     ??_vfprintf:	; 1 bytes @ 0x55
  1849  000056                     	global	vfprintf@cfmt
  1850                           vfprintf@cfmt:	; 2 bytes @ 0x55
  1851  000056                     	ds   2
  1852  000056                     	global	?_sprintf
  1853                           ?_sprintf:	; 2 bytes @ 0x57
  1854  000058                     	global	sprintf@s
  1855                           sprintf@s:	; 2 bytes @ 0x57
  1856  000058                     	ds   1
  1857  000058                     ??_roundf:	; 1 bytes @ 0x58
  1858  000059                     ??___fltol:	; 1 bytes @ 0x58
  1859  000059                     	ds   1
  1860  000059                     	global	sprintf@fmt
  1861                           sprintf@fmt:	; 2 bytes @ 0x59
  1862  00005A                     	ds   3
  1863  00005A                     	global	___fltol@sign1
  1864                           ___fltol@sign1:	; 1 bytes @ 0x5C
  1865  00005D                     	ds   1
  1866  00005D                     ??_sprintf:	; 1 bytes @ 0x5D
  1867  00005E                     ?_lcd_lum:	; 1 bytes @ 0x5D
  1868  00005E                     ?_lcd_sol:	; 1 bytes @ 0x5D
  1869  00005E                     ?_lcd_humid:	; 1 bytes @ 0x5D
  1870  00005E                     ?_lcd_temp:	; 1 bytes @ 0x5D
  1871  00005E                     ??_lcd_arrosage:	; 1 bytes @ 0x5D
  1872  00005E                     	global	___fltol@exp1
  1873                           ___fltol@exp1:	; 1 bytes @ 0x5D
  1874  00005E                     	global	lcd_lum@l
  1875                           lcd_lum@l:	; 2 bytes @ 0x5D
  1876  00005E                     	global	lcd_sol@s
  1877                           lcd_sol@s:	; 2 bytes @ 0x5D
  1878  00005E                     	global	lcd_humid@h
  1879                           lcd_humid@h:	; 2 bytes @ 0x5D
  1880  00005E                     	global	lcd_temp@t
  1881                           lcd_temp@t:	; 2 bytes @ 0x5D
  1882  00005E                     	ds   1
  1883  00005E                     ??_setPeriodTo:	; 1 bytes @ 0x5E
  1884  00005F                     ??_arrosage:	; 1 bytes @ 0x5E
  1885  00005F                     	ds   1
  1886  00005F                     ??_lcd_lum:	; 1 bytes @ 0x5F
  1887  000060                     ??_lcd_sol:	; 1 bytes @ 0x5F
  1888  000060                     ??_lcd_humid:	; 1 bytes @ 0x5F
  1889  000060                     ??_lcd_temp:	; 1 bytes @ 0x5F
  1890  000060                     ??_main:	; 1 bytes @ 0x5F
  1891  000060                     ;!
  1892                           ;!Data Sizes:
  1893                           ;!    Strings     163
  1894                           ;!    Constant    28
  1895                           ;!    Data        98
  1896                           ;!    BSS         49
  1897                           ;!    Persistent  0
  1898                           ;!    Stack       0
  1899                           ;!
  1900                           ;!Auto Spaces:
  1901                           ;!    Space          Size  Autos    Used
  1902                           ;!    COMRAM           95     95      95
  1903                           ;!    BANK0           160     76     159
  1904                           ;!    BANK1           256      0      64
  1905                           ;!    BANK2           256      0       0
  1906                           ;!    BANK3           256      0       0
  1907                           ;!    BANK4           256      0       0
  1908                           ;!    BANK5           256      0       0
  1909                           ;!    BANK6           256      0       0
  1910                           ;!    BANK7           256      0       0
  1911                           
  1912                           ;!
  1913                           ;!Pointer List with Targets:
  1914                           ;!
  1915                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 32
  1916                           ;!		 -> dbuf(BANK1[32]), lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]),
                                  lcd_sol@sol_info(BANK0[16]), 
  1917                           ;!		 -> lcd_lum@lum_info(BANK0[16]), lcd_arrosage@data(BANK0[16]), 
  1918                           ;!
  1919                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 32
  1920                           ;!		 -> dbuf(BANK1[32]), lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]),
                                  lcd_sol@sol_info(BANK0[16]), 
  1921                           ;!		 -> lcd_lum@lum_info(BANK0[16]), lcd_arrosage@data(BANK0[16]), 
  1922                           ;!
  1923                           ;!    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
  1924                           ;!		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info
                                 (BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
  1925                           ;!		 -> lcd_arrosage@data(BANK0[16]), 
  1926                           ;!
  1927                           ;!    strcpy@d	PTR unsigned char  size(2) Largest target is 16
  1928                           ;!		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info
                                 (BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
  1929                           ;!		 -> lcd_arrosage@data(BANK0[16]), 
  1930                           ;!
  1931                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 7
  1932                           ;!		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK
                                 0[3]), lcd_lum@value(BANK0[3]), 
  1933                           ;!		 -> STR_5(CODE[2]), lcd_arrosage@time2(BANK0[2]), STR_3(CODE[7]), STR_2(CODE[4]), 
  1934                           ;!		 -> STR_1(CODE[3]), 
  1935                           ;!
  1936                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 7
  1937                           ;!		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK
                                 0[3]), lcd_lum@value(BANK0[3]), 
  1938                           ;!		 -> STR_5(CODE[2]), lcd_arrosage@time2(BANK0[2]), STR_3(CODE[7]), STR_2(CODE[4]), 
  1939                           ;!		 -> STR_1(CODE[3]), 
  1940                           ;!
  1941                           ;!    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
  1942                           ;!		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info
                                 (BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
  1943                           ;!		 -> lcd_arrosage@data(BANK0[16]), 
  1944                           ;!
  1945                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 7
  1946                           ;!		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK
                                 0[3]), lcd_lum@value(BANK0[3]), 
  1947                           ;!		 -> STR_5(CODE[2]), lcd_arrosage@time2(BANK0[2]), STR_3(CODE[7]), STR_2(CODE[4]), 
  1948                           ;!		 -> STR_1(CODE[3]), 
  1949                           ;!
  1950                           ;!    strcat@dest	PTR unsigned char  size(2) Largest target is 16
  1951                           ;!		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info
                                 (BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
  1952                           ;!		 -> lcd_arrosage@data(BANK0[16]), 
  1953                           ;!
  1954                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
  1955                           ;!		 -> STR_18(CODE[3]), STR_15(CODE[3]), STR_11(CODE[3]), STR_8(CODE[3]), 
  1956                           ;!		 -> STR_4(CODE[3]), 
  1957                           ;!
  1958                           ;!    sprintf@s	PTR unsigned char  size(2) Largest target is 3
  1959                           ;!		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK
                                 0[3]), lcd_lum@value(BANK0[3]), 
  1960                           ;!		 -> lcd_arrosage@time2(BANK0[2]), 
  1961                           ;!
  1962                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
  1963                           ;!		 -> ?_sprintf(COMRAM[2]), 
  1964                           ;!
  1965                           ;!    f.buffer	PTR unsigned char  size(2) Largest target is 3
  1966                           ;!		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK
                                 0[3]), lcd_lum@value(BANK0[3]), 
  1967                           ;!		 -> lcd_arrosage@time2(BANK0[2]), 
  1968                           ;!
  1969                           ;!    fputs@s	PTR const unsigned char  size(2) Largest target is 32
  1970                           ;!		 -> dbuf(BANK1[32]), 
  1971                           ;!
  1972                           ;!    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1973                           ;!		 -> sprintf@f(BANK0[6]), 
  1974                           ;!
  1975                           ;!    S984_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 3
  1976                           ;!		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK
                                 0[3]), lcd_lum@value(BANK0[3]), 
  1977                           ;!		 -> lcd_arrosage@time2(BANK0[2]), 
  1978                           ;!
  1979                           ;!    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 3
  1980                           ;!		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK
                                 0[3]), lcd_lum@value(BANK0[3]), 
  1981                           ;!		 -> lcd_arrosage@time2(BANK0[2]), 
  1982                           ;!
  1983                           ;!    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1984                           ;!		 -> sprintf@f(BANK0[6]), 
  1985                           ;!
  1986                           ;!    atoi@s	PTR const unsigned char  size(2) Largest target is 3
  1987                           ;!		 -> hex_converter@convert(COMRAM[3]), 
  1988                           ;!
  1989                           ;!    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
  1990                           ;!		 -> sprintf@ap(BANK0[2]), 
  1991                           ;!
  1992                           ;!    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1993                           ;!		 -> sprintf@f(BANK0[6]), 
  1994                           ;!
  1995                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
  1996                           ;!		 -> STR_18(CODE[3]), STR_15(CODE[3]), STR_11(CODE[3]), STR_8(CODE[3]), 
  1997                           ;!		 -> STR_4(CODE[3]), 
  1998                           ;!
  1999                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
  2000                           ;!		 -> STR_18(CODE[3]), STR_15(CODE[3]), STR_11(CODE[3]), STR_8(CODE[3]), 
  2001                           ;!		 -> STR_4(CODE[3]), 
  2002                           ;!
  2003                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
  2004                           ;!		 -> sprintf@f(BANK0[6]), 
  2005                           ;!
  2006                           ;!    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
  2007                           ;!		 -> sprintf@ap(BANK0[2]), 
  2008                           ;!
  2009                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
  2010                           ;!		 -> vfprintf@cfmt(COMRAM[2]), 
  2011                           ;!
  2012                           ;!    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
  2013                           ;!		 -> sprintf@f(BANK0[6]), 
  2014                           ;!
  2015                           ;!    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
  2016                           ;!		 -> sprintf@f(BANK0[6]), 
  2017                           ;!
  2018                           ;!    pad@buf	PTR unsigned char  size(2) Largest target is 32
  2019                           ;!		 -> dbuf(BANK1[32]), 
  2020                           ;!
  2021                           ;!    sp__strcat	PTR unsigned char  size(2) Largest target is 16
  2022                           ;!		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info
                                 (BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
  2023                           ;!		 -> lcd_arrosage@data(BANK0[16]), 
  2024                           ;!
  2025                           ;!    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
  2026                           ;!		 -> STR_20(CODE[14]), STR_19(CODE[14]), lcd_temp@temp_info(BANK0[16]), STR_17(CODE[1
                                 5]), 
  2027                           ;!		 -> STR_16(CODE[12]), lcd_humid@humid_info(BANK0[16]), STR_14(CODE[15]), STR_13(CODE
                                 [12]), 
  2028                           ;!		 -> STR_12(CODE[12]), lcd_sol@sol_info(BANK0[16]), STR_10(CODE[13]), STR_9(CODE[13])
                                 , 
  2029                           ;!		 -> lcd_lum@lum_info(BANK0[16]), STR_7(CODE[13]), STR_6(CODE[13]), lcd_arrosage@data
                                 (BANK0[16]), 
  2030                           ;!
  2031                           ;!    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 16
  2032                           ;!		 -> STR_20(CODE[14]), STR_19(CODE[14]), lcd_temp@temp_info(BANK0[16]), STR_17(CODE[1
                                 5]), 
  2033                           ;!		 -> STR_16(CODE[12]), lcd_humid@humid_info(BANK0[16]), STR_14(CODE[15]), STR_13(CODE
                                 [12]), 
  2034                           ;!		 -> STR_12(CODE[12]), lcd_sol@sol_info(BANK0[16]), STR_10(CODE[13]), STR_9(CODE[13])
                                 , 
  2035                           ;!		 -> lcd_lum@lum_info(BANK0[16]), STR_7(CODE[13]), STR_6(CODE[13]), lcd_arrosage@data
                                 (BANK0[16]), 
  2036                           ;!
  2037                           
  2038                           
  2039                           ;!
  2040                           ;!Critical Paths under _main in COMRAM
  2041                           ;!
  2042                           ;!    _main->_lcd_humid
  2043                           ;!    _main->_lcd_lum
  2044                           ;!    _main->_lcd_sol
  2045                           ;!    _main->_lcd_temp
  2046                           ;!    _main->_setPeriodTo
  2047                           ;!    _stream->_setPeriodTo
  2048                           ;!    _setPeriodTo->___fltol
  2049                           ;!    _roundf->___fladd
  2050                           ;!    _lcd_arrosage->_sprintf
  2051                           ;!    _SetDutyCycleTo->___fltol
  2052                           ;!    ___fltol->___fladd
  2053                           ;!    ___flmul->___xxtofl
  2054                           ;!    ___fldiv->___flmul
  2055                           ;!    ___fladd->___fldiv
  2056                           ;!    _lcd_temp->_sprintf
  2057                           ;!    _lcd_sol->_sprintf
  2058                           ;!    _lcd_lum->_sprintf
  2059                           ;!    _lcd_humid->_sprintf
  2060                           ;!    _strcat->_strcpy
  2061                           ;!    _strcpy->_strlen
  2062                           ;!    _sprintf->_vfprintf
  2063                           ;!    _vfprintf->_vfpfcnvrt
  2064                           ;!    _vfpfcnvrt->_dtoa
  2065                           ;!    _dtoa->_pad
  2066                           ;!    _pad->_fputs
  2067                           ;!    _fputs->_fputc
  2068                           ;!    _abs->___aomod
  2069                           ;!    _LCD_String_xy->_LCD_String
  2070                           ;!    _LCD_String->_LCD_Char
  2071                           ;!    _LCD_Char->_MSdelay
  2072                           ;!    _hex_converter->_atoi
  2073                           ;!    _atoi->_isspace
  2074                           ;!    ___lwmod->___lwdiv
  2075                           ;!    _adc_read_temp->_MSdelay
  2076                           ;!    _adc_read_sol->_MSdelay
  2077                           ;!    _adc_read_lum->_MSdelay
  2078                           ;!    _adc_read_humid->_MSdelay
  2079                           ;!    _LCD_Init->_LCD_Command
  2080                           ;!    _LCD_Clear->_LCD_Command
  2081                           ;!    _LCD_Command->_MSdelay
  2082                           ;!
  2083                           ;!Critical Paths under _main in BANK0
  2084                           ;!
  2085                           ;!    _main->_stream
  2086                           ;!    _stream->_setPeriodTo
  2087                           ;!    _setPeriodTo->_roundf
  2088                           ;!    _lcd_arrosage->_sprintf
  2089                           ;!    _arrosage->_SetDutyCycleTo
  2090                           ;!    _lcd_temp->_sprintf
  2091                           ;!    _lcd_sol->_sprintf
  2092                           ;!    _lcd_lum->_sprintf
  2093                           ;!    _lcd_humid->_sprintf
  2094                           ;!
  2095                           ;!Critical Paths under _main in BANK1
  2096                           ;!
  2097                           ;!    None.
  2098                           ;!
  2099                           ;!Critical Paths under _main in BANK2
  2100                           ;!
  2101                           ;!    None.
  2102                           ;!
  2103                           ;!Critical Paths under _main in BANK3
  2104                           ;!
  2105                           ;!    None.
  2106                           ;!
  2107                           ;!Critical Paths under _main in BANK4
  2108                           ;!
  2109                           ;!    None.
  2110                           ;!
  2111                           ;!Critical Paths under _main in BANK5
  2112                           ;!
  2113                           ;!    None.
  2114                           ;!
  2115                           ;!Critical Paths under _main in BANK6
  2116                           ;!
  2117                           ;!    None.
  2118                           ;!
  2119                           ;!Critical Paths under _main in BANK7
  2120                           ;!
  2121                           ;!    None.
  2122                           
  2123 ;;
  2124 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2125 ;;
  2126                           
  2127                           ;!
  2128                           ;!Call Graph Tables:
  2129                           ;!
  2130                           ;! ---------------------------------------------------------------------------------
  2131                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2132                           ;! ---------------------------------------------------------------------------------
  2133                           ;! (0) _main                                                23    18      5  164978
  2134                           ;!                                             53 BANK0     23    18      5
  2135                           ;!                          _LCD_Clear
  2136                           ;!                           _LCD_Init
  2137                           ;!                      _LCD_String_xy
  2138                           ;!                            _MSdelay
  2139                           ;!                           _PWM_Init
  2140                           ;!                     _SetDutyCycleTo
  2141                           ;!                           _adc_init
  2142                           ;!                     _adc_read_humid
  2143                           ;!                       _adc_read_lum
  2144                           ;!                       _adc_read_sol
  2145                           ;!                      _adc_read_temp
  2146                           ;!                      _hex_converter
  2147                           ;!                          _lcd_humid
  2148                           ;!                            _lcd_lum
  2149                           ;!                            _lcd_sol
  2150                           ;!                           _lcd_temp
  2151                           ;!                        _setPeriodTo
  2152                           ;!                             _stream
  2153                           ;! ---------------------------------------------------------------------------------
  2154                           ;! (1) _stream                                               9     3      6   55706
  2155                           ;!                                             44 BANK0      9     3      6
  2156                           ;!                     _SetDutyCycleTo
  2157                           ;!                           _arrosage
  2158                           ;!                              _delay
  2159                           ;!                       _lcd_arrosage
  2160                           ;!                        _setPeriodTo
  2161                           ;! ---------------------------------------------------------------------------------
  2162                           ;! (2) _setPeriodTo                                         27    23      4   17028
  2163                           ;!                                             94 COMRAM     1     1      0
  2164                           ;!                                             18 BANK0     26    22      4
  2165                           ;!                            ___fladd
  2166                           ;!                            ___fldiv
  2167                           ;!                            ___flmul
  2168                           ;!                            ___fltol
  2169                           ;!                           ___xxtofl
  2170                           ;!                             _roundf
  2171                           ;! ---------------------------------------------------------------------------------
  2172                           ;! (3) _roundf                                              26    22      4    7582
  2173                           ;!                                             84 COMRAM     8     4      4
  2174                           ;!                                              0 BANK0     18    18      0
  2175                           ;!                            ___fladd
  2176                           ;!                             ___flge
  2177                           ;!                            ___flmul
  2178                           ;!                            ___flneg
  2179                           ;! ---------------------------------------------------------------------------------
  2180                           ;! (4) ___flneg                                              4     0      4     349
  2181                           ;!                                              0 COMRAM     4     0      4
  2182                           ;! ---------------------------------------------------------------------------------
  2183                           ;! (4) ___flge                                              12     4      8     486
  2184                           ;!                                              0 COMRAM    12     4      8
  2185                           ;! ---------------------------------------------------------------------------------
  2186                           ;! (2) _lcd_arrosage                                        24    18      6   16725
  2187                           ;!                                             10 BANK0     24    18      6
  2188                           ;!                      _LCD_String_xy
  2189                           ;!                            ___awdiv
  2190                           ;!                             ___fleq
  2191                           ;!                            _sprintf
  2192                           ;!                             _strcat
  2193                           ;! ---------------------------------------------------------------------------------
  2194                           ;! (3) ___fleq                                              12     4      8     646
  2195                           ;!                                              0 COMRAM    12     4      8
  2196                           ;! ---------------------------------------------------------------------------------
  2197                           ;! (3) ___awdiv                                              8     4      4     452
  2198                           ;!                                              0 COMRAM     8     4      4
  2199                           ;! ---------------------------------------------------------------------------------
  2200                           ;! (2) _arrosage                                             8     0      8   11444
  2201                           ;!                                             14 BANK0      8     0      8
  2202                           ;!                     _SetDutyCycleTo
  2203                           ;!                              _delay
  2204                           ;! ---------------------------------------------------------------------------------
  2205                           ;! (2) _delay                                                6     4      2     244
  2206                           ;!                                              0 COMRAM     6     4      2
  2207                           ;! ---------------------------------------------------------------------------------
  2208                           ;! (3) _SetDutyCycleTo                                      14     8      6    9310
  2209                           ;!                                              0 BANK0     14     8      6
  2210                           ;!                            ___fladd
  2211                           ;!                            ___fldiv
  2212                           ;!                            ___flmul
  2213                           ;!                            ___fltol
  2214                           ;!                           ___xxtofl
  2215                           ;! ---------------------------------------------------------------------------------
  2216                           ;! (3) ___xxtofl                                            14    10      4     626
  2217                           ;!                                              0 COMRAM    14    10      4
  2218                           ;! ---------------------------------------------------------------------------------
  2219                           ;! (3) ___fltol                                             10     6      4     457
  2220                           ;!                                             84 COMRAM    10     6      4
  2221                           ;!                            ___fladd (ARG)
  2222                           ;!                            ___fldiv (ARG)
  2223                           ;!                            ___flmul (ARG)
  2224                           ;!                           ___xxtofl (ARG)
  2225                           ;! ---------------------------------------------------------------------------------
  2226                           ;! (4) ___flmul                                             25    17      8    2352
  2227                           ;!                                             14 COMRAM    25    17      8
  2228                           ;!                           ___xxtofl (ARG)
  2229                           ;! ---------------------------------------------------------------------------------
  2230                           ;! (3) ___fldiv                                             25    17      8    1551
  2231                           ;!                                             39 COMRAM    25    17      8
  2232                           ;!                            ___flmul (ARG)
  2233                           ;!                           ___xxtofl (ARG)
  2234                           ;! ---------------------------------------------------------------------------------
  2235                           ;! (4) ___fladd                                             20    12      8    3756
  2236                           ;!                                             64 COMRAM    20    12      8
  2237                           ;!                            ___fldiv (ARG)
  2238                           ;!                            ___flmul (ARG)
  2239                           ;!                            ___flneg (ARG)
  2240                           ;!                           ___xxtofl (ARG)
  2241                           ;! ---------------------------------------------------------------------------------
  2242                           ;! (1) _lcd_temp                                            26    24      2   17435
  2243                           ;!                                             93 COMRAM     2     0      2
  2244                           ;!                                             10 BANK0     24    24      0
  2245                           ;!                      _LCD_String_xy
  2246                           ;!                            _MSdelay
  2247                           ;!                            _sprintf
  2248                           ;!                             _strcat
  2249                           ;!                       _temp_convert
  2250                           ;! ---------------------------------------------------------------------------------
  2251                           ;! (2) _temp_convert                                         4     2      2    1877
  2252                           ;!                                              0 COMRAM     4     2      2
  2253                           ;! ---------------------------------------------------------------------------------
  2254                           ;! (1) _lcd_sol                                             21    19      2   15578
  2255                           ;!                                             93 COMRAM     2     0      2
  2256                           ;!                                             10 BANK0     19    19      0
  2257                           ;!                      _LCD_String_xy
  2258                           ;!                            _MSdelay
  2259                           ;!                            _sprintf
  2260                           ;!                             _strcat
  2261                           ;! ---------------------------------------------------------------------------------
  2262                           ;! (1) _lcd_lum                                             21    19      2   15534
  2263                           ;!                                             93 COMRAM     2     0      2
  2264                           ;!                                             10 BANK0     19    19      0
  2265                           ;!                      _LCD_String_xy
  2266                           ;!                            _MSdelay
  2267                           ;!                            _sprintf
  2268                           ;!                             _strcat
  2269                           ;! ---------------------------------------------------------------------------------
  2270                           ;! (1) _lcd_humid                                           26    24      2   16490
  2271                           ;!                                             93 COMRAM     2     0      2
  2272                           ;!                                             10 BANK0     24    24      0
  2273                           ;!                      _LCD_String_xy
  2274                           ;!                            _MSdelay
  2275                           ;!                      _humid_convert
  2276                           ;!                            _sprintf
  2277                           ;!                             _strcat
  2278                           ;! ---------------------------------------------------------------------------------
  2279                           ;! (3) _strcat                                               4     0      4    1930
  2280                           ;!                                             16 COMRAM     4     0      4
  2281                           ;!                             _strcpy
  2282                           ;!                             _strlen
  2283                           ;! ---------------------------------------------------------------------------------
  2284                           ;! (4) _strcpy                                              10     6      4     248
  2285                           ;!                                              6 COMRAM    10     6      4
  2286                           ;!                             _strlen (ARG)
  2287                           ;! ---------------------------------------------------------------------------------
  2288                           ;! (3) _sprintf                                             16    10      6    7140
  2289                           ;!                                             87 COMRAM     6     0      6
  2290                           ;!                                              0 BANK0     10    10      0
  2291                           ;!                            ___awdiv (ARG)
  2292                           ;!                           _vfprintf
  2293                           ;! ---------------------------------------------------------------------------------
  2294                           ;! (4) _vfprintf                                             8     2      6    6181
  2295                           ;!                                             79 COMRAM     8     2      6
  2296                           ;!                          _vfpfcnvrt
  2297                           ;! ---------------------------------------------------------------------------------
  2298                           ;! (5) _vfpfcnvrt                                           42    36      6    5827
  2299                           ;!                                             63 COMRAM    16    10      6
  2300                           ;!                               _dtoa
  2301                           ;!                              _fputc
  2302                           ;! ---------------------------------------------------------------------------------
  2303                           ;! (6) _dtoa                                                36    26     10    4434
  2304                           ;!                                             27 COMRAM    36    26     10
  2305                           ;!                            ___aodiv
  2306                           ;!                            ___aomod
  2307                           ;!                                _abs
  2308                           ;!                                _pad
  2309                           ;! ---------------------------------------------------------------------------------
  2310                           ;! (7) _pad                                                 11     5      6    2785
  2311                           ;!                                             16 COMRAM    11     5      6
  2312                           ;!                              _fputc
  2313                           ;!                              _fputs
  2314                           ;!                             _strlen
  2315                           ;! ---------------------------------------------------------------------------------
  2316                           ;! (4) _strlen                                               6     4      2     242
  2317                           ;!                                              0 COMRAM     6     4      2
  2318                           ;! ---------------------------------------------------------------------------------
  2319                           ;! (8) _fputs                                                7     3      4    1235
  2320                           ;!                                              9 COMRAM     7     3      4
  2321                           ;!                              _fputc
  2322                           ;! ---------------------------------------------------------------------------------
  2323                           ;! (6) _fputc                                                9     5      4     834
  2324                           ;!                                              0 COMRAM     9     5      4
  2325                           ;!                              _putch
  2326                           ;! ---------------------------------------------------------------------------------
  2327                           ;! (7) _putch                                                1     1      0       0
  2328                           ;! ---------------------------------------------------------------------------------
  2329                           ;! (7) _abs                                                  4     2      2     142
  2330                           ;!                                             18 COMRAM     4     2      2
  2331                           ;!                            ___aomod (ARG)
  2332                           ;! ---------------------------------------------------------------------------------
  2333                           ;! (7) ___aomod                                             18     2     16     448
  2334                           ;!                                              0 COMRAM    18     2     16
  2335                           ;! ---------------------------------------------------------------------------------
  2336                           ;! (7) ___aodiv                                             26    10     16     452
  2337                           ;!                                              0 COMRAM    26    10     16
  2338                           ;! ---------------------------------------------------------------------------------
  2339                           ;! (2) _humid_convert                                        4     2      2     932
  2340                           ;!                                              0 COMRAM     4     2      2
  2341                           ;! ---------------------------------------------------------------------------------
  2342                           ;! (3) _LCD_String_xy                                        5     2      3    5088
  2343                           ;!                                             10 COMRAM     5     2      3
  2344                           ;!                        _LCD_Command
  2345                           ;!                         _LCD_String
  2346                           ;! ---------------------------------------------------------------------------------
  2347                           ;! (4) _LCD_String                                           2     0      2    1321
  2348                           ;!                                              8 COMRAM     2     0      2
  2349                           ;!                           _LCD_Char
  2350                           ;! ---------------------------------------------------------------------------------
  2351                           ;! (5) _LCD_Char                                             2     2      0    1200
  2352                           ;!                                              6 COMRAM     2     2      0
  2353                           ;!                            _MSdelay
  2354                           ;! ---------------------------------------------------------------------------------
  2355                           ;! (1) _hex_converter                                        7     5      2    3178
  2356                           ;!                                             22 COMRAM     7     5      2
  2357                           ;!                            ___lwdiv
  2358                           ;!                            ___lwmod
  2359                           ;!                               _atoi
  2360                           ;! ---------------------------------------------------------------------------------
  2361                           ;! (2) _atoi                                                15    13      2    1276
  2362                           ;!                                              7 COMRAM    15    13      2
  2363                           ;!                             ___wmul
  2364                           ;!                            _isdigit
  2365                           ;!                            _isspace
  2366                           ;! ---------------------------------------------------------------------------------
  2367                           ;! (3) _isspace                                              7     5      2     207
  2368                           ;!                                              0 COMRAM     7     5      2
  2369                           ;! ---------------------------------------------------------------------------------
  2370                           ;! (3) _isdigit                                              6     4      2     161
  2371                           ;!                                              0 COMRAM     6     4      2
  2372                           ;! ---------------------------------------------------------------------------------
  2373                           ;! (3) ___wmul                                               6     2      4     511
  2374                           ;!                                              0 COMRAM     6     2      4
  2375                           ;! ---------------------------------------------------------------------------------
  2376                           ;! (2) ___lwmod                                              5     1      4     767
  2377                           ;!                                              7 COMRAM     5     1      4
  2378                           ;!                            ___lwdiv (ARG)
  2379                           ;! ---------------------------------------------------------------------------------
  2380                           ;! (2) ___lwdiv                                              7     3      4     618
  2381                           ;!                                              0 COMRAM     7     3      4
  2382                           ;! ---------------------------------------------------------------------------------
  2383                           ;! (1) _adc_read_temp                                        2     0      2    1156
  2384                           ;!                                              6 COMRAM     2     0      2
  2385                           ;!                            _MSdelay
  2386                           ;! ---------------------------------------------------------------------------------
  2387                           ;! (1) _adc_read_sol                                         2     0      2    1156
  2388                           ;!                                              6 COMRAM     2     0      2
  2389                           ;!                            _MSdelay
  2390                           ;! ---------------------------------------------------------------------------------
  2391                           ;! (1) _adc_read_lum                                         2     0      2    1156
  2392                           ;!                                              6 COMRAM     2     0      2
  2393                           ;!                            _MSdelay
  2394                           ;! ---------------------------------------------------------------------------------
  2395                           ;! (1) _adc_read_humid                                       2     0      2    1156
  2396                           ;!                                              6 COMRAM     2     0      2
  2397                           ;!                            _MSdelay
  2398                           ;! ---------------------------------------------------------------------------------
  2399                           ;! (1) _adc_init                                             0     0      0       0
  2400                           ;! ---------------------------------------------------------------------------------
  2401                           ;! (1) _PWM_Init                                             0     0      0       0
  2402                           ;! ---------------------------------------------------------------------------------
  2403                           ;! (1) _LCD_Init                                             0     0      0    2356
  2404                           ;!                        _LCD_Command
  2405                           ;!                            _MSdelay
  2406                           ;! ---------------------------------------------------------------------------------
  2407                           ;! (1) _LCD_Clear                                            0     0      0    1200
  2408                           ;!                        _LCD_Command
  2409                           ;! ---------------------------------------------------------------------------------
  2410                           ;! (4) _LCD_Command                                          2     2      0    1200
  2411                           ;!                                              6 COMRAM     2     2      0
  2412                           ;!                            _MSdelay
  2413                           ;! ---------------------------------------------------------------------------------
  2414                           ;! (6) _MSdelay                                              6     4      2    1156
  2415                           ;!                                              0 COMRAM     6     4      2
  2416                           ;! ---------------------------------------------------------------------------------
  2417                           ;! Estimated maximum stack depth 8
  2418                           ;! ---------------------------------------------------------------------------------
  2419                           ;!
  2420                           ;! Call Graph Graphs:
  2421                           ;!
  2422                           ;! _main (ROOT)
  2423                           ;!   _LCD_Clear
  2424                           ;!     _LCD_Command
  2425                           ;!       _MSdelay
  2426                           ;!   _LCD_Init
  2427                           ;!     _LCD_Command
  2428                           ;!       _MSdelay
  2429                           ;!     _MSdelay
  2430                           ;!   _LCD_String_xy
  2431                           ;!     _LCD_Command
  2432                           ;!       _MSdelay
  2433                           ;!     _LCD_String
  2434                           ;!       _LCD_Char
  2435                           ;!         _MSdelay
  2436                           ;!   _MSdelay
  2437                           ;!   _PWM_Init
  2438                           ;!   _SetDutyCycleTo
  2439                           ;!     ___fladd
  2440                           ;!       ___fldiv (ARG)
  2441                           ;!         ___flmul (ARG)
  2442                           ;!           ___xxtofl (ARG)
  2443                           ;!         ___xxtofl (ARG)
  2444                           ;!       ___flmul (ARG)
  2445                           ;!         ___xxtofl (ARG)
  2446                           ;!       ___flneg (ARG)
  2447                           ;!       ___xxtofl (ARG)
  2448                           ;!     ___fldiv
  2449                           ;!       ___flmul (ARG)
  2450                           ;!         ___xxtofl (ARG)
  2451                           ;!       ___xxtofl (ARG)
  2452                           ;!     ___flmul
  2453                           ;!       ___xxtofl (ARG)
  2454                           ;!     ___fltol
  2455                           ;!       ___fladd (ARG)
  2456                           ;!         ___fldiv (ARG)
  2457                           ;!           ___flmul (ARG)
  2458                           ;!             ___xxtofl (ARG)
  2459                           ;!           ___xxtofl (ARG)
  2460                           ;!         ___flmul (ARG)
  2461                           ;!           ___xxtofl (ARG)
  2462                           ;!         ___flneg (ARG)
  2463                           ;!         ___xxtofl (ARG)
  2464                           ;!       ___fldiv (ARG)
  2465                           ;!         ___flmul (ARG)
  2466                           ;!           ___xxtofl (ARG)
  2467                           ;!         ___xxtofl (ARG)
  2468                           ;!       ___flmul (ARG)
  2469                           ;!         ___xxtofl (ARG)
  2470                           ;!       ___xxtofl (ARG)
  2471                           ;!     ___xxtofl
  2472                           ;!   _adc_init
  2473                           ;!   _adc_read_humid
  2474                           ;!     _MSdelay
  2475                           ;!   _adc_read_lum
  2476                           ;!     _MSdelay
  2477                           ;!   _adc_read_sol
  2478                           ;!     _MSdelay
  2479                           ;!   _adc_read_temp
  2480                           ;!     _MSdelay
  2481                           ;!   _hex_converter
  2482                           ;!     ___lwdiv
  2483                           ;!     ___lwmod
  2484                           ;!       ___lwdiv (ARG)
  2485                           ;!     _atoi
  2486                           ;!       ___wmul
  2487                           ;!       _isdigit
  2488                           ;!       _isspace
  2489                           ;!   _lcd_humid
  2490                           ;!     _LCD_String_xy
  2491                           ;!       _LCD_Command
  2492                           ;!         _MSdelay
  2493                           ;!       _LCD_String
  2494                           ;!         _LCD_Char
  2495                           ;!           _MSdelay
  2496                           ;!     _MSdelay
  2497                           ;!     _humid_convert
  2498                           ;!     _sprintf
  2499                           ;!       ___awdiv (ARG)
  2500                           ;!       _vfprintf (ARG)
  2501                           ;!         _vfpfcnvrt
  2502                           ;!           _dtoa
  2503                           ;!             ___aodiv
  2504                           ;!             ___aomod
  2505                           ;!             _abs
  2506                           ;!               ___aomod (ARG)
  2507                           ;!             _pad
  2508                           ;!               _fputc
  2509                           ;!                 _putch
  2510                           ;!               _fputs
  2511                           ;!                 _fputc
  2512                           ;!                   _putch
  2513                           ;!               _strlen
  2514                           ;!           _fputc
  2515                           ;!             _putch
  2516                           ;!     _strcat
  2517                           ;!       _strcpy
  2518                           ;!         _strlen (ARG)
  2519                           ;!       _strlen
  2520                           ;!   _lcd_lum
  2521                           ;!     _LCD_String_xy
  2522                           ;!       _LCD_Command
  2523                           ;!         _MSdelay
  2524                           ;!       _LCD_String
  2525                           ;!         _LCD_Char
  2526                           ;!           _MSdelay
  2527                           ;!     _MSdelay
  2528                           ;!     _sprintf
  2529                           ;!       ___awdiv (ARG)
  2530                           ;!       _vfprintf (ARG)
  2531                           ;!         _vfpfcnvrt
  2532                           ;!           _dtoa
  2533                           ;!             ___aodiv
  2534                           ;!             ___aomod
  2535                           ;!             _abs
  2536                           ;!               ___aomod (ARG)
  2537                           ;!             _pad
  2538                           ;!               _fputc
  2539                           ;!                 _putch
  2540                           ;!               _fputs
  2541                           ;!                 _fputc
  2542                           ;!                   _putch
  2543                           ;!               _strlen
  2544                           ;!           _fputc
  2545                           ;!             _putch
  2546                           ;!     _strcat
  2547                           ;!       _strcpy
  2548                           ;!         _strlen (ARG)
  2549                           ;!       _strlen
  2550                           ;!   _lcd_sol
  2551                           ;!     _LCD_String_xy
  2552                           ;!       _LCD_Command
  2553                           ;!         _MSdelay
  2554                           ;!       _LCD_String
  2555                           ;!         _LCD_Char
  2556                           ;!           _MSdelay
  2557                           ;!     _MSdelay
  2558                           ;!     _sprintf
  2559                           ;!       ___awdiv (ARG)
  2560                           ;!       _vfprintf (ARG)
  2561                           ;!         _vfpfcnvrt
  2562                           ;!           _dtoa
  2563                           ;!             ___aodiv
  2564                           ;!             ___aomod
  2565                           ;!             _abs
  2566                           ;!               ___aomod (ARG)
  2567                           ;!             _pad
  2568                           ;!               _fputc
  2569                           ;!                 _putch
  2570                           ;!               _fputs
  2571                           ;!                 _fputc
  2572                           ;!                   _putch
  2573                           ;!               _strlen
  2574                           ;!           _fputc
  2575                           ;!             _putch
  2576                           ;!     _strcat
  2577                           ;!       _strcpy
  2578                           ;!         _strlen (ARG)
  2579                           ;!       _strlen
  2580                           ;!   _lcd_temp
  2581                           ;!     _LCD_String_xy
  2582                           ;!       _LCD_Command
  2583                           ;!         _MSdelay
  2584                           ;!       _LCD_String
  2585                           ;!         _LCD_Char
  2586                           ;!           _MSdelay
  2587                           ;!     _MSdelay
  2588                           ;!     _sprintf
  2589                           ;!       ___awdiv (ARG)
  2590                           ;!       _vfprintf (ARG)
  2591                           ;!         _vfpfcnvrt
  2592                           ;!           _dtoa
  2593                           ;!             ___aodiv
  2594                           ;!             ___aomod
  2595                           ;!             _abs
  2596                           ;!               ___aomod (ARG)
  2597                           ;!             _pad
  2598                           ;!               _fputc
  2599                           ;!                 _putch
  2600                           ;!               _fputs
  2601                           ;!                 _fputc
  2602                           ;!                   _putch
  2603                           ;!               _strlen
  2604                           ;!           _fputc
  2605                           ;!             _putch
  2606                           ;!     _strcat
  2607                           ;!       _strcpy
  2608                           ;!         _strlen (ARG)
  2609                           ;!       _strlen
  2610                           ;!     _temp_convert
  2611                           ;!   _setPeriodTo
  2612                           ;!     ___fladd
  2613                           ;!       ___fldiv (ARG)
  2614                           ;!         ___flmul (ARG)
  2615                           ;!           ___xxtofl (ARG)
  2616                           ;!         ___xxtofl (ARG)
  2617                           ;!       ___flmul (ARG)
  2618                           ;!         ___xxtofl (ARG)
  2619                           ;!       ___flneg (ARG)
  2620                           ;!       ___xxtofl (ARG)
  2621                           ;!     ___fldiv
  2622                           ;!       ___flmul (ARG)
  2623                           ;!         ___xxtofl (ARG)
  2624                           ;!       ___xxtofl (ARG)
  2625                           ;!     ___flmul
  2626                           ;!       ___xxtofl (ARG)
  2627                           ;!     ___fltol
  2628                           ;!       ___fladd (ARG)
  2629                           ;!         ___fldiv (ARG)
  2630                           ;!           ___flmul (ARG)
  2631                           ;!             ___xxtofl (ARG)
  2632                           ;!           ___xxtofl (ARG)
  2633                           ;!         ___flmul (ARG)
  2634                           ;!           ___xxtofl (ARG)
  2635                           ;!         ___flneg (ARG)
  2636                           ;!         ___xxtofl (ARG)
  2637                           ;!       ___fldiv (ARG)
  2638                           ;!         ___flmul (ARG)
  2639                           ;!           ___xxtofl (ARG)
  2640                           ;!         ___xxtofl (ARG)
  2641                           ;!       ___flmul (ARG)
  2642                           ;!         ___xxtofl (ARG)
  2643                           ;!       ___xxtofl (ARG)
  2644                           ;!     ___xxtofl
  2645                           ;!     _roundf
  2646                           ;!       ___fladd
  2647                           ;!         ___fldiv (ARG)
  2648                           ;!           ___flmul (ARG)
  2649                           ;!             ___xxtofl (ARG)
  2650                           ;!           ___xxtofl (ARG)
  2651                           ;!         ___flmul (ARG)
  2652                           ;!           ___xxtofl (ARG)
  2653                           ;!         ___flneg (ARG)
  2654                           ;!         ___xxtofl (ARG)
  2655                           ;!       ___flge
  2656                           ;!       ___flmul
  2657                           ;!         ___xxtofl (ARG)
  2658                           ;!       ___flneg
  2659                           ;!   _stream
  2660                           ;!     _SetDutyCycleTo
  2661                           ;!       ___fladd
  2662                           ;!         ___fldiv (ARG)
  2663                           ;!           ___flmul (ARG)
  2664                           ;!             ___xxtofl (ARG)
  2665                           ;!           ___xxtofl (ARG)
  2666                           ;!         ___flmul (ARG)
  2667                           ;!           ___xxtofl (ARG)
  2668                           ;!         ___flneg (ARG)
  2669                           ;!         ___xxtofl (ARG)
  2670                           ;!       ___fldiv
  2671                           ;!         ___flmul (ARG)
  2672                           ;!           ___xxtofl (ARG)
  2673                           ;!         ___xxtofl (ARG)
  2674                           ;!       ___flmul
  2675                           ;!         ___xxtofl (ARG)
  2676                           ;!       ___fltol
  2677                           ;!         ___fladd (ARG)
  2678                           ;!           ___fldiv (ARG)
  2679                           ;!             ___flmul (ARG)
  2680                           ;!               ___xxtofl (ARG)
  2681                           ;!             ___xxtofl (ARG)
  2682                           ;!           ___flmul (ARG)
  2683                           ;!             ___xxtofl (ARG)
  2684                           ;!           ___flneg (ARG)
  2685                           ;!           ___xxtofl (ARG)
  2686                           ;!         ___fldiv (ARG)
  2687                           ;!           ___flmul (ARG)
  2688                           ;!             ___xxtofl (ARG)
  2689                           ;!           ___xxtofl (ARG)
  2690                           ;!         ___flmul (ARG)
  2691                           ;!           ___xxtofl (ARG)
  2692                           ;!         ___xxtofl (ARG)
  2693                           ;!       ___xxtofl
  2694                           ;!     _arrosage
  2695                           ;!       _SetDutyCycleTo
  2696                           ;!         ___fladd
  2697                           ;!           ___fldiv (ARG)
  2698                           ;!             ___flmul (ARG)
  2699                           ;!               ___xxtofl (ARG)
  2700                           ;!             ___xxtofl (ARG)
  2701                           ;!           ___flmul (ARG)
  2702                           ;!             ___xxtofl (ARG)
  2703                           ;!           ___flneg (ARG)
  2704                           ;!           ___xxtofl (ARG)
  2705                           ;!         ___fldiv
  2706                           ;!           ___flmul (ARG)
  2707                           ;!             ___xxtofl (ARG)
  2708                           ;!           ___xxtofl (ARG)
  2709                           ;!         ___flmul
  2710                           ;!           ___xxtofl (ARG)
  2711                           ;!         ___fltol
  2712                           ;!           ___fladd (ARG)
  2713                           ;!             ___fldiv (ARG)
  2714                           ;!               ___flmul (ARG)
  2715                           ;!                 ___xxtofl (ARG)
  2716                           ;!               ___xxtofl (ARG)
  2717                           ;!             ___flmul (ARG)
  2718                           ;!               ___xxtofl (ARG)
  2719                           ;!             ___flneg (ARG)
  2720                           ;!             ___xxtofl (ARG)
  2721                           ;!           ___fldiv (ARG)
  2722                           ;!             ___flmul (ARG)
  2723                           ;!               ___xxtofl (ARG)
  2724                           ;!             ___xxtofl (ARG)
  2725                           ;!           ___flmul (ARG)
  2726                           ;!             ___xxtofl (ARG)
  2727                           ;!           ___xxtofl (ARG)
  2728                           ;!         ___xxtofl
  2729                           ;!       _delay
  2730                           ;!     _delay
  2731                           ;!     _lcd_arrosage
  2732                           ;!       _LCD_String_xy
  2733                           ;!         _LCD_Command
  2734                           ;!           _MSdelay
  2735                           ;!         _LCD_String
  2736                           ;!           _LCD_Char
  2737                           ;!             _MSdelay
  2738                           ;!       ___awdiv
  2739                           ;!       ___fleq
  2740                           ;!       _sprintf
  2741                           ;!         ___awdiv (ARG)
  2742                           ;!         _vfprintf (ARG)
  2743                           ;!           _vfpfcnvrt
  2744                           ;!             _dtoa
  2745                           ;!               ___aodiv
  2746                           ;!               ___aomod
  2747                           ;!               _abs
  2748                           ;!                 ___aomod (ARG)
  2749                           ;!               _pad
  2750                           ;!                 _fputc
  2751                           ;!                   _putch
  2752                           ;!                 _fputs
  2753                           ;!                   _fputc
  2754                           ;!                     _putch
  2755                           ;!                 _strlen
  2756                           ;!             _fputc
  2757                           ;!               _putch
  2758                           ;!       _strcat
  2759                           ;!         _strcpy
  2760                           ;!           _strlen (ARG)
  2761                           ;!         _strlen
  2762                           ;!     _setPeriodTo
  2763                           ;!       ___fladd
  2764                           ;!         ___fldiv (ARG)
  2765                           ;!           ___flmul (ARG)
  2766                           ;!             ___xxtofl (ARG)
  2767                           ;!           ___xxtofl (ARG)
  2768                           ;!         ___flmul (ARG)
  2769                           ;!           ___xxtofl (ARG)
  2770                           ;!         ___flneg (ARG)
  2771                           ;!         ___xxtofl (ARG)
  2772                           ;!       ___fldiv
  2773                           ;!         ___flmul (ARG)
  2774                           ;!           ___xxtofl (ARG)
  2775                           ;!         ___xxtofl (ARG)
  2776                           ;!       ___flmul
  2777                           ;!         ___xxtofl (ARG)
  2778                           ;!       ___fltol
  2779                           ;!         ___fladd (ARG)
  2780                           ;!           ___fldiv (ARG)
  2781                           ;!             ___flmul (ARG)
  2782                           ;!               ___xxtofl (ARG)
  2783                           ;!             ___xxtofl (ARG)
  2784                           ;!           ___flmul (ARG)
  2785                           ;!             ___xxtofl (ARG)
  2786                           ;!           ___flneg (ARG)
  2787                           ;!           ___xxtofl (ARG)
  2788                           ;!         ___fldiv (ARG)
  2789                           ;!           ___flmul (ARG)
  2790                           ;!             ___xxtofl (ARG)
  2791                           ;!           ___xxtofl (ARG)
  2792                           ;!         ___flmul (ARG)
  2793                           ;!           ___xxtofl (ARG)
  2794                           ;!         ___xxtofl (ARG)
  2795                           ;!       ___xxtofl
  2796                           ;!       _roundf
  2797                           ;!         ___fladd
  2798                           ;!           ___fldiv (ARG)
  2799                           ;!             ___flmul (ARG)
  2800                           ;!               ___xxtofl (ARG)
  2801                           ;!             ___xxtofl (ARG)
  2802                           ;!           ___flmul (ARG)
  2803                           ;!             ___xxtofl (ARG)
  2804                           ;!           ___flneg (ARG)
  2805                           ;!           ___xxtofl (ARG)
  2806                           ;!         ___flge
  2807                           ;!         ___flmul
  2808                           ;!           ___xxtofl (ARG)
  2809                           ;!         ___flneg
  2810                           ;!
  2811                           
  2812                           ;! Address spaces:
  2813                           
  2814                           ;!Name               Size   Autos  Total    Cost      Usage
  2815                           ;!BIGRAM             7FF      0       0      21        0.0%
  2816                           ;!EEDATA             100      0       0       0        0.0%
  2817                           ;!BITBANK7           100      0       0      18        0.0%
  2818                           ;!BANK7              100      0       0      19        0.0%
  2819                           ;!BITBANK6           100      0       0      16        0.0%
  2820                           ;!BANK6              100      0       0      17        0.0%
  2821                           ;!BITBANK5           100      0       0      14        0.0%
  2822                           ;!BANK5              100      0       0      15        0.0%
  2823                           ;!BITBANK4           100      0       0      12        0.0%
  2824                           ;!BANK4              100      0       0      13        0.0%
  2825                           ;!BITBANK3           100      0       0      10        0.0%
  2826                           ;!BANK3              100      0       0      11        0.0%
  2827                           ;!BITBANK2           100      0       0       8        0.0%
  2828                           ;!BANK2              100      0       0       9        0.0%
  2829                           ;!BITBANK1           100      0       0       6        0.0%
  2830                           ;!BANK1              100      0      40       7       25.0%
  2831                           ;!BITBANK0            A0      0       0       4        0.0%
  2832                           ;!BANK0               A0     4C      9F       5       99.4%
  2833                           ;!BITCOMRAM           5F      0       0       0        0.0%
  2834                           ;!COMRAM              5F     5F      5F       1      100.0%
  2835                           ;!BITSFR               0      0       0     200        0.0%
  2836                           ;!SFR                  0      0       0     200        0.0%
  2837                           ;!STACK                0      0       0       2        0.0%
  2838                           ;!NULL                 0      0       0       0        0.0%
  2839                           ;!ABS                  0      0     13E      20        0.0%
  2840                           ;!DATA                 0      0     13E       3        0.0%
  2841                           ;!CODE                 0      0       0       0        0.0%
  2842                           
  2843                           	global	_main
  2844                           
  2845 ;; *************** function _main *****************
  2846 ;; Defined at:
  2847 ;;		line 30 in file "main.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  argc            2   53[BANK0 ] int 
  2850 ;;  argv            3   55[BANK0 ] PTR PTR unsigned char 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  temp            2   74[BANK0 ] unsigned int 
  2853 ;;  humid           2   72[BANK0 ] unsigned int 
  2854 ;;  x_sol           2   70[BANK0 ] unsigned int 
  2855 ;;  lum             2   68[BANK0 ] unsigned int 
  2856 ;;  Period          2   66[BANK0 ] int 
  2857 ;;  x_temp          2   64[BANK0 ] unsigned int 
  2858 ;;  x_humid         2   62[BANK0 ] unsigned int 
  2859 ;;  sol             2   60[BANK0 ] unsigned int 
  2860 ;;  x_lum           2   58[BANK0 ] unsigned int 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  2   53[BANK0 ] int 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2870 ;;      Params:         0       5       0       0       0       0       0       0       0
  2871 ;;      Locals:         0      18       0       0       0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2873 ;;      Totals:         0      23       0       0       0       0       0       0       0
  2874 ;;Total ram usage:       23 bytes
  2875 ;; Hardware stack levels required when called:   10
  2876 ;; This function calls:
  2877 ;;		_LCD_Clear
  2878 ;;		_LCD_Init
  2879 ;;		_LCD_String_xy
  2880 ;;		_MSdelay
  2881 ;;		_PWM_Init
  2882 ;;		_SetDutyCycleTo
  2883 ;;		_adc_init
  2884 ;;		_adc_read_humid
  2885 ;;		_adc_read_lum
  2886 ;;		_adc_read_sol
  2887 ;;		_adc_read_temp
  2888 ;;		_hex_converter
  2889 ;;		_lcd_humid
  2890 ;;		_lcd_lum
  2891 ;;		_lcd_sol
  2892 ;;		_lcd_temp
  2893 ;;		_setPeriodTo
  2894 ;;		_stream
  2895 ;; This function is called by:
  2896 ;;		Startup code after reset
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           psect	text0,class=CODE,space=0,reloc=2,group=0
  2900                           	file	"main.c"
  2901                           	line	30
  2902                           global __ptext0
  2903                           __ptext0:
  2904  0040C4                     psect	text0
  2905                           	file	"main.c"
  2906                           	line	30
  2907                           	global	__size_of_main
  2908                           	__size_of_main	equ	__end_of_main-_main
  2909  0000                     	
  2910                           _main:
  2911  0040C4                     ;incstack = 0
  2912                           	opt	stack 21
  2913                           	line	46
  2914                           	
  2915                           l5077:
  2916  0040C4                     ;main.c: 32:     const int limit_humidity_soil=350;;main.c: 34:     unsigned int x_lum;;
                                 main.c: 35:     unsigned int lum;;main.c: 37:     unsigned int x_sol;;main.c: 38:     un
                                 signed int sol;;main.c: 40:     unsigned int x_humid;;main.c: 41:     unsigned int humid
                                 ;;main.c: 43:     unsigned int x_temp;;main.c: 44:     unsigned int temp;;main.c: 46:   
                                   PWM_Init();
  2917                           	call	_PWM_Init	;wreg free
  2918  0040C4  ECCA  F02B         	line	47
  2919                           	
  2920                           l5079:
  2921  0040C8                     ;main.c: 47:     int Period = setPeriodTo(50);
  2922                           	movlw	low(032h)
  2923  0040C8  0E32               	movlb	0	; () banked
  2924  0040CA  0100               	movwf	((setPeriodTo@FPWM))&0ffh
  2925  0040CC  6F72               	movlw	high(032h)
  2926  0040CE  0E00               	movwf	((setPeriodTo@FPWM+1))&0ffh
  2927  0040D0  6F73               	movlw	low highword(032h)
  2928  0040D2  0E00               	movwf	((setPeriodTo@FPWM+2))&0ffh
  2929  0040D4  6F74               	movlw	high highword(032h)
  2930  0040D6  0E00               	movwf	((setPeriodTo@FPWM+3))&0ffh
  2931  0040D8  6F75               	call	_setPeriodTo	;wreg free
  2932  0040DA  EC79  F018         	movff	0+?_setPeriodTo,(main@Period)
  2933  0040DE  C072  F0A2         	movff	1+?_setPeriodTo,(main@Period+1)
  2934  0040E2  C073  F0A3         	line	48
  2935                           	
  2936                           l5081:
  2937  0040E6                     ;main.c: 48:     SetDutyCycleTo(3.0,Period);
  2938                           	movlw	low(normalize32(0x40400000))
  2939  0040E6  0E00               	movlb	0	; () banked
  2940  0040E8  0100               	movwf	((SetDutyCycleTo@Duty_cycle))&0ffh
  2941  0040EA  6F60               	movlw	high(normalize32(0x40400000))
  2942  0040EC  0E00               	movwf	((SetDutyCycleTo@Duty_cycle+1))&0ffh
  2943  0040EE  6F61               	movlw	low highword(normalize32(0x40400000))
  2944  0040F0  0E40               	movwf	((SetDutyCycleTo@Duty_cycle+2))&0ffh
  2945  0040F2  6F62               	movlw	high highword(normalize32(0x40400000))
  2946  0040F4  0E40               	movwf	((SetDutyCycleTo@Duty_cycle+3))&0ffh
  2947  0040F6  6F63               	movff	(main@Period),(SetDutyCycleTo@Period)
  2948  0040F8  C0A2  F064         	movff	(main@Period+1),(SetDutyCycleTo@Period+1)
  2949  0040FC  C0A3  F065         	call	_SetDutyCycleTo	;wreg free
  2950  004100  EC1A  F023         	goto	l5083
  2951  004104  EF84  F020         	line	52
  2952                           ;main.c: 52:     while(1){
  2953                           	
  2954                           l191:
  2955  004108                     	line	53
  2956                           	
  2957                           l5083:
  2958  004108                     ;main.c: 53:         OSCCON = 0x72;
  2959                           	movlw	low(072h)
  2960  004108  0E72               	movwf	((c:4051)),c	;volatile
  2961  00410A  6ED3               	line	54
  2962                           	
  2963                           l5085:
  2964  00410C                     ;main.c: 54:         LCD_Init();
  2965                           	call	_LCD_Init	;wreg free
  2966  00410C  EC5C  F02B         	line	55
  2967                           	
  2968                           l5087:
  2969  004110                     ;main.c: 55:         adc_init();
  2970                           	call	_adc_init	;wreg free
  2971  004110  ECC3  F02B         	line	61
  2972                           	
  2973                           l5089:
  2974  004114                     ;main.c: 61:         LCD_String_xy(1,1,"Garden Infos");
  2975                           	movlw	low(01h)
  2976  004114  0E01               	movwf	((c:LCD_String_xy@pos)),c
  2977  004116  6E0B               		movlw	low(STR_7)
  2978  004118  0E71               	movwf	((c:LCD_String_xy@msg)),c
  2979  00411A  6E0C               	movlw	high(STR_7)
  2980  00411C  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
  2981  00411E  6E0D               
  2982                           	movlw	(01h)&0ffh
  2983  004120  0E01               	
  2984                           	call	_LCD_String_xy
  2985  004122  ECB7  F02A         	line	62
  2986                           	
  2987                           l5091:
  2988  004126                     ;main.c: 62:         MSdelay(2000);
  2989                           	movlw	high(07D0h)
  2990  004126  0E07               	movwf	((c:MSdelay@val+1)),c
  2991  004128  6E02               	movlw	low(07D0h)
  2992  00412A  0ED0               	movwf	((c:MSdelay@val)),c
  2993  00412C  6E01               	call	_MSdelay	;wreg free
  2994  00412E  EC07  F028         	line	63
  2995                           	
  2996                           l5093:
  2997  004132                     ;main.c: 63:         x_lum=adc_read_lum();
  2998                           	call	_adc_read_lum	;wreg free
  2999  004132  ECF2  F029         	movff	0+?_adc_read_lum,(main@x_lum)
  3000  004136  C007  F09A         	movff	1+?_adc_read_lum,(main@x_lum+1)
  3001  00413A  C008  F09B         	line	64
  3002                           	
  3003                           l5095:
  3004  00413E                     ;main.c: 64:         LCD_Clear();
  3005                           	call	_LCD_Clear	;wreg free
  3006  00413E  ECCE  F02B         	line	65
  3007                           	
  3008                           l5097:
  3009  004142                     ;main.c: 65:         lum=hex_converter(x_lum);
  3010                           	movff	(main@x_lum),(c:hex_converter@x)
  3011  004142  C09A  F017         	movff	(main@x_lum+1),(c:hex_converter@x+1)
  3012  004146  C09B  F018         	call	_hex_converter	;wreg free
  3013  00414A  EC35  F026         	movff	0+?_hex_converter,(main@lum)
  3014  00414E  C017  F0A4         	movff	1+?_hex_converter,(main@lum+1)
  3015  004152  C018  F0A5         	line	66
  3016                           	
  3017                           l5099:
  3018  004156                     ;main.c: 66:         lcd_lum(lum);
  3019                           	movff	(main@lum),(c:lcd_lum@l)
  3020  004156  C0A4  F05E         	movff	(main@lum+1),(c:lcd_lum@l+1)
  3021  00415A  C0A5  F05F         	call	_lcd_lum	;wreg free
  3022  00415E  ECF5  F026         	line	69
  3023                           	
  3024                           l5101:
  3025  004162                     ;main.c: 69:         x_sol=adc_read_sol();
  3026                           	call	_adc_read_sol	;wreg free
  3027  004162  EC69  F029         	movff	0+?_adc_read_sol,(main@x_sol)
  3028  004166  C007  F0A6         	movff	1+?_adc_read_sol,(main@x_sol+1)
  3029  00416A  C008  F0A7         	line	70
  3030                           	
  3031                           l5103:
  3032  00416E                     ;main.c: 70:         LCD_Clear();
  3033                           	call	_LCD_Clear	;wreg free
  3034  00416E  ECCE  F02B         	line	71
  3035                           	
  3036                           l5105:
  3037  004172                     ;main.c: 71:         sol=hex_converter(x_sol);
  3038                           	movff	(main@x_sol),(c:hex_converter@x)
  3039  004172  C0A6  F017         	movff	(main@x_sol+1),(c:hex_converter@x+1)
  3040  004176  C0A7  F018         	call	_hex_converter	;wreg free
  3041  00417A  EC35  F026         	movff	0+?_hex_converter,(main@sol)
  3042  00417E  C017  F09C         	movff	1+?_hex_converter,(main@sol+1)
  3043  004182  C018  F09D         	line	72
  3044                           	
  3045                           l5107:
  3046  004186                     ;main.c: 72:         lcd_sol(sol);
  3047                           	movff	(main@sol),(c:lcd_sol@s)
  3048  004186  C09C  F05E         	movff	(main@sol+1),(c:lcd_sol@s+1)
  3049  00418A  C09D  F05F         	call	_lcd_sol	;wreg free
  3050  00418E  EC9A  F023         	line	74
  3051                           	
  3052                           l5109:
  3053  004192                     ;main.c: 74:         x_humid=adc_read_humid();
  3054                           	call	_adc_read_humid	;wreg free
  3055  004192  EC97  F029         	movff	0+?_adc_read_humid,(main@x_humid)
  3056  004196  C007  F09E         	movff	1+?_adc_read_humid,(main@x_humid+1)
  3057  00419A  C008  F09F         	line	75
  3058                           	
  3059                           l5111:
  3060  00419E                     ;main.c: 75:         LCD_Clear();
  3061                           	call	_LCD_Clear	;wreg free
  3062  00419E  ECCE  F02B         	line	76
  3063                           	
  3064                           l5113:
  3065  0041A2                     ;main.c: 76:         humid=hex_converter(x_humid);
  3066                           	movff	(main@x_humid),(c:hex_converter@x)
  3067  0041A2  C09E  F017         	movff	(main@x_humid+1),(c:hex_converter@x+1)
  3068  0041A6  C09F  F018         	call	_hex_converter	;wreg free
  3069  0041AA  EC35  F026         	movff	0+?_hex_converter,(main@humid)
  3070  0041AE  C017  F0A8         	movff	1+?_hex_converter,(main@humid+1)
  3071  0041B2  C018  F0A9         	line	77
  3072                           	
  3073                           l5115:
  3074  0041B6                     ;main.c: 77:         lcd_humid(humid);
  3075                           	movff	(main@humid),(c:lcd_humid@h)
  3076  0041B6  C0A8  F05E         	movff	(main@humid+1),(c:lcd_humid@h+1)
  3077  0041BA  C0A9  F05F         	call	_lcd_humid	;wreg free
  3078  0041BE  ECCD  F025         	line	79
  3079                           	
  3080                           l5117:
  3081  0041C2                     ;main.c: 79:         x_temp=adc_read_temp();
  3082                           	call	_adc_read_temp	;wreg free
  3083  0041C2  EC3B  F029         	movff	0+?_adc_read_temp,(main@x_temp)
  3084  0041C6  C007  F0A0         	movff	1+?_adc_read_temp,(main@x_temp+1)
  3085  0041CA  C008  F0A1         	line	80
  3086                           	
  3087                           l5119:
  3088  0041CE                     ;main.c: 80:         LCD_Clear();
  3089                           	call	_LCD_Clear	;wreg free
  3090  0041CE  ECCE  F02B         	line	81
  3091                           	
  3092                           l5121:
  3093  0041D2                     ;main.c: 81:         temp=hex_converter(x_temp);
  3094                           	movff	(main@x_temp),(c:hex_converter@x)
  3095  0041D2  C0A0  F017         	movff	(main@x_temp+1),(c:hex_converter@x+1)
  3096  0041D6  C0A1  F018         	call	_hex_converter	;wreg free
  3097  0041DA  EC35  F026         	movff	0+?_hex_converter,(main@temp)
  3098  0041DE  C017  F0AA         	movff	1+?_hex_converter,(main@temp+1)
  3099  0041E2  C018  F0AB         	line	82
  3100                           	
  3101                           l5123:
  3102  0041E6                     ;main.c: 82:         lcd_temp(temp);
  3103                           	movff	(main@temp),(c:lcd_temp@t)
  3104  0041E6  C0AA  F05E         	movff	(main@temp+1),(c:lcd_temp@t+1)
  3105  0041EA  C0AB  F05F         	call	_lcd_temp	;wreg free
  3106  0041EE  EC65  F025         	line	84
  3107                           	
  3108                           l5125:
  3109  0041F2                     ;main.c: 84:         if(x_sol<limit_humidity_soil)stream(temp, humid, lum);
  3110                           	movlw	low((main@limit_humidity_soil))
  3111  0041F2  0E11               	movwf	tblptrl
  3112  0041F4  6EF6               	if	1	;There is more than 1 active tblptr byte
  3113  0041F6                     	movlw	high((main@limit_humidity_soil))
  3114  0041F6  0E08               	movwf	tblptrh
  3115  0041F8  6EF7               	endif
  3116  0041FA                     	if	0	;There are less than 3 active tblptr bytes
  3117  0041FA                     	movlw	low highword((main@limit_humidity_soil))
  3120  0041FA                     		tblrd	*+
  3121  0041FA  0009               	movf	tablat,w
  3122  0041FC  50F5               	movlb	0	; () banked
  3123  0041FE  0100               	subwf	((main@x_sol))&0ffh,w
  3124  004200  5DA6               	tblrd	*+
  3125  004202  0009               	movf	tablat,w
  3126  004204  50F5               	subwfb	((main@x_sol+1))&0ffh,w
  3127  004206  59A7               	btfsc	status,0
  3128  004208  B0D8               	goto	u7221
  3129  00420A  EF09  F021         	goto	u7220
  3130  00420E  EF0B  F021         
  3131                           u7221:
  3132  004212                     	goto	l5083
  3133  004212  EF84  F020         u7220:
  3134  004216                     	
  3135                           l5127:; BSR set to: 0
  3136  004216                     
  3137                           	movff	(main@temp),(stream@temperature)
  3138  004216  C0AA  F08C         	movff	(main@temp+1),(stream@temperature+1)
  3139  00421A  C0AB  F08D         	movff	(main@humid),(stream@air_humidity)
  3140  00421E  C0A8  F08E         	movff	(main@humid+1),(stream@air_humidity+1)
  3141  004222  C0A9  F08F         	movff	(main@lum),(stream@photoresistance)
  3142  004226  C0A4  F090         	movff	(main@lum+1),(stream@photoresistance+1)
  3143  00422A  C0A5  F091         	call	_stream	;wreg free
  3144  00422E  EC11  F009         	goto	l5083
  3145  004232  EF84  F020         	
  3146                           l192:
  3147  004236                     	goto	l5083
  3148  004236  EF84  F020         	line	85
  3149                           ;main.c: 85:  }
  3150                           	
  3151                           l193:
  3152  00423A                     	goto	l5083
  3153  00423A  EF84  F020         	
  3154                           l194:
  3155  00423E                     	line	86
  3156                           	
  3157                           l195:
  3158  00423E                     	global	start
  3159                           	goto	start
  3160  00423E  EF00  F000         	opt stack 0
  3161                           GLOBAL	__end_of_main
  3162                           	__end_of_main:
  3163  004242                     	signat	_main,8314
  3164                           	global	_stream
  3165                           
  3166 ;; *************** function _stream *****************
  3167 ;; Defined at:
  3168 ;;		line 113 in file "./servomoteur.h"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  temperature     2   44[BANK0 ] int 
  3171 ;;  air_humidity    2   46[BANK0 ] int 
  3172 ;;  photoresista    2   48[BANK0 ] int 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  Period          2   51[BANK0 ] int 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3184 ;;      Params:         0       6       0       0       0       0       0       0       0
  3185 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3186 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3187 ;;      Totals:         0       9       0       0       0       0       0       0       0
  3188 ;;Total ram usage:        9 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    9
  3191 ;; This function calls:
  3192 ;;		_SetDutyCycleTo
  3193 ;;		_arrosage
  3194 ;;		_delay
  3195 ;;		_lcd_arrosage
  3196 ;;		_setPeriodTo
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           psect	text1,class=CODE,space=0,reloc=2,group=0
  3202                           	file	"./servomoteur.h"
  3203                           	line	113
  3204                           global __ptext1
  3205                           __ptext1:
  3206  001222                     psect	text1
  3207                           	file	"./servomoteur.h"
  3208                           	line	113
  3209                           	global	__size_of_stream
  3210                           	__size_of_stream	equ	__end_of_stream-_stream
  3211  0000                     	
  3212                           _stream:
  3213  001222                     ;incstack = 0
  3214                           	opt	stack 21
  3215                           	line	134
  3216                           	
  3217                           l4829:
  3218  001222                     ;./servomoteur.h: 113: void stream(int temperature, int air_humidity, int photoresistanc
                                 e);./servomoteur.h: 114: {;./servomoteur.h: 122:     const float servo_init=3.0;;./servo
                                 moteur.h: 123:     const float servo_mid=7.6;;./servomoteur.h: 124:     const float serv
                                 o_max=12.0;;./servomoteur.h: 125:     const int time_mid=5000;;./servomoteur.h: 126:    
                                  const int time_max=10000;;./servomoteur.h: 127:     const int limit_temperature=500;;./
                                 servomoteur.h: 128:     const int limit_humidity_air=500;;./servomoteur.h: 130:     cons
                                 t int limit_time=300;
  3219                           	movlw	low(032h)
  3220  001222  0E32               	movlb	0	; () banked
  3221  001224  0100               	movwf	((setPeriodTo@FPWM))&0ffh
  3222  001226  6F72               	movlw	high(032h)
  3223  001228  0E00               	movwf	((setPeriodTo@FPWM+1))&0ffh
  3224  00122A  6F73               	movlw	low highword(032h)
  3225  00122C  0E00               	movwf	((setPeriodTo@FPWM+2))&0ffh
  3226  00122E  6F74               	movlw	high highword(032h)
  3227  001230  0E00               	movwf	((setPeriodTo@FPWM+3))&0ffh
  3228  001232  6F75               	call	_setPeriodTo	;wreg free
  3229  001234  EC79  F018         	movff	0+?_setPeriodTo,(stream@Period)
  3230  001238  C072  F093         	movff	1+?_setPeriodTo,(stream@Period+1)
  3231  00123C  C073  F094         	line	151
  3232                           	
  3233                           l4831:
  3234  001240                     ;./servomoteur.h: 151:         if(temperature>limit_temperature && air_humidity<limit_hu
                                 midity_air && photoresistance<limit_time)
  3235                           	movlw	low((stream@limit_temperature))
  3236  001240  0E17               	movwf	tblptrl
  3237  001242  6EF6               	if	1	;There is more than 1 active tblptr byte
  3238  001244                     	movlw	high((stream@limit_temperature))
  3239  001244  0E08               	movwf	tblptrh
  3240  001246  6EF7               	endif
  3241  001248                     	if	0	;There are less than 3 active tblptr bytes
  3242  001248                     	movlw	low highword((stream@limit_temperature))
  3245  001248                     	movlb	0	; () banked
  3246  001248  0100               		movf	((stream@temperature))&0ffh,w
  3247  00124A  518C               	tblrd	*+
  3248  00124C  0009               	subwf	tablat,w
  3249  00124E  5CF5               	tblrd	*+
  3250  001250  0009               	movf	tablat,w
  3251  001252  50F5               	xorlw	80h
  3252  001254  0A80               	movwf	(??_stream+0+0)&0ffh
  3253  001256  6F92               	movf	((stream@temperature+1))&0ffh,w
  3254  001258  518D               	xorlw	80h
  3255  00125A  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3256  00125C  5992               	btfsc	status,0
  3257  00125E  B0D8               	goto	u6841
  3258  001260  EF34  F009         	goto	u6840
  3259  001264  EF36  F009         
  3260                           u6841:
  3261  001268                     	goto	l4841
  3262  001268  EF9E  F009         u6840:
  3263  00126C                     	
  3264                           l4833:; BSR set to: 0
  3265  00126C                     
  3266                           	movlw	low((stream@limit_humidity_air))
  3267  00126C  0E15               	movwf	tblptrl
  3268  00126E  6EF6               	if	1	;There is more than 1 active tblptr byte
  3269  001270                     	movlw	high((stream@limit_humidity_air))
  3270  001270  0E08               	movwf	tblptrh
  3271  001272  6EF7               	endif
  3272  001274                     	if	0	;There are less than 3 active tblptr bytes
  3273  001274                     	movlw	low highword((stream@limit_humidity_air))
  3276  001274                     		tblrd	*+
  3277  001274  0009               	movf	tablat,w
  3278  001276  50F5               	subwf	((stream@air_humidity))&0ffh,w
  3279  001278  5D8E               	movf	((stream@air_humidity+1))&0ffh,w
  3280  00127A  518F               	xorlw	80h
  3281  00127C  0A80               	movwf	(??_stream+0+0)&0ffh
  3282  00127E  6F92               	tblrd	*+
  3283  001280  0009               	movf	tablat,w
  3284  001282  50F5               	xorlw	80h
  3285  001284  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3286  001286  5992               	btfsc	status,0
  3287  001288  B0D8               	goto	u6851
  3288  00128A  EF49  F009         	goto	u6850
  3289  00128E  EF4B  F009         
  3290                           u6851:
  3291  001292                     	goto	l4841
  3292  001292  EF9E  F009         u6850:
  3293  001296                     	
  3294                           l4835:; BSR set to: 0
  3295  001296                     
  3296                           	movlw	low((stream@limit_time))
  3297  001296  0E13               	movwf	tblptrl
  3298  001298  6EF6               	if	1	;There is more than 1 active tblptr byte
  3299  00129A                     	movlw	high((stream@limit_time))
  3300  00129A  0E08               	movwf	tblptrh
  3301  00129C  6EF7               	endif
  3302  00129E                     	if	0	;There are less than 3 active tblptr bytes
  3303  00129E                     	movlw	low highword((stream@limit_time))
  3306  00129E                     		tblrd	*+
  3307  00129E  0009               	movf	tablat,w
  3308  0012A0  50F5               	subwf	((stream@photoresistance))&0ffh,w
  3309  0012A2  5D90               	movf	((stream@photoresistance+1))&0ffh,w
  3310  0012A4  5191               	xorlw	80h
  3311  0012A6  0A80               	movwf	(??_stream+0+0)&0ffh
  3312  0012A8  6F92               	tblrd	*+
  3313  0012AA  0009               	movf	tablat,w
  3314  0012AC  50F5               	xorlw	80h
  3315  0012AE  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3316  0012B0  5992               	btfsc	status,0
  3317  0012B2  B0D8               	goto	u6861
  3318  0012B4  EF5E  F009         	goto	u6860
  3319  0012B8  EF60  F009         
  3320                           u6861:
  3321  0012BC                     	goto	l4841
  3322  0012BC  EF9E  F009         u6860:
  3323  0012C0                     	line	152
  3324                           	
  3325                           l4837:; BSR set to: 0
  3326  0012C0                     
  3327                           ;./servomoteur.h: 152:             {lcd_arrosage(servo_max,time_max);arrosage(servo_max,
                                 Period,time_max);}
  3328                           	movlw	low((stream@servo_max))
  3329  0012C0  0E05               	movwf	tblptrl
  3330  0012C2  6EF6               	if	1	;There is more than 1 active tblptr byte
  3331  0012C4                     	movlw	high((stream@servo_max))
  3332  0012C4  0E08               	movwf	tblptrh
  3333  0012C6  6EF7               	endif
  3334  0012C8                     	if	0	;There are less than 3 active tblptr bytes
  3335  0012C8                     	movlw	low highword((stream@servo_max))
  3338  0012C8                     	tblrd*+
  3339  0012C8  0009               	
  3340                           	movff	tablat,(lcd_arrosage@angle)
  3341  0012CA  CFF5 F06A          	tblrd*+
  3342  0012CE  0009               	
  3343                           	movff	tablat,(lcd_arrosage@angle+1)
  3344  0012D0  CFF5 F06B          	tblrd*+
  3345  0012D4  0009               	
  3346                           	movff	tablat,(lcd_arrosage@angle+2)
  3347  0012D6  CFF5 F06C          	tblrd*-
  3348  0012DA  000A               	
  3349                           	movff	tablat,(lcd_arrosage@angle+3)
  3350  0012DC  CFF5 F06D          	movlw	low((stream@time_max))
  3351  0012E0  0E19               	movwf	tblptrl
  3352  0012E2  6EF6               	if	1	;There is more than 1 active tblptr byte
  3353  0012E4                     	movlw	high((stream@time_max))
  3354  0012E4  0E08               	movwf	tblptrh
  3355  0012E6  6EF7               	endif
  3356  0012E8                     	if	0	;There are less than 3 active tblptr bytes
  3357  0012E8                     	movlw	low highword((stream@time_max))
  3360  0012E8                     	tblrd*+
  3361  0012E8  0009               	
  3362                           	movff	tablat,(lcd_arrosage@time)
  3363  0012EA  CFF5 F06E          	tblrd*-
  3364  0012EE  000A               	
  3365                           	movff	tablat,(lcd_arrosage@time+1)
  3366  0012F0  CFF5 F06F          
  3367                           	call	_lcd_arrosage	;wreg free
  3368  0012F4  EC7E  F022         	
  3369                           l4839:
  3370  0012F8                     	movlw	low((stream@servo_max))
  3371  0012F8  0E05               	movwf	tblptrl
  3372  0012FA  6EF6               	if	1	;There is more than 1 active tblptr byte
  3373  0012FC                     	movlw	high((stream@servo_max))
  3374  0012FC  0E08               	movwf	tblptrh
  3375  0012FE  6EF7               	endif
  3376  001300                     	if	0	;There are less than 3 active tblptr bytes
  3377  001300                     	movlw	low highword((stream@servo_max))
  3380  001300                     	tblrd*+
  3381  001300  0009               	
  3382                           	movff	tablat,(arrosage@duty_cycle)
  3383  001302  CFF5 F06E          	tblrd*+
  3384  001306  0009               	
  3385                           	movff	tablat,(arrosage@duty_cycle+1)
  3386  001308  CFF5 F06F          	tblrd*+
  3387  00130C  0009               	
  3388                           	movff	tablat,(arrosage@duty_cycle+2)
  3389  00130E  CFF5 F070          	tblrd*-
  3390  001312  000A               	
  3391                           	movff	tablat,(arrosage@duty_cycle+3)
  3392  001314  CFF5 F071          	movff	(stream@Period),(arrosage@Period)
  3393  001318  C093  F072         	movff	(stream@Period+1),(arrosage@Period+1)
  3394  00131C  C094  F073         	movlw	low((stream@time_max))
  3395  001320  0E19               	movwf	tblptrl
  3396  001322  6EF6               	if	1	;There is more than 1 active tblptr byte
  3397  001324                     	movlw	high((stream@time_max))
  3398  001324  0E08               	movwf	tblptrh
  3399  001326  6EF7               	endif
  3400  001328                     	if	0	;There are less than 3 active tblptr bytes
  3401  001328                     	movlw	low highword((stream@time_max))
  3404  001328                     	tblrd*+
  3405  001328  0009               	
  3406                           	movff	tablat,(arrosage@time)
  3407  00132A  CFF5 F074          	tblrd*-
  3408  00132E  000A               	
  3409                           	movff	tablat,(arrosage@time+1)
  3410  001330  CFF5 F075          
  3411                           	call	_arrosage	;wreg free
  3412  001334  EC74  F02B         	goto	l4841
  3413  001338  EF9E  F009         	
  3414                           l176:
  3415  00133C                     	line	153
  3416                           	
  3417                           l4841:
  3418  00133C                     ;./servomoteur.h: 153:         if(temperature>limit_temperature && air_humidity>limit_hu
                                 midity_air && photoresistance<limit_time)
  3419                           	movlw	low((stream@limit_temperature))
  3420  00133C  0E17               	movwf	tblptrl
  3421  00133E  6EF6               	if	1	;There is more than 1 active tblptr byte
  3422  001340                     	movlw	high((stream@limit_temperature))
  3423  001340  0E08               	movwf	tblptrh
  3424  001342  6EF7               	endif
  3425  001344                     	if	0	;There are less than 3 active tblptr bytes
  3426  001344                     	movlw	low highword((stream@limit_temperature))
  3429  001344                     	movlb	0	; () banked
  3430  001344  0100               		movf	((stream@temperature))&0ffh,w
  3431  001346  518C               	tblrd	*+
  3432  001348  0009               	subwf	tablat,w
  3433  00134A  5CF5               	tblrd	*+
  3434  00134C  0009               	movf	tablat,w
  3435  00134E  50F5               	xorlw	80h
  3436  001350  0A80               	movwf	(??_stream+0+0)&0ffh
  3437  001352  6F92               	movf	((stream@temperature+1))&0ffh,w
  3438  001354  518D               	xorlw	80h
  3439  001356  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3440  001358  5992               	btfsc	status,0
  3441  00135A  B0D8               	goto	u6871
  3442  00135C  EFB2  F009         	goto	u6870
  3443  001360  EFB4  F009         
  3444                           u6871:
  3445  001364                     	goto	l4851
  3446  001364  EF1C  F00A         u6870:
  3447  001368                     	
  3448                           l4843:; BSR set to: 0
  3449  001368                     
  3450                           	movlw	low((stream@limit_humidity_air))
  3451  001368  0E15               	movwf	tblptrl
  3452  00136A  6EF6               	if	1	;There is more than 1 active tblptr byte
  3453  00136C                     	movlw	high((stream@limit_humidity_air))
  3454  00136C  0E08               	movwf	tblptrh
  3455  00136E  6EF7               	endif
  3456  001370                     	if	0	;There are less than 3 active tblptr bytes
  3457  001370                     	movlw	low highword((stream@limit_humidity_air))
  3460  001370                     		movf	((stream@air_humidity))&0ffh,w
  3461  001370  518E               	tblrd	*+
  3462  001372  0009               	subwf	tablat,w
  3463  001374  5CF5               	tblrd	*+
  3464  001376  0009               	movf	tablat,w
  3465  001378  50F5               	xorlw	80h
  3466  00137A  0A80               	movwf	(??_stream+0+0)&0ffh
  3467  00137C  6F92               	movf	((stream@air_humidity+1))&0ffh,w
  3468  00137E  518F               	xorlw	80h
  3469  001380  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3470  001382  5992               	btfsc	status,0
  3471  001384  B0D8               	goto	u6881
  3472  001386  EFC7  F009         	goto	u6880
  3473  00138A  EFC9  F009         
  3474                           u6881:
  3475  00138E                     	goto	l4851
  3476  00138E  EF1C  F00A         u6880:
  3477  001392                     	
  3478                           l4845:; BSR set to: 0
  3479  001392                     
  3480                           	movlw	low((stream@limit_time))
  3481  001392  0E13               	movwf	tblptrl
  3482  001394  6EF6               	if	1	;There is more than 1 active tblptr byte
  3483  001396                     	movlw	high((stream@limit_time))
  3484  001396  0E08               	movwf	tblptrh
  3485  001398  6EF7               	endif
  3486  00139A                     	if	0	;There are less than 3 active tblptr bytes
  3487  00139A                     	movlw	low highword((stream@limit_time))
  3490  00139A                     		tblrd	*+
  3491  00139A  0009               	movf	tablat,w
  3492  00139C  50F5               	subwf	((stream@photoresistance))&0ffh,w
  3493  00139E  5D90               	movf	((stream@photoresistance+1))&0ffh,w
  3494  0013A0  5191               	xorlw	80h
  3495  0013A2  0A80               	movwf	(??_stream+0+0)&0ffh
  3496  0013A4  6F92               	tblrd	*+
  3497  0013A6  0009               	movf	tablat,w
  3498  0013A8  50F5               	xorlw	80h
  3499  0013AA  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3500  0013AC  5992               	btfsc	status,0
  3501  0013AE  B0D8               	goto	u6891
  3502  0013B0  EFDC  F009         	goto	u6890
  3503  0013B4  EFDE  F009         
  3504                           u6891:
  3505  0013B8                     	goto	l4851
  3506  0013B8  EF1C  F00A         u6890:
  3507  0013BC                     	line	154
  3508                           	
  3509                           l4847:; BSR set to: 0
  3510  0013BC                     
  3511                           ;./servomoteur.h: 154:             {lcd_arrosage(servo_max,time_mid);arrosage(servo_max,
                                 Period,time_mid);}
  3512                           	movlw	low((stream@servo_max))
  3513  0013BC  0E05               	movwf	tblptrl
  3514  0013BE  6EF6               	if	1	;There is more than 1 active tblptr byte
  3515  0013C0                     	movlw	high((stream@servo_max))
  3516  0013C0  0E08               	movwf	tblptrh
  3517  0013C2  6EF7               	endif
  3518  0013C4                     	if	0	;There are less than 3 active tblptr bytes
  3519  0013C4                     	movlw	low highword((stream@servo_max))
  3522  0013C4                     	tblrd*+
  3523  0013C4  0009               	
  3524                           	movff	tablat,(lcd_arrosage@angle)
  3525  0013C6  CFF5 F06A          	tblrd*+
  3526  0013CA  0009               	
  3527                           	movff	tablat,(lcd_arrosage@angle+1)
  3528  0013CC  CFF5 F06B          	tblrd*+
  3529  0013D0  0009               	
  3530                           	movff	tablat,(lcd_arrosage@angle+2)
  3531  0013D2  CFF5 F06C          	tblrd*-
  3532  0013D6  000A               	
  3533                           	movff	tablat,(lcd_arrosage@angle+3)
  3534  0013D8  CFF5 F06D          	movlw	low((stream@time_mid))
  3535  0013DC  0E1B               	movwf	tblptrl
  3536  0013DE  6EF6               	if	1	;There is more than 1 active tblptr byte
  3537  0013E0                     	movlw	high((stream@time_mid))
  3538  0013E0  0E08               	movwf	tblptrh
  3539  0013E2  6EF7               	endif
  3540  0013E4                     	if	0	;There are less than 3 active tblptr bytes
  3541  0013E4                     	movlw	low highword((stream@time_mid))
  3544  0013E4                     	tblrd*+
  3545  0013E4  0009               	
  3546                           	movff	tablat,(lcd_arrosage@time)
  3547  0013E6  CFF5 F06E          	tblrd*-
  3548  0013EA  000A               	
  3549                           	movff	tablat,(lcd_arrosage@time+1)
  3550  0013EC  CFF5 F06F          
  3551                           	call	_lcd_arrosage	;wreg free
  3552  0013F0  EC7E  F022         	
  3553                           l4849:
  3554  0013F4                     	movlw	low((stream@servo_max))
  3555  0013F4  0E05               	movwf	tblptrl
  3556  0013F6  6EF6               	if	1	;There is more than 1 active tblptr byte
  3557  0013F8                     	movlw	high((stream@servo_max))
  3558  0013F8  0E08               	movwf	tblptrh
  3559  0013FA  6EF7               	endif
  3560  0013FC                     	if	0	;There are less than 3 active tblptr bytes
  3561  0013FC                     	movlw	low highword((stream@servo_max))
  3564  0013FC                     	tblrd*+
  3565  0013FC  0009               	
  3566                           	movff	tablat,(arrosage@duty_cycle)
  3567  0013FE  CFF5 F06E          	tblrd*+
  3568  001402  0009               	
  3569                           	movff	tablat,(arrosage@duty_cycle+1)
  3570  001404  CFF5 F06F          	tblrd*+
  3571  001408  0009               	
  3572                           	movff	tablat,(arrosage@duty_cycle+2)
  3573  00140A  CFF5 F070          	tblrd*-
  3574  00140E  000A               	
  3575                           	movff	tablat,(arrosage@duty_cycle+3)
  3576  001410  CFF5 F071          	movff	(stream@Period),(arrosage@Period)
  3577  001414  C093  F072         	movff	(stream@Period+1),(arrosage@Period+1)
  3578  001418  C094  F073         	movlw	low((stream@time_mid))
  3579  00141C  0E1B               	movwf	tblptrl
  3580  00141E  6EF6               	if	1	;There is more than 1 active tblptr byte
  3581  001420                     	movlw	high((stream@time_mid))
  3582  001420  0E08               	movwf	tblptrh
  3583  001422  6EF7               	endif
  3584  001424                     	if	0	;There are less than 3 active tblptr bytes
  3585  001424                     	movlw	low highword((stream@time_mid))
  3588  001424                     	tblrd*+
  3589  001424  0009               	
  3590                           	movff	tablat,(arrosage@time)
  3591  001426  CFF5 F074          	tblrd*-
  3592  00142A  000A               	
  3593                           	movff	tablat,(arrosage@time+1)
  3594  00142C  CFF5 F075          
  3595                           	call	_arrosage	;wreg free
  3596  001430  EC74  F02B         	goto	l4851
  3597  001434  EF1C  F00A         	
  3598                           l177:
  3599  001438                     	line	155
  3600                           	
  3601                           l4851:
  3602  001438                     ;./servomoteur.h: 155:         if(temperature<limit_temperature && air_humidity<limit_hu
                                 midity_air && photoresistance<limit_time)
  3603                           	movlw	low((stream@limit_temperature))
  3604  001438  0E17               	movwf	tblptrl
  3605  00143A  6EF6               	if	1	;There is more than 1 active tblptr byte
  3606  00143C                     	movlw	high((stream@limit_temperature))
  3607  00143C  0E08               	movwf	tblptrh
  3608  00143E  6EF7               	endif
  3609  001440                     	if	0	;There are less than 3 active tblptr bytes
  3610  001440                     	movlw	low highword((stream@limit_temperature))
  3613  001440                     		tblrd	*+
  3614  001440  0009               	movf	tablat,w
  3615  001442  50F5               	movlb	0	; () banked
  3616  001444  0100               	subwf	((stream@temperature))&0ffh,w
  3617  001446  5D8C               	movf	((stream@temperature+1))&0ffh,w
  3618  001448  518D               	xorlw	80h
  3619  00144A  0A80               	movwf	(??_stream+0+0)&0ffh
  3620  00144C  6F92               	tblrd	*+
  3621  00144E  0009               	movf	tablat,w
  3622  001450  50F5               	xorlw	80h
  3623  001452  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3624  001454  5992               	btfsc	status,0
  3625  001456  B0D8               	goto	u6901
  3626  001458  EF30  F00A         	goto	u6900
  3627  00145C  EF32  F00A         
  3628                           u6901:
  3629  001460                     	goto	l4861
  3630  001460  EF9A  F00A         u6900:
  3631  001464                     	
  3632                           l4853:; BSR set to: 0
  3633  001464                     
  3634                           	movlw	low((stream@limit_humidity_air))
  3635  001464  0E15               	movwf	tblptrl
  3636  001466  6EF6               	if	1	;There is more than 1 active tblptr byte
  3637  001468                     	movlw	high((stream@limit_humidity_air))
  3638  001468  0E08               	movwf	tblptrh
  3639  00146A  6EF7               	endif
  3640  00146C                     	if	0	;There are less than 3 active tblptr bytes
  3641  00146C                     	movlw	low highword((stream@limit_humidity_air))
  3644  00146C                     		tblrd	*+
  3645  00146C  0009               	movf	tablat,w
  3646  00146E  50F5               	subwf	((stream@air_humidity))&0ffh,w
  3647  001470  5D8E               	movf	((stream@air_humidity+1))&0ffh,w
  3648  001472  518F               	xorlw	80h
  3649  001474  0A80               	movwf	(??_stream+0+0)&0ffh
  3650  001476  6F92               	tblrd	*+
  3651  001478  0009               	movf	tablat,w
  3652  00147A  50F5               	xorlw	80h
  3653  00147C  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3654  00147E  5992               	btfsc	status,0
  3655  001480  B0D8               	goto	u6911
  3656  001482  EF45  F00A         	goto	u6910
  3657  001486  EF47  F00A         
  3658                           u6911:
  3659  00148A                     	goto	l4861
  3660  00148A  EF9A  F00A         u6910:
  3661  00148E                     	
  3662                           l4855:; BSR set to: 0
  3663  00148E                     
  3664                           	movlw	low((stream@limit_time))
  3665  00148E  0E13               	movwf	tblptrl
  3666  001490  6EF6               	if	1	;There is more than 1 active tblptr byte
  3667  001492                     	movlw	high((stream@limit_time))
  3668  001492  0E08               	movwf	tblptrh
  3669  001494  6EF7               	endif
  3670  001496                     	if	0	;There are less than 3 active tblptr bytes
  3671  001496                     	movlw	low highword((stream@limit_time))
  3674  001496                     		tblrd	*+
  3675  001496  0009               	movf	tablat,w
  3676  001498  50F5               	subwf	((stream@photoresistance))&0ffh,w
  3677  00149A  5D90               	movf	((stream@photoresistance+1))&0ffh,w
  3678  00149C  5191               	xorlw	80h
  3679  00149E  0A80               	movwf	(??_stream+0+0)&0ffh
  3680  0014A0  6F92               	tblrd	*+
  3681  0014A2  0009               	movf	tablat,w
  3682  0014A4  50F5               	xorlw	80h
  3683  0014A6  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3684  0014A8  5992               	btfsc	status,0
  3685  0014AA  B0D8               	goto	u6921
  3686  0014AC  EF5A  F00A         	goto	u6920
  3687  0014B0  EF5C  F00A         
  3688                           u6921:
  3689  0014B4                     	goto	l4861
  3690  0014B4  EF9A  F00A         u6920:
  3691  0014B8                     	line	156
  3692                           	
  3693                           l4857:; BSR set to: 0
  3694  0014B8                     
  3695                           ;./servomoteur.h: 156:             {lcd_arrosage(servo_mid,time_max);arrosage(servo_mid,
                                 Period,time_max);}
  3696                           	movlw	low((stream@servo_mid))
  3697  0014B8  0E09               	movwf	tblptrl
  3698  0014BA  6EF6               	if	1	;There is more than 1 active tblptr byte
  3699  0014BC                     	movlw	high((stream@servo_mid))
  3700  0014BC  0E08               	movwf	tblptrh
  3701  0014BE  6EF7               	endif
  3702  0014C0                     	if	0	;There are less than 3 active tblptr bytes
  3703  0014C0                     	movlw	low highword((stream@servo_mid))
  3706  0014C0                     	tblrd*+
  3707  0014C0  0009               	
  3708                           	movff	tablat,(lcd_arrosage@angle)
  3709  0014C2  CFF5 F06A          	tblrd*+
  3710  0014C6  0009               	
  3711                           	movff	tablat,(lcd_arrosage@angle+1)
  3712  0014C8  CFF5 F06B          	tblrd*+
  3713  0014CC  0009               	
  3714                           	movff	tablat,(lcd_arrosage@angle+2)
  3715  0014CE  CFF5 F06C          	tblrd*-
  3716  0014D2  000A               	
  3717                           	movff	tablat,(lcd_arrosage@angle+3)
  3718  0014D4  CFF5 F06D          	movlw	low((stream@time_max))
  3719  0014D8  0E19               	movwf	tblptrl
  3720  0014DA  6EF6               	if	1	;There is more than 1 active tblptr byte
  3721  0014DC                     	movlw	high((stream@time_max))
  3722  0014DC  0E08               	movwf	tblptrh
  3723  0014DE  6EF7               	endif
  3724  0014E0                     	if	0	;There are less than 3 active tblptr bytes
  3725  0014E0                     	movlw	low highword((stream@time_max))
  3728  0014E0                     	tblrd*+
  3729  0014E0  0009               	
  3730                           	movff	tablat,(lcd_arrosage@time)
  3731  0014E2  CFF5 F06E          	tblrd*-
  3732  0014E6  000A               	
  3733                           	movff	tablat,(lcd_arrosage@time+1)
  3734  0014E8  CFF5 F06F          
  3735                           	call	_lcd_arrosage	;wreg free
  3736  0014EC  EC7E  F022         	
  3737                           l4859:
  3738  0014F0                     	movlw	low((stream@servo_mid))
  3739  0014F0  0E09               	movwf	tblptrl
  3740  0014F2  6EF6               	if	1	;There is more than 1 active tblptr byte
  3741  0014F4                     	movlw	high((stream@servo_mid))
  3742  0014F4  0E08               	movwf	tblptrh
  3743  0014F6  6EF7               	endif
  3744  0014F8                     	if	0	;There are less than 3 active tblptr bytes
  3745  0014F8                     	movlw	low highword((stream@servo_mid))
  3748  0014F8                     	tblrd*+
  3749  0014F8  0009               	
  3750                           	movff	tablat,(arrosage@duty_cycle)
  3751  0014FA  CFF5 F06E          	tblrd*+
  3752  0014FE  0009               	
  3753                           	movff	tablat,(arrosage@duty_cycle+1)
  3754  001500  CFF5 F06F          	tblrd*+
  3755  001504  0009               	
  3756                           	movff	tablat,(arrosage@duty_cycle+2)
  3757  001506  CFF5 F070          	tblrd*-
  3758  00150A  000A               	
  3759                           	movff	tablat,(arrosage@duty_cycle+3)
  3760  00150C  CFF5 F071          	movff	(stream@Period),(arrosage@Period)
  3761  001510  C093  F072         	movff	(stream@Period+1),(arrosage@Period+1)
  3762  001514  C094  F073         	movlw	low((stream@time_max))
  3763  001518  0E19               	movwf	tblptrl
  3764  00151A  6EF6               	if	1	;There is more than 1 active tblptr byte
  3765  00151C                     	movlw	high((stream@time_max))
  3766  00151C  0E08               	movwf	tblptrh
  3767  00151E  6EF7               	endif
  3768  001520                     	if	0	;There are less than 3 active tblptr bytes
  3769  001520                     	movlw	low highword((stream@time_max))
  3772  001520                     	tblrd*+
  3773  001520  0009               	
  3774                           	movff	tablat,(arrosage@time)
  3775  001522  CFF5 F074          	tblrd*-
  3776  001526  000A               	
  3777                           	movff	tablat,(arrosage@time+1)
  3778  001528  CFF5 F075          
  3779                           	call	_arrosage	;wreg free
  3780  00152C  EC74  F02B         	goto	l4861
  3781  001530  EF9A  F00A         	
  3782                           l178:
  3783  001534                     	line	157
  3784                           	
  3785                           l4861:
  3786  001534                     ;./servomoteur.h: 157:         if(temperature<limit_temperature && air_humidity>limit_hu
                                 midity_air && photoresistance<limit_time)
  3787                           	movlw	low((stream@limit_temperature))
  3788  001534  0E17               	movwf	tblptrl
  3789  001536  6EF6               	if	1	;There is more than 1 active tblptr byte
  3790  001538                     	movlw	high((stream@limit_temperature))
  3791  001538  0E08               	movwf	tblptrh
  3792  00153A  6EF7               	endif
  3793  00153C                     	if	0	;There are less than 3 active tblptr bytes
  3794  00153C                     	movlw	low highword((stream@limit_temperature))
  3797  00153C                     		tblrd	*+
  3798  00153C  0009               	movf	tablat,w
  3799  00153E  50F5               	movlb	0	; () banked
  3800  001540  0100               	subwf	((stream@temperature))&0ffh,w
  3801  001542  5D8C               	movf	((stream@temperature+1))&0ffh,w
  3802  001544  518D               	xorlw	80h
  3803  001546  0A80               	movwf	(??_stream+0+0)&0ffh
  3804  001548  6F92               	tblrd	*+
  3805  00154A  0009               	movf	tablat,w
  3806  00154C  50F5               	xorlw	80h
  3807  00154E  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3808  001550  5992               	btfsc	status,0
  3809  001552  B0D8               	goto	u6931
  3810  001554  EFAE  F00A         	goto	u6930
  3811  001558  EFB0  F00A         
  3812                           u6931:
  3813  00155C                     	goto	l4871
  3814  00155C  EF18  F00B         u6930:
  3815  001560                     	
  3816                           l4863:; BSR set to: 0
  3817  001560                     
  3818                           	movlw	low((stream@limit_humidity_air))
  3819  001560  0E15               	movwf	tblptrl
  3820  001562  6EF6               	if	1	;There is more than 1 active tblptr byte
  3821  001564                     	movlw	high((stream@limit_humidity_air))
  3822  001564  0E08               	movwf	tblptrh
  3823  001566  6EF7               	endif
  3824  001568                     	if	0	;There are less than 3 active tblptr bytes
  3825  001568                     	movlw	low highword((stream@limit_humidity_air))
  3828  001568                     		movf	((stream@air_humidity))&0ffh,w
  3829  001568  518E               	tblrd	*+
  3830  00156A  0009               	subwf	tablat,w
  3831  00156C  5CF5               	tblrd	*+
  3832  00156E  0009               	movf	tablat,w
  3833  001570  50F5               	xorlw	80h
  3834  001572  0A80               	movwf	(??_stream+0+0)&0ffh
  3835  001574  6F92               	movf	((stream@air_humidity+1))&0ffh,w
  3836  001576  518F               	xorlw	80h
  3837  001578  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3838  00157A  5992               	btfsc	status,0
  3839  00157C  B0D8               	goto	u6941
  3840  00157E  EFC3  F00A         	goto	u6940
  3841  001582  EFC5  F00A         
  3842                           u6941:
  3843  001586                     	goto	l4871
  3844  001586  EF18  F00B         u6940:
  3845  00158A                     	
  3846                           l4865:; BSR set to: 0
  3847  00158A                     
  3848                           	movlw	low((stream@limit_time))
  3849  00158A  0E13               	movwf	tblptrl
  3850  00158C  6EF6               	if	1	;There is more than 1 active tblptr byte
  3851  00158E                     	movlw	high((stream@limit_time))
  3852  00158E  0E08               	movwf	tblptrh
  3853  001590  6EF7               	endif
  3854  001592                     	if	0	;There are less than 3 active tblptr bytes
  3855  001592                     	movlw	low highword((stream@limit_time))
  3858  001592                     		tblrd	*+
  3859  001592  0009               	movf	tablat,w
  3860  001594  50F5               	subwf	((stream@photoresistance))&0ffh,w
  3861  001596  5D90               	movf	((stream@photoresistance+1))&0ffh,w
  3862  001598  5191               	xorlw	80h
  3863  00159A  0A80               	movwf	(??_stream+0+0)&0ffh
  3864  00159C  6F92               	tblrd	*+
  3865  00159E  0009               	movf	tablat,w
  3866  0015A0  50F5               	xorlw	80h
  3867  0015A2  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3868  0015A4  5992               	btfsc	status,0
  3869  0015A6  B0D8               	goto	u6951
  3870  0015A8  EFD8  F00A         	goto	u6950
  3871  0015AC  EFDA  F00A         
  3872                           u6951:
  3873  0015B0                     	goto	l4871
  3874  0015B0  EF18  F00B         u6950:
  3875  0015B4                     	line	158
  3876                           	
  3877                           l4867:; BSR set to: 0
  3878  0015B4                     
  3879                           ;./servomoteur.h: 158:             {lcd_arrosage(servo_mid,time_mid);arrosage(servo_mid,
                                 Period,time_mid);}
  3880                           	movlw	low((stream@servo_mid))
  3881  0015B4  0E09               	movwf	tblptrl
  3882  0015B6  6EF6               	if	1	;There is more than 1 active tblptr byte
  3883  0015B8                     	movlw	high((stream@servo_mid))
  3884  0015B8  0E08               	movwf	tblptrh
  3885  0015BA  6EF7               	endif
  3886  0015BC                     	if	0	;There are less than 3 active tblptr bytes
  3887  0015BC                     	movlw	low highword((stream@servo_mid))
  3890  0015BC                     	tblrd*+
  3891  0015BC  0009               	
  3892                           	movff	tablat,(lcd_arrosage@angle)
  3893  0015BE  CFF5 F06A          	tblrd*+
  3894  0015C2  0009               	
  3895                           	movff	tablat,(lcd_arrosage@angle+1)
  3896  0015C4  CFF5 F06B          	tblrd*+
  3897  0015C8  0009               	
  3898                           	movff	tablat,(lcd_arrosage@angle+2)
  3899  0015CA  CFF5 F06C          	tblrd*-
  3900  0015CE  000A               	
  3901                           	movff	tablat,(lcd_arrosage@angle+3)
  3902  0015D0  CFF5 F06D          	movlw	low((stream@time_mid))
  3903  0015D4  0E1B               	movwf	tblptrl
  3904  0015D6  6EF6               	if	1	;There is more than 1 active tblptr byte
  3905  0015D8                     	movlw	high((stream@time_mid))
  3906  0015D8  0E08               	movwf	tblptrh
  3907  0015DA  6EF7               	endif
  3908  0015DC                     	if	0	;There are less than 3 active tblptr bytes
  3909  0015DC                     	movlw	low highword((stream@time_mid))
  3912  0015DC                     	tblrd*+
  3913  0015DC  0009               	
  3914                           	movff	tablat,(lcd_arrosage@time)
  3915  0015DE  CFF5 F06E          	tblrd*-
  3916  0015E2  000A               	
  3917                           	movff	tablat,(lcd_arrosage@time+1)
  3918  0015E4  CFF5 F06F          
  3919                           	call	_lcd_arrosage	;wreg free
  3920  0015E8  EC7E  F022         	
  3921                           l4869:
  3922  0015EC                     	movlw	low((stream@servo_mid))
  3923  0015EC  0E09               	movwf	tblptrl
  3924  0015EE  6EF6               	if	1	;There is more than 1 active tblptr byte
  3925  0015F0                     	movlw	high((stream@servo_mid))
  3926  0015F0  0E08               	movwf	tblptrh
  3927  0015F2  6EF7               	endif
  3928  0015F4                     	if	0	;There are less than 3 active tblptr bytes
  3929  0015F4                     	movlw	low highword((stream@servo_mid))
  3932  0015F4                     	tblrd*+
  3933  0015F4  0009               	
  3934                           	movff	tablat,(arrosage@duty_cycle)
  3935  0015F6  CFF5 F06E          	tblrd*+
  3936  0015FA  0009               	
  3937                           	movff	tablat,(arrosage@duty_cycle+1)
  3938  0015FC  CFF5 F06F          	tblrd*+
  3939  001600  0009               	
  3940                           	movff	tablat,(arrosage@duty_cycle+2)
  3941  001602  CFF5 F070          	tblrd*-
  3942  001606  000A               	
  3943                           	movff	tablat,(arrosage@duty_cycle+3)
  3944  001608  CFF5 F071          	movff	(stream@Period),(arrosage@Period)
  3945  00160C  C093  F072         	movff	(stream@Period+1),(arrosage@Period+1)
  3946  001610  C094  F073         	movlw	low((stream@time_mid))
  3947  001614  0E1B               	movwf	tblptrl
  3948  001616  6EF6               	if	1	;There is more than 1 active tblptr byte
  3949  001618                     	movlw	high((stream@time_mid))
  3950  001618  0E08               	movwf	tblptrh
  3951  00161A  6EF7               	endif
  3952  00161C                     	if	0	;There are less than 3 active tblptr bytes
  3953  00161C                     	movlw	low highword((stream@time_mid))
  3956  00161C                     	tblrd*+
  3957  00161C  0009               	
  3958                           	movff	tablat,(arrosage@time)
  3959  00161E  CFF5 F074          	tblrd*-
  3960  001622  000A               	
  3961                           	movff	tablat,(arrosage@time+1)
  3962  001624  CFF5 F075          
  3963                           	call	_arrosage	;wreg free
  3964  001628  EC74  F02B         	goto	l4871
  3965  00162C  EF18  F00B         	
  3966                           l179:
  3967  001630                     	line	161
  3968                           	
  3969                           l4871:
  3970  001630                     ;./servomoteur.h: 161:         if(temperature>limit_temperature && air_humidity<limit_hu
                                 midity_air && photoresistance>limit_time)
  3971                           	movlw	low((stream@limit_temperature))
  3972  001630  0E17               	movwf	tblptrl
  3973  001632  6EF6               	if	1	;There is more than 1 active tblptr byte
  3974  001634                     	movlw	high((stream@limit_temperature))
  3975  001634  0E08               	movwf	tblptrh
  3976  001636  6EF7               	endif
  3977  001638                     	if	0	;There are less than 3 active tblptr bytes
  3978  001638                     	movlw	low highword((stream@limit_temperature))
  3981  001638                     	movlb	0	; () banked
  3982  001638  0100               		movf	((stream@temperature))&0ffh,w
  3983  00163A  518C               	tblrd	*+
  3984  00163C  0009               	subwf	tablat,w
  3985  00163E  5CF5               	tblrd	*+
  3986  001640  0009               	movf	tablat,w
  3987  001642  50F5               	xorlw	80h
  3988  001644  0A80               	movwf	(??_stream+0+0)&0ffh
  3989  001646  6F92               	movf	((stream@temperature+1))&0ffh,w
  3990  001648  518D               	xorlw	80h
  3991  00164A  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  3992  00164C  5992               	btfsc	status,0
  3993  00164E  B0D8               	goto	u6961
  3994  001650  EF2C  F00B         	goto	u6960
  3995  001654  EF2E  F00B         
  3996                           u6961:
  3997  001658                     	goto	l4881
  3998  001658  EF96  F00B         u6960:
  3999  00165C                     	
  4000                           l4873:; BSR set to: 0
  4001  00165C                     
  4002                           	movlw	low((stream@limit_humidity_air))
  4003  00165C  0E15               	movwf	tblptrl
  4004  00165E  6EF6               	if	1	;There is more than 1 active tblptr byte
  4005  001660                     	movlw	high((stream@limit_humidity_air))
  4006  001660  0E08               	movwf	tblptrh
  4007  001662  6EF7               	endif
  4008  001664                     	if	0	;There are less than 3 active tblptr bytes
  4009  001664                     	movlw	low highword((stream@limit_humidity_air))
  4012  001664                     		tblrd	*+
  4013  001664  0009               	movf	tablat,w
  4014  001666  50F5               	subwf	((stream@air_humidity))&0ffh,w
  4015  001668  5D8E               	movf	((stream@air_humidity+1))&0ffh,w
  4016  00166A  518F               	xorlw	80h
  4017  00166C  0A80               	movwf	(??_stream+0+0)&0ffh
  4018  00166E  6F92               	tblrd	*+
  4019  001670  0009               	movf	tablat,w
  4020  001672  50F5               	xorlw	80h
  4021  001674  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4022  001676  5992               	btfsc	status,0
  4023  001678  B0D8               	goto	u6971
  4024  00167A  EF41  F00B         	goto	u6970
  4025  00167E  EF43  F00B         
  4026                           u6971:
  4027  001682                     	goto	l4881
  4028  001682  EF96  F00B         u6970:
  4029  001686                     	
  4030                           l4875:; BSR set to: 0
  4031  001686                     
  4032                           	movlw	low((stream@limit_time))
  4033  001686  0E13               	movwf	tblptrl
  4034  001688  6EF6               	if	1	;There is more than 1 active tblptr byte
  4035  00168A                     	movlw	high((stream@limit_time))
  4036  00168A  0E08               	movwf	tblptrh
  4037  00168C  6EF7               	endif
  4038  00168E                     	if	0	;There are less than 3 active tblptr bytes
  4039  00168E                     	movlw	low highword((stream@limit_time))
  4042  00168E                     		movf	((stream@photoresistance))&0ffh,w
  4043  00168E  5190               	tblrd	*+
  4044  001690  0009               	subwf	tablat,w
  4045  001692  5CF5               	tblrd	*+
  4046  001694  0009               	movf	tablat,w
  4047  001696  50F5               	xorlw	80h
  4048  001698  0A80               	movwf	(??_stream+0+0)&0ffh
  4049  00169A  6F92               	movf	((stream@photoresistance+1))&0ffh,w
  4050  00169C  5191               	xorlw	80h
  4051  00169E  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4052  0016A0  5992               	btfsc	status,0
  4053  0016A2  B0D8               	goto	u6981
  4054  0016A4  EF56  F00B         	goto	u6980
  4055  0016A8  EF58  F00B         
  4056                           u6981:
  4057  0016AC                     	goto	l4881
  4058  0016AC  EF96  F00B         u6980:
  4059  0016B0                     	line	162
  4060                           	
  4061                           l4877:; BSR set to: 0
  4062  0016B0                     
  4063                           ;./servomoteur.h: 162:             {lcd_arrosage(servo_mid,time_max);arrosage(servo_mid,
                                 Period,time_max);}
  4064                           	movlw	low((stream@servo_mid))
  4065  0016B0  0E09               	movwf	tblptrl
  4066  0016B2  6EF6               	if	1	;There is more than 1 active tblptr byte
  4067  0016B4                     	movlw	high((stream@servo_mid))
  4068  0016B4  0E08               	movwf	tblptrh
  4069  0016B6  6EF7               	endif
  4070  0016B8                     	if	0	;There are less than 3 active tblptr bytes
  4071  0016B8                     	movlw	low highword((stream@servo_mid))
  4074  0016B8                     	tblrd*+
  4075  0016B8  0009               	
  4076                           	movff	tablat,(lcd_arrosage@angle)
  4077  0016BA  CFF5 F06A          	tblrd*+
  4078  0016BE  0009               	
  4079                           	movff	tablat,(lcd_arrosage@angle+1)
  4080  0016C0  CFF5 F06B          	tblrd*+
  4081  0016C4  0009               	
  4082                           	movff	tablat,(lcd_arrosage@angle+2)
  4083  0016C6  CFF5 F06C          	tblrd*-
  4084  0016CA  000A               	
  4085                           	movff	tablat,(lcd_arrosage@angle+3)
  4086  0016CC  CFF5 F06D          	movlw	low((stream@time_max))
  4087  0016D0  0E19               	movwf	tblptrl
  4088  0016D2  6EF6               	if	1	;There is more than 1 active tblptr byte
  4089  0016D4                     	movlw	high((stream@time_max))
  4090  0016D4  0E08               	movwf	tblptrh
  4091  0016D6  6EF7               	endif
  4092  0016D8                     	if	0	;There are less than 3 active tblptr bytes
  4093  0016D8                     	movlw	low highword((stream@time_max))
  4096  0016D8                     	tblrd*+
  4097  0016D8  0009               	
  4098                           	movff	tablat,(lcd_arrosage@time)
  4099  0016DA  CFF5 F06E          	tblrd*-
  4100  0016DE  000A               	
  4101                           	movff	tablat,(lcd_arrosage@time+1)
  4102  0016E0  CFF5 F06F          
  4103                           	call	_lcd_arrosage	;wreg free
  4104  0016E4  EC7E  F022         	
  4105                           l4879:
  4106  0016E8                     	movlw	low((stream@servo_mid))
  4107  0016E8  0E09               	movwf	tblptrl
  4108  0016EA  6EF6               	if	1	;There is more than 1 active tblptr byte
  4109  0016EC                     	movlw	high((stream@servo_mid))
  4110  0016EC  0E08               	movwf	tblptrh
  4111  0016EE  6EF7               	endif
  4112  0016F0                     	if	0	;There are less than 3 active tblptr bytes
  4113  0016F0                     	movlw	low highword((stream@servo_mid))
  4116  0016F0                     	tblrd*+
  4117  0016F0  0009               	
  4118                           	movff	tablat,(arrosage@duty_cycle)
  4119  0016F2  CFF5 F06E          	tblrd*+
  4120  0016F6  0009               	
  4121                           	movff	tablat,(arrosage@duty_cycle+1)
  4122  0016F8  CFF5 F06F          	tblrd*+
  4123  0016FC  0009               	
  4124                           	movff	tablat,(arrosage@duty_cycle+2)
  4125  0016FE  CFF5 F070          	tblrd*-
  4126  001702  000A               	
  4127                           	movff	tablat,(arrosage@duty_cycle+3)
  4128  001704  CFF5 F071          	movff	(stream@Period),(arrosage@Period)
  4129  001708  C093  F072         	movff	(stream@Period+1),(arrosage@Period+1)
  4130  00170C  C094  F073         	movlw	low((stream@time_max))
  4131  001710  0E19               	movwf	tblptrl
  4132  001712  6EF6               	if	1	;There is more than 1 active tblptr byte
  4133  001714                     	movlw	high((stream@time_max))
  4134  001714  0E08               	movwf	tblptrh
  4135  001716  6EF7               	endif
  4136  001718                     	if	0	;There are less than 3 active tblptr bytes
  4137  001718                     	movlw	low highword((stream@time_max))
  4140  001718                     	tblrd*+
  4141  001718  0009               	
  4142                           	movff	tablat,(arrosage@time)
  4143  00171A  CFF5 F074          	tblrd*-
  4144  00171E  000A               	
  4145                           	movff	tablat,(arrosage@time+1)
  4146  001720  CFF5 F075          
  4147                           	call	_arrosage	;wreg free
  4148  001724  EC74  F02B         	goto	l4881
  4149  001728  EF96  F00B         	
  4150                           l180:
  4151  00172C                     	line	163
  4152                           	
  4153                           l4881:
  4154  00172C                     ;./servomoteur.h: 163:         if(temperature>limit_temperature && air_humidity>limit_hu
                                 midity_air && photoresistance>limit_time)
  4155                           	movlw	low((stream@limit_temperature))
  4156  00172C  0E17               	movwf	tblptrl
  4157  00172E  6EF6               	if	1	;There is more than 1 active tblptr byte
  4158  001730                     	movlw	high((stream@limit_temperature))
  4159  001730  0E08               	movwf	tblptrh
  4160  001732  6EF7               	endif
  4161  001734                     	if	0	;There are less than 3 active tblptr bytes
  4162  001734                     	movlw	low highword((stream@limit_temperature))
  4165  001734                     	movlb	0	; () banked
  4166  001734  0100               		movf	((stream@temperature))&0ffh,w
  4167  001736  518C               	tblrd	*+
  4168  001738  0009               	subwf	tablat,w
  4169  00173A  5CF5               	tblrd	*+
  4170  00173C  0009               	movf	tablat,w
  4171  00173E  50F5               	xorlw	80h
  4172  001740  0A80               	movwf	(??_stream+0+0)&0ffh
  4173  001742  6F92               	movf	((stream@temperature+1))&0ffh,w
  4174  001744  518D               	xorlw	80h
  4175  001746  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4176  001748  5992               	btfsc	status,0
  4177  00174A  B0D8               	goto	u6991
  4178  00174C  EFAA  F00B         	goto	u6990
  4179  001750  EFAC  F00B         
  4180                           u6991:
  4181  001754                     	goto	l4891
  4182  001754  EF14  F00C         u6990:
  4183  001758                     	
  4184                           l4883:; BSR set to: 0
  4185  001758                     
  4186                           	movlw	low((stream@limit_humidity_air))
  4187  001758  0E15               	movwf	tblptrl
  4188  00175A  6EF6               	if	1	;There is more than 1 active tblptr byte
  4189  00175C                     	movlw	high((stream@limit_humidity_air))
  4190  00175C  0E08               	movwf	tblptrh
  4191  00175E  6EF7               	endif
  4192  001760                     	if	0	;There are less than 3 active tblptr bytes
  4193  001760                     	movlw	low highword((stream@limit_humidity_air))
  4196  001760                     		movf	((stream@air_humidity))&0ffh,w
  4197  001760  518E               	tblrd	*+
  4198  001762  0009               	subwf	tablat,w
  4199  001764  5CF5               	tblrd	*+
  4200  001766  0009               	movf	tablat,w
  4201  001768  50F5               	xorlw	80h
  4202  00176A  0A80               	movwf	(??_stream+0+0)&0ffh
  4203  00176C  6F92               	movf	((stream@air_humidity+1))&0ffh,w
  4204  00176E  518F               	xorlw	80h
  4205  001770  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4206  001772  5992               	btfsc	status,0
  4207  001774  B0D8               	goto	u7001
  4208  001776  EFBF  F00B         	goto	u7000
  4209  00177A  EFC1  F00B         
  4210                           u7001:
  4211  00177E                     	goto	l4891
  4212  00177E  EF14  F00C         u7000:
  4213  001782                     	
  4214                           l4885:; BSR set to: 0
  4215  001782                     
  4216                           	movlw	low((stream@limit_time))
  4217  001782  0E13               	movwf	tblptrl
  4218  001784  6EF6               	if	1	;There is more than 1 active tblptr byte
  4219  001786                     	movlw	high((stream@limit_time))
  4220  001786  0E08               	movwf	tblptrh
  4221  001788  6EF7               	endif
  4222  00178A                     	if	0	;There are less than 3 active tblptr bytes
  4223  00178A                     	movlw	low highword((stream@limit_time))
  4226  00178A                     		movf	((stream@photoresistance))&0ffh,w
  4227  00178A  5190               	tblrd	*+
  4228  00178C  0009               	subwf	tablat,w
  4229  00178E  5CF5               	tblrd	*+
  4230  001790  0009               	movf	tablat,w
  4231  001792  50F5               	xorlw	80h
  4232  001794  0A80               	movwf	(??_stream+0+0)&0ffh
  4233  001796  6F92               	movf	((stream@photoresistance+1))&0ffh,w
  4234  001798  5191               	xorlw	80h
  4235  00179A  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4236  00179C  5992               	btfsc	status,0
  4237  00179E  B0D8               	goto	u7011
  4238  0017A0  EFD4  F00B         	goto	u7010
  4239  0017A4  EFD6  F00B         
  4240                           u7011:
  4241  0017A8                     	goto	l4891
  4242  0017A8  EF14  F00C         u7010:
  4243  0017AC                     	line	164
  4244                           	
  4245                           l4887:; BSR set to: 0
  4246  0017AC                     
  4247                           ;./servomoteur.h: 164:             {lcd_arrosage(servo_mid,time_max);arrosage(servo_mid,
                                 Period,time_max);}
  4248                           	movlw	low((stream@servo_mid))
  4249  0017AC  0E09               	movwf	tblptrl
  4250  0017AE  6EF6               	if	1	;There is more than 1 active tblptr byte
  4251  0017B0                     	movlw	high((stream@servo_mid))
  4252  0017B0  0E08               	movwf	tblptrh
  4253  0017B2  6EF7               	endif
  4254  0017B4                     	if	0	;There are less than 3 active tblptr bytes
  4255  0017B4                     	movlw	low highword((stream@servo_mid))
  4258  0017B4                     	tblrd*+
  4259  0017B4  0009               	
  4260                           	movff	tablat,(lcd_arrosage@angle)
  4261  0017B6  CFF5 F06A          	tblrd*+
  4262  0017BA  0009               	
  4263                           	movff	tablat,(lcd_arrosage@angle+1)
  4264  0017BC  CFF5 F06B          	tblrd*+
  4265  0017C0  0009               	
  4266                           	movff	tablat,(lcd_arrosage@angle+2)
  4267  0017C2  CFF5 F06C          	tblrd*-
  4268  0017C6  000A               	
  4269                           	movff	tablat,(lcd_arrosage@angle+3)
  4270  0017C8  CFF5 F06D          	movlw	low((stream@time_max))
  4271  0017CC  0E19               	movwf	tblptrl
  4272  0017CE  6EF6               	if	1	;There is more than 1 active tblptr byte
  4273  0017D0                     	movlw	high((stream@time_max))
  4274  0017D0  0E08               	movwf	tblptrh
  4275  0017D2  6EF7               	endif
  4276  0017D4                     	if	0	;There are less than 3 active tblptr bytes
  4277  0017D4                     	movlw	low highword((stream@time_max))
  4280  0017D4                     	tblrd*+
  4281  0017D4  0009               	
  4282                           	movff	tablat,(lcd_arrosage@time)
  4283  0017D6  CFF5 F06E          	tblrd*-
  4284  0017DA  000A               	
  4285                           	movff	tablat,(lcd_arrosage@time+1)
  4286  0017DC  CFF5 F06F          
  4287                           	call	_lcd_arrosage	;wreg free
  4288  0017E0  EC7E  F022         	
  4289                           l4889:
  4290  0017E4                     	movlw	low((stream@servo_mid))
  4291  0017E4  0E09               	movwf	tblptrl
  4292  0017E6  6EF6               	if	1	;There is more than 1 active tblptr byte
  4293  0017E8                     	movlw	high((stream@servo_mid))
  4294  0017E8  0E08               	movwf	tblptrh
  4295  0017EA  6EF7               	endif
  4296  0017EC                     	if	0	;There are less than 3 active tblptr bytes
  4297  0017EC                     	movlw	low highword((stream@servo_mid))
  4300  0017EC                     	tblrd*+
  4301  0017EC  0009               	
  4302                           	movff	tablat,(arrosage@duty_cycle)
  4303  0017EE  CFF5 F06E          	tblrd*+
  4304  0017F2  0009               	
  4305                           	movff	tablat,(arrosage@duty_cycle+1)
  4306  0017F4  CFF5 F06F          	tblrd*+
  4307  0017F8  0009               	
  4308                           	movff	tablat,(arrosage@duty_cycle+2)
  4309  0017FA  CFF5 F070          	tblrd*-
  4310  0017FE  000A               	
  4311                           	movff	tablat,(arrosage@duty_cycle+3)
  4312  001800  CFF5 F071          	movff	(stream@Period),(arrosage@Period)
  4313  001804  C093  F072         	movff	(stream@Period+1),(arrosage@Period+1)
  4314  001808  C094  F073         	movlw	low((stream@time_max))
  4315  00180C  0E19               	movwf	tblptrl
  4316  00180E  6EF6               	if	1	;There is more than 1 active tblptr byte
  4317  001810                     	movlw	high((stream@time_max))
  4318  001810  0E08               	movwf	tblptrh
  4319  001812  6EF7               	endif
  4320  001814                     	if	0	;There are less than 3 active tblptr bytes
  4321  001814                     	movlw	low highword((stream@time_max))
  4324  001814                     	tblrd*+
  4325  001814  0009               	
  4326                           	movff	tablat,(arrosage@time)
  4327  001816  CFF5 F074          	tblrd*-
  4328  00181A  000A               	
  4329                           	movff	tablat,(arrosage@time+1)
  4330  00181C  CFF5 F075          
  4331                           	call	_arrosage	;wreg free
  4332  001820  EC74  F02B         	goto	l4891
  4333  001824  EF14  F00C         	
  4334                           l181:
  4335  001828                     	line	165
  4336                           	
  4337                           l4891:
  4338  001828                     ;./servomoteur.h: 165:         if(temperature<limit_temperature && air_humidity<limit_hu
                                 midity_air && photoresistance>limit_time)
  4339                           	movlw	low((stream@limit_temperature))
  4340  001828  0E17               	movwf	tblptrl
  4341  00182A  6EF6               	if	1	;There is more than 1 active tblptr byte
  4342  00182C                     	movlw	high((stream@limit_temperature))
  4343  00182C  0E08               	movwf	tblptrh
  4344  00182E  6EF7               	endif
  4345  001830                     	if	0	;There are less than 3 active tblptr bytes
  4346  001830                     	movlw	low highword((stream@limit_temperature))
  4349  001830                     		tblrd	*+
  4350  001830  0009               	movf	tablat,w
  4351  001832  50F5               	movlb	0	; () banked
  4352  001834  0100               	subwf	((stream@temperature))&0ffh,w
  4353  001836  5D8C               	movf	((stream@temperature+1))&0ffh,w
  4354  001838  518D               	xorlw	80h
  4355  00183A  0A80               	movwf	(??_stream+0+0)&0ffh
  4356  00183C  6F92               	tblrd	*+
  4357  00183E  0009               	movf	tablat,w
  4358  001840  50F5               	xorlw	80h
  4359  001842  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4360  001844  5992               	btfsc	status,0
  4361  001846  B0D8               	goto	u7021
  4362  001848  EF28  F00C         	goto	u7020
  4363  00184C  EF2A  F00C         
  4364                           u7021:
  4365  001850                     	goto	l4901
  4366  001850  EF92  F00C         u7020:
  4367  001854                     	
  4368                           l4893:; BSR set to: 0
  4369  001854                     
  4370                           	movlw	low((stream@limit_humidity_air))
  4371  001854  0E15               	movwf	tblptrl
  4372  001856  6EF6               	if	1	;There is more than 1 active tblptr byte
  4373  001858                     	movlw	high((stream@limit_humidity_air))
  4374  001858  0E08               	movwf	tblptrh
  4375  00185A  6EF7               	endif
  4376  00185C                     	if	0	;There are less than 3 active tblptr bytes
  4377  00185C                     	movlw	low highword((stream@limit_humidity_air))
  4380  00185C                     		tblrd	*+
  4381  00185C  0009               	movf	tablat,w
  4382  00185E  50F5               	subwf	((stream@air_humidity))&0ffh,w
  4383  001860  5D8E               	movf	((stream@air_humidity+1))&0ffh,w
  4384  001862  518F               	xorlw	80h
  4385  001864  0A80               	movwf	(??_stream+0+0)&0ffh
  4386  001866  6F92               	tblrd	*+
  4387  001868  0009               	movf	tablat,w
  4388  00186A  50F5               	xorlw	80h
  4389  00186C  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4390  00186E  5992               	btfsc	status,0
  4391  001870  B0D8               	goto	u7031
  4392  001872  EF3D  F00C         	goto	u7030
  4393  001876  EF3F  F00C         
  4394                           u7031:
  4395  00187A                     	goto	l4901
  4396  00187A  EF92  F00C         u7030:
  4397  00187E                     	
  4398                           l4895:; BSR set to: 0
  4399  00187E                     
  4400                           	movlw	low((stream@limit_time))
  4401  00187E  0E13               	movwf	tblptrl
  4402  001880  6EF6               	if	1	;There is more than 1 active tblptr byte
  4403  001882                     	movlw	high((stream@limit_time))
  4404  001882  0E08               	movwf	tblptrh
  4405  001884  6EF7               	endif
  4406  001886                     	if	0	;There are less than 3 active tblptr bytes
  4407  001886                     	movlw	low highword((stream@limit_time))
  4410  001886                     		movf	((stream@photoresistance))&0ffh,w
  4411  001886  5190               	tblrd	*+
  4412  001888  0009               	subwf	tablat,w
  4413  00188A  5CF5               	tblrd	*+
  4414  00188C  0009               	movf	tablat,w
  4415  00188E  50F5               	xorlw	80h
  4416  001890  0A80               	movwf	(??_stream+0+0)&0ffh
  4417  001892  6F92               	movf	((stream@photoresistance+1))&0ffh,w
  4418  001894  5191               	xorlw	80h
  4419  001896  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4420  001898  5992               	btfsc	status,0
  4421  00189A  B0D8               	goto	u7041
  4422  00189C  EF52  F00C         	goto	u7040
  4423  0018A0  EF54  F00C         
  4424                           u7041:
  4425  0018A4                     	goto	l4901
  4426  0018A4  EF92  F00C         u7040:
  4427  0018A8                     	line	166
  4428                           	
  4429                           l4897:; BSR set to: 0
  4430  0018A8                     
  4431                           ;./servomoteur.h: 166:             {lcd_arrosage(servo_mid,time_mid);arrosage(servo_mid,
                                 Period,time_mid);}
  4432                           	movlw	low((stream@servo_mid))
  4433  0018A8  0E09               	movwf	tblptrl
  4434  0018AA  6EF6               	if	1	;There is more than 1 active tblptr byte
  4435  0018AC                     	movlw	high((stream@servo_mid))
  4436  0018AC  0E08               	movwf	tblptrh
  4437  0018AE  6EF7               	endif
  4438  0018B0                     	if	0	;There are less than 3 active tblptr bytes
  4439  0018B0                     	movlw	low highword((stream@servo_mid))
  4442  0018B0                     	tblrd*+
  4443  0018B0  0009               	
  4444                           	movff	tablat,(lcd_arrosage@angle)
  4445  0018B2  CFF5 F06A          	tblrd*+
  4446  0018B6  0009               	
  4447                           	movff	tablat,(lcd_arrosage@angle+1)
  4448  0018B8  CFF5 F06B          	tblrd*+
  4449  0018BC  0009               	
  4450                           	movff	tablat,(lcd_arrosage@angle+2)
  4451  0018BE  CFF5 F06C          	tblrd*-
  4452  0018C2  000A               	
  4453                           	movff	tablat,(lcd_arrosage@angle+3)
  4454  0018C4  CFF5 F06D          	movlw	low((stream@time_mid))
  4455  0018C8  0E1B               	movwf	tblptrl
  4456  0018CA  6EF6               	if	1	;There is more than 1 active tblptr byte
  4457  0018CC                     	movlw	high((stream@time_mid))
  4458  0018CC  0E08               	movwf	tblptrh
  4459  0018CE  6EF7               	endif
  4460  0018D0                     	if	0	;There are less than 3 active tblptr bytes
  4461  0018D0                     	movlw	low highword((stream@time_mid))
  4464  0018D0                     	tblrd*+
  4465  0018D0  0009               	
  4466                           	movff	tablat,(lcd_arrosage@time)
  4467  0018D2  CFF5 F06E          	tblrd*-
  4468  0018D6  000A               	
  4469                           	movff	tablat,(lcd_arrosage@time+1)
  4470  0018D8  CFF5 F06F          
  4471                           	call	_lcd_arrosage	;wreg free
  4472  0018DC  EC7E  F022         	
  4473                           l4899:
  4474  0018E0                     	movlw	low((stream@servo_mid))
  4475  0018E0  0E09               	movwf	tblptrl
  4476  0018E2  6EF6               	if	1	;There is more than 1 active tblptr byte
  4477  0018E4                     	movlw	high((stream@servo_mid))
  4478  0018E4  0E08               	movwf	tblptrh
  4479  0018E6  6EF7               	endif
  4480  0018E8                     	if	0	;There are less than 3 active tblptr bytes
  4481  0018E8                     	movlw	low highword((stream@servo_mid))
  4484  0018E8                     	tblrd*+
  4485  0018E8  0009               	
  4486                           	movff	tablat,(arrosage@duty_cycle)
  4487  0018EA  CFF5 F06E          	tblrd*+
  4488  0018EE  0009               	
  4489                           	movff	tablat,(arrosage@duty_cycle+1)
  4490  0018F0  CFF5 F06F          	tblrd*+
  4491  0018F4  0009               	
  4492                           	movff	tablat,(arrosage@duty_cycle+2)
  4493  0018F6  CFF5 F070          	tblrd*-
  4494  0018FA  000A               	
  4495                           	movff	tablat,(arrosage@duty_cycle+3)
  4496  0018FC  CFF5 F071          	movff	(stream@Period),(arrosage@Period)
  4497  001900  C093  F072         	movff	(stream@Period+1),(arrosage@Period+1)
  4498  001904  C094  F073         	movlw	low((stream@time_mid))
  4499  001908  0E1B               	movwf	tblptrl
  4500  00190A  6EF6               	if	1	;There is more than 1 active tblptr byte
  4501  00190C                     	movlw	high((stream@time_mid))
  4502  00190C  0E08               	movwf	tblptrh
  4503  00190E  6EF7               	endif
  4504  001910                     	if	0	;There are less than 3 active tblptr bytes
  4505  001910                     	movlw	low highword((stream@time_mid))
  4508  001910                     	tblrd*+
  4509  001910  0009               	
  4510                           	movff	tablat,(arrosage@time)
  4511  001912  CFF5 F074          	tblrd*-
  4512  001916  000A               	
  4513                           	movff	tablat,(arrosage@time+1)
  4514  001918  CFF5 F075          
  4515                           	call	_arrosage	;wreg free
  4516  00191C  EC74  F02B         	goto	l4901
  4517  001920  EF92  F00C         	
  4518                           l182:
  4519  001924                     	line	167
  4520                           	
  4521                           l4901:
  4522  001924                     ;./servomoteur.h: 167:         if(temperature<limit_temperature && air_humidity>limit_hu
                                 midity_air && photoresistance>limit_time)
  4523                           	movlw	low((stream@limit_temperature))
  4524  001924  0E17               	movwf	tblptrl
  4525  001926  6EF6               	if	1	;There is more than 1 active tblptr byte
  4526  001928                     	movlw	high((stream@limit_temperature))
  4527  001928  0E08               	movwf	tblptrh
  4528  00192A  6EF7               	endif
  4529  00192C                     	if	0	;There are less than 3 active tblptr bytes
  4530  00192C                     	movlw	low highword((stream@limit_temperature))
  4533  00192C                     		tblrd	*+
  4534  00192C  0009               	movf	tablat,w
  4535  00192E  50F5               	movlb	0	; () banked
  4536  001930  0100               	subwf	((stream@temperature))&0ffh,w
  4537  001932  5D8C               	movf	((stream@temperature+1))&0ffh,w
  4538  001934  518D               	xorlw	80h
  4539  001936  0A80               	movwf	(??_stream+0+0)&0ffh
  4540  001938  6F92               	tblrd	*+
  4541  00193A  0009               	movf	tablat,w
  4542  00193C  50F5               	xorlw	80h
  4543  00193E  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4544  001940  5992               	btfsc	status,0
  4545  001942  B0D8               	goto	u7051
  4546  001944  EFA6  F00C         	goto	u7050
  4547  001948  EFA8  F00C         
  4548                           u7051:
  4549  00194C                     	goto	l4911
  4550  00194C  EF10  F00D         u7050:
  4551  001950                     	
  4552                           l4903:; BSR set to: 0
  4553  001950                     
  4554                           	movlw	low((stream@limit_humidity_air))
  4555  001950  0E15               	movwf	tblptrl
  4556  001952  6EF6               	if	1	;There is more than 1 active tblptr byte
  4557  001954                     	movlw	high((stream@limit_humidity_air))
  4558  001954  0E08               	movwf	tblptrh
  4559  001956  6EF7               	endif
  4560  001958                     	if	0	;There are less than 3 active tblptr bytes
  4561  001958                     	movlw	low highword((stream@limit_humidity_air))
  4564  001958                     		movf	((stream@air_humidity))&0ffh,w
  4565  001958  518E               	tblrd	*+
  4566  00195A  0009               	subwf	tablat,w
  4567  00195C  5CF5               	tblrd	*+
  4568  00195E  0009               	movf	tablat,w
  4569  001960  50F5               	xorlw	80h
  4570  001962  0A80               	movwf	(??_stream+0+0)&0ffh
  4571  001964  6F92               	movf	((stream@air_humidity+1))&0ffh,w
  4572  001966  518F               	xorlw	80h
  4573  001968  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4574  00196A  5992               	btfsc	status,0
  4575  00196C  B0D8               	goto	u7061
  4576  00196E  EFBB  F00C         	goto	u7060
  4577  001972  EFBD  F00C         
  4578                           u7061:
  4579  001976                     	goto	l4911
  4580  001976  EF10  F00D         u7060:
  4581  00197A                     	
  4582                           l4905:; BSR set to: 0
  4583  00197A                     
  4584                           	movlw	low((stream@limit_time))
  4585  00197A  0E13               	movwf	tblptrl
  4586  00197C  6EF6               	if	1	;There is more than 1 active tblptr byte
  4587  00197E                     	movlw	high((stream@limit_time))
  4588  00197E  0E08               	movwf	tblptrh
  4589  001980  6EF7               	endif
  4590  001982                     	if	0	;There are less than 3 active tblptr bytes
  4591  001982                     	movlw	low highword((stream@limit_time))
  4594  001982                     		movf	((stream@photoresistance))&0ffh,w
  4595  001982  5190               	tblrd	*+
  4596  001984  0009               	subwf	tablat,w
  4597  001986  5CF5               	tblrd	*+
  4598  001988  0009               	movf	tablat,w
  4599  00198A  50F5               	xorlw	80h
  4600  00198C  0A80               	movwf	(??_stream+0+0)&0ffh
  4601  00198E  6F92               	movf	((stream@photoresistance+1))&0ffh,w
  4602  001990  5191               	xorlw	80h
  4603  001992  0A80               	subwfb	(??_stream+0+0)&0ffh,w
  4604  001994  5992               	btfsc	status,0
  4605  001996  B0D8               	goto	u7071
  4606  001998  EFD0  F00C         	goto	u7070
  4607  00199C  EFD2  F00C         
  4608                           u7071:
  4609  0019A0                     	goto	l4911
  4610  0019A0  EF10  F00D         u7070:
  4611  0019A4                     	line	168
  4612                           	
  4613                           l4907:; BSR set to: 0
  4614  0019A4                     
  4615                           ;./servomoteur.h: 168:             {lcd_arrosage(servo_mid,time_mid);arrosage(servo_mid,
                                 Period,time_mid);}
  4616                           	movlw	low((stream@servo_mid))
  4617  0019A4  0E09               	movwf	tblptrl
  4618  0019A6  6EF6               	if	1	;There is more than 1 active tblptr byte
  4619  0019A8                     	movlw	high((stream@servo_mid))
  4620  0019A8  0E08               	movwf	tblptrh
  4621  0019AA  6EF7               	endif
  4622  0019AC                     	if	0	;There are less than 3 active tblptr bytes
  4623  0019AC                     	movlw	low highword((stream@servo_mid))
  4626  0019AC                     	tblrd*+
  4627  0019AC  0009               	
  4628                           	movff	tablat,(lcd_arrosage@angle)
  4629  0019AE  CFF5 F06A          	tblrd*+
  4630  0019B2  0009               	
  4631                           	movff	tablat,(lcd_arrosage@angle+1)
  4632  0019B4  CFF5 F06B          	tblrd*+
  4633  0019B8  0009               	
  4634                           	movff	tablat,(lcd_arrosage@angle+2)
  4635  0019BA  CFF5 F06C          	tblrd*-
  4636  0019BE  000A               	
  4637                           	movff	tablat,(lcd_arrosage@angle+3)
  4638  0019C0  CFF5 F06D          	movlw	low((stream@time_mid))
  4639  0019C4  0E1B               	movwf	tblptrl
  4640  0019C6  6EF6               	if	1	;There is more than 1 active tblptr byte
  4641  0019C8                     	movlw	high((stream@time_mid))
  4642  0019C8  0E08               	movwf	tblptrh
  4643  0019CA  6EF7               	endif
  4644  0019CC                     	if	0	;There are less than 3 active tblptr bytes
  4645  0019CC                     	movlw	low highword((stream@time_mid))
  4648  0019CC                     	tblrd*+
  4649  0019CC  0009               	
  4650                           	movff	tablat,(lcd_arrosage@time)
  4651  0019CE  CFF5 F06E          	tblrd*-
  4652  0019D2  000A               	
  4653                           	movff	tablat,(lcd_arrosage@time+1)
  4654  0019D4  CFF5 F06F          
  4655                           	call	_lcd_arrosage	;wreg free
  4656  0019D8  EC7E  F022         	
  4657                           l4909:
  4658  0019DC                     	movlw	low((stream@servo_mid))
  4659  0019DC  0E09               	movwf	tblptrl
  4660  0019DE  6EF6               	if	1	;There is more than 1 active tblptr byte
  4661  0019E0                     	movlw	high((stream@servo_mid))
  4662  0019E0  0E08               	movwf	tblptrh
  4663  0019E2  6EF7               	endif
  4664  0019E4                     	if	0	;There are less than 3 active tblptr bytes
  4665  0019E4                     	movlw	low highword((stream@servo_mid))
  4668  0019E4                     	tblrd*+
  4669  0019E4  0009               	
  4670                           	movff	tablat,(arrosage@duty_cycle)
  4671  0019E6  CFF5 F06E          	tblrd*+
  4672  0019EA  0009               	
  4673                           	movff	tablat,(arrosage@duty_cycle+1)
  4674  0019EC  CFF5 F06F          	tblrd*+
  4675  0019F0  0009               	
  4676                           	movff	tablat,(arrosage@duty_cycle+2)
  4677  0019F2  CFF5 F070          	tblrd*-
  4678  0019F6  000A               	
  4679                           	movff	tablat,(arrosage@duty_cycle+3)
  4680  0019F8  CFF5 F071          	movff	(stream@Period),(arrosage@Period)
  4681  0019FC  C093  F072         	movff	(stream@Period+1),(arrosage@Period+1)
  4682  001A00  C094  F073         	movlw	low((stream@time_mid))
  4683  001A04  0E1B               	movwf	tblptrl
  4684  001A06  6EF6               	if	1	;There is more than 1 active tblptr byte
  4685  001A08                     	movlw	high((stream@time_mid))
  4686  001A08  0E08               	movwf	tblptrh
  4687  001A0A  6EF7               	endif
  4688  001A0C                     	if	0	;There are less than 3 active tblptr bytes
  4689  001A0C                     	movlw	low highword((stream@time_mid))
  4692  001A0C                     	tblrd*+
  4693  001A0C  0009               	
  4694                           	movff	tablat,(arrosage@time)
  4695  001A0E  CFF5 F074          	tblrd*-
  4696  001A12  000A               	
  4697                           	movff	tablat,(arrosage@time+1)
  4698  001A14  CFF5 F075          
  4699                           	call	_arrosage	;wreg free
  4700  001A18  EC74  F02B         	goto	l4911
  4701  001A1C  EF10  F00D         	
  4702                           l183:
  4703  001A20                     	line	172
  4704                           	
  4705                           l4911:
  4706  001A20                     ;./servomoteur.h: 172:         SetDutyCycleTo(servo_init,Period);
  4707                           	movlw	low((stream@servo_init))
  4708  001A20  0E0D               	movwf	tblptrl
  4709  001A22  6EF6               	if	1	;There is more than 1 active tblptr byte
  4710  001A24                     	movlw	high((stream@servo_init))
  4711  001A24  0E08               	movwf	tblptrh
  4712  001A26  6EF7               	endif
  4713  001A28                     	if	0	;There are less than 3 active tblptr bytes
  4714  001A28                     	movlw	low highword((stream@servo_init))
  4717  001A28                     	tblrd*+
  4718  001A28  0009               	
  4719                           	movff	tablat,(SetDutyCycleTo@Duty_cycle)
  4720  001A2A  CFF5 F060          	tblrd*+
  4721  001A2E  0009               	
  4722                           	movff	tablat,(SetDutyCycleTo@Duty_cycle+1)
  4723  001A30  CFF5 F061          	tblrd*+
  4724  001A34  0009               	
  4725                           	movff	tablat,(SetDutyCycleTo@Duty_cycle+2)
  4726  001A36  CFF5 F062          	tblrd*-
  4727  001A3A  000A               	
  4728                           	movff	tablat,(SetDutyCycleTo@Duty_cycle+3)
  4729  001A3C  CFF5 F063          	movff	(stream@Period),(SetDutyCycleTo@Period)
  4730  001A40  C093  F064         	movff	(stream@Period+1),(SetDutyCycleTo@Period+1)
  4731  001A44  C094  F065         	call	_SetDutyCycleTo	;wreg free
  4732  001A48  EC1A  F023         	line	173
  4733                           	
  4734                           l4913:
  4735  001A4C                     ;./servomoteur.h: 173:         delay(5000);
  4736                           	movlw	high(01388h)
  4737  001A4C  0E13               	movwf	((c:delay@val+1)),c
  4738  001A4E  6E02               	movlw	low(01388h)
  4739  001A50  0E88               	movwf	((c:delay@val)),c
  4740  001A52  6E01               	call	_delay	;wreg free
  4741  001A54  ECCD  F027         	line	174
  4742                           	
  4743                           l184:
  4744  001A58                     	return	;funcret
  4745  001A58  0012               	opt stack 0
  4746                           GLOBAL	__end_of_stream
  4747                           	__end_of_stream:
  4748  001A5A                     	signat	_stream,12409
  4749                           	global	_setPeriodTo
  4750                           
  4751 ;; *************** function _setPeriodTo *****************
  4752 ;; Defined at:
  4753 ;;		line 42 in file "./servomoteur.h"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  FPWM            4   18[BANK0 ] unsigned long 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  _resolution     4   40[BANK0 ] unsigned long 
  4758 ;;  period          4   36[BANK0 ] float 
  4759 ;;  FOSC            4   30[BANK0 ] unsigned long 
  4760 ;;  clockSelectB    2   34[BANK0 ] int 
  4761 ;;  TimerPrescal    2   28[BANK0 ] int 
  4762 ;;  TimerPrescal    2   26[BANK0 ] int 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  2   18[BANK0 ] int 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4772 ;;      Params:         0       4       0       0       0       0       0       0       0
  4773 ;;      Locals:         0      22       0       0       0       0       0       0       0
  4774 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4775 ;;      Totals:         1      26       0       0       0       0       0       0       0
  4776 ;;Total ram usage:       27 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    2
  4779 ;; This function calls:
  4780 ;;		___fladd
  4781 ;;		___fldiv
  4782 ;;		___flmul
  4783 ;;		___fltol
  4784 ;;		___xxtofl
  4785 ;;		_roundf
  4786 ;; This function is called by:
  4787 ;;		_stream
  4788 ;;		_main
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           psect	text2,class=CODE,space=0,reloc=2,group=0
  4792                           	line	42
  4793                           global __ptext2
  4794                           __ptext2:
  4795  0030F2                     psect	text2
  4796                           	file	"./servomoteur.h"
  4797                           	line	42
  4798                           	global	__size_of_setPeriodTo
  4799                           	__size_of_setPeriodTo	equ	__end_of_setPeriodTo-_setPeriodTo
  4800  0000                     	
  4801                           _setPeriodTo:
  4802  0030F2                     ;incstack = 0
  4803                           	opt	stack 27
  4804                           	line	47
  4805                           	
  4806                           l4321:
  4807  0030F2                     ;./servomoteur.h: 42: int setPeriodTo(unsigned long FPWM);./servomoteur.h: 43: {;./servo
                                 moteur.h: 44:     int clockSelectBits, TimerPrescaleBits;;./servomoteur.h: 45:     int T
                                 imerPrescaleValue;;./servomoteur.h: 46:     float period;;./servomoteur.h: 47:     unsig
                                 ned long FOSC, _resolution = 488;
  4808                           	movlw	low(01E8h)
  4809  0030F2  0EE8               	movlb	0	; () banked
  4810  0030F4  0100               	movwf	((setPeriodTo@_resolution))&0ffh
  4811  0030F6  6F88               	movlw	high(01E8h)
  4812  0030F8  0E01               	movwf	((setPeriodTo@_resolution+1))&0ffh
  4813  0030FA  6F89               	movlw	low highword(01E8h)
  4814  0030FC  0E00               	movwf	((setPeriodTo@_resolution+2))&0ffh
  4815  0030FE  6F8A               	movlw	high highword(01E8h)
  4816  003100  0E00               	movwf	((setPeriodTo@_resolution+3))&0ffh
  4817  003102  6F8B               	line	49
  4818                           	
  4819                           l4323:; BSR set to: 0
  4820  003104                     
  4821                           ;./servomoteur.h: 49:     if (FPWM < 8000) {TimerPrescaleBits = 2; TimerPrescaleValue = 
                                 16;}
  4822                           		movf	((setPeriodTo@FPWM+3))&0ffh,w
  4823  003104  5175               	iorwf	((setPeriodTo@FPWM+2))&0ffh,w
  4824  003106  1174               	bnz	u5511
  4825  003108  E109               	movlw	64
  4826  00310A  0E40               	subwf	 ((setPeriodTo@FPWM))&0ffh,w
  4827  00310C  5D72               	movlw	31
  4828  00310E  0E1F               	subwfb	((setPeriodTo@FPWM+1))&0ffh,w
  4829  003110  5973               	btfsc	status,0
  4830  003112  B0D8               	goto	u5511
  4831  003114  EF8E  F018         	goto	u5510
  4832  003118  EF90  F018         
  4833                           u5511:
  4834  00311C                     	goto	l4327
  4835  00311C  EF9A  F018         u5510:
  4836  003120                     	
  4837                           l4325:; BSR set to: 0
  4838  003120                     
  4839                           	movlw	high(02h)
  4840  003120  0E00               	movwf	((setPeriodTo@TimerPrescaleBits+1))&0ffh
  4841  003122  6F7B               	movlw	low(02h)
  4842  003124  0E02               	movwf	((setPeriodTo@TimerPrescaleBits))&0ffh
  4843  003126  6F7A               	movlw	high(010h)
  4844  003128  0E00               	movwf	((setPeriodTo@TimerPrescaleValue+1))&0ffh
  4845  00312A  6F7D               	movlw	low(010h)
  4846  00312C  0E10               	movwf	((setPeriodTo@TimerPrescaleValue))&0ffh
  4847  00312E  6F7C               	goto	l4329
  4848  003130  EFA4  F018         	line	50
  4849                           ;./servomoteur.h: 50:     else {TimerPrescaleBits = 0; TimerPrescaleValue = 1;}
  4850                           	
  4851                           l119:; BSR set to: 0
  4852  003134                     
  4853                           	
  4854                           l4327:; BSR set to: 0
  4855  003134                     
  4856                           	movlw	high(0)
  4857  003134  0E00               	movwf	((setPeriodTo@TimerPrescaleBits+1))&0ffh
  4858  003136  6F7B               	movlw	low(0)
  4859  003138  0E00               	movwf	((setPeriodTo@TimerPrescaleBits))&0ffh
  4860  00313A  6F7A               	movlw	high(01h)
  4861  00313C  0E00               	movwf	((setPeriodTo@TimerPrescaleValue+1))&0ffh
  4862  00313E  6F7D               	movlw	low(01h)
  4863  003140  0E01               	movwf	((setPeriodTo@TimerPrescaleValue))&0ffh
  4864  003142  6F7C               	goto	l4329
  4865  003144  EFA4  F018         	
  4866                           l120:; BSR set to: 0
  4867  003148                     
  4868                           	line	52
  4869                           	
  4870                           l4329:; BSR set to: 0
  4871  003148                     
  4872                           ;./servomoteur.h: 52:     if (FPWM > _resolution) {clockSelectBits = 7; FOSC = 8000000;}
                                 
  4873                           		movf	((setPeriodTo@FPWM))&0ffh,w
  4874  003148  5172               	subwf	((setPeriodTo@_resolution))&0ffh,w
  4875  00314A  5D88               	movf	((setPeriodTo@FPWM+1))&0ffh,w
  4876  00314C  5173               	subwfb	((setPeriodTo@_resolution+1))&0ffh,w
  4877  00314E  5989               	movf	((setPeriodTo@FPWM+2))&0ffh,w
  4878  003150  5174               	subwfb	((setPeriodTo@_resolution+2))&0ffh,w
  4879  003152  598A               	movf	((setPeriodTo@FPWM+3))&0ffh,w
  4880  003154  5175               	subwfb	((setPeriodTo@_resolution+3))&0ffh,w
  4881  003156  598B               	btfsc	status,0
  4882  003158  B0D8               	goto	u5521
  4883  00315A  EFB1  F018         	goto	u5520
  4884  00315E  EFB3  F018         
  4885                           u5521:
  4886  003162                     	goto	l4333
  4887  003162  EFC1  F018         u5520:
  4888  003166                     	
  4889                           l4331:; BSR set to: 0
  4890  003166                     
  4891                           	movlw	high(07h)
  4892  003166  0E00               	movwf	((setPeriodTo@clockSelectBits+1))&0ffh
  4893  003168  6F83               	movlw	low(07h)
  4894  00316A  0E07               	movwf	((setPeriodTo@clockSelectBits))&0ffh
  4895  00316C  6F82               	movlw	low(07A1200h)
  4896  00316E  0E00               	movwf	((setPeriodTo@FOSC))&0ffh
  4897  003170  6F7E               	movlw	high(07A1200h)
  4898  003172  0E12               	movwf	((setPeriodTo@FOSC+1))&0ffh
  4899  003174  6F7F               	movlw	low highword(07A1200h)
  4900  003176  0E7A               	movwf	((setPeriodTo@FOSC+2))&0ffh
  4901  003178  6F80               	movlw	high highword(07A1200h)
  4902  00317A  0E00               	movwf	((setPeriodTo@FOSC+3))&0ffh
  4903  00317C  6F81               	goto	l4359
  4904  00317E  EFA7  F019         	line	53
  4905                           ;./servomoteur.h: 53:     else if (FPWM > (_resolution >>= 1)) {clockSelectBits = 6; FOS
                                 C = 4000000;}
  4906                           	
  4907                           l121:; BSR set to: 0
  4908  003182                     
  4909                           	
  4910                           l4333:; BSR set to: 0
  4911  003182                     
  4912                           	bcf	status,0
  4913  003182  90D8               	rrcf	((setPeriodTo@_resolution+3))&0ffh
  4914  003184  338B               	rrcf	((setPeriodTo@_resolution+2))&0ffh
  4915  003186  338A               	rrcf	((setPeriodTo@_resolution+1))&0ffh
  4916  003188  3389               	rrcf	((setPeriodTo@_resolution))&0ffh
  4917  00318A  3388               		movf	((setPeriodTo@FPWM))&0ffh,w
  4918  00318C  5172               	subwf	((setPeriodTo@_resolution))&0ffh,w
  4919  00318E  5D88               	movf	((setPeriodTo@FPWM+1))&0ffh,w
  4920  003190  5173               	subwfb	((setPeriodTo@_resolution+1))&0ffh,w
  4921  003192  5989               	movf	((setPeriodTo@FPWM+2))&0ffh,w
  4922  003194  5174               	subwfb	((setPeriodTo@_resolution+2))&0ffh,w
  4923  003196  598A               	movf	((setPeriodTo@FPWM+3))&0ffh,w
  4924  003198  5175               	subwfb	((setPeriodTo@_resolution+3))&0ffh,w
  4925  00319A  598B               	btfsc	status,0
  4926  00319C  B0D8               	goto	u5531
  4927  00319E  EFD3  F018         	goto	u5530
  4928  0031A2  EFD5  F018         
  4929                           u5531:
  4930  0031A6                     	goto	l4337
  4931  0031A6  EFE3  F018         u5530:
  4932  0031AA                     	
  4933                           l4335:; BSR set to: 0
  4934  0031AA                     
  4935                           	movlw	high(06h)
  4936  0031AA  0E00               	movwf	((setPeriodTo@clockSelectBits+1))&0ffh
  4937  0031AC  6F83               	movlw	low(06h)
  4938  0031AE  0E06               	movwf	((setPeriodTo@clockSelectBits))&0ffh
  4939  0031B0  6F82               	movlw	low(03D0900h)
  4940  0031B2  0E00               	movwf	((setPeriodTo@FOSC))&0ffh
  4941  0031B4  6F7E               	movlw	high(03D0900h)
  4942  0031B6  0E09               	movwf	((setPeriodTo@FOSC+1))&0ffh
  4943  0031B8  6F7F               	movlw	low highword(03D0900h)
  4944  0031BA  0E3D               	movwf	((setPeriodTo@FOSC+2))&0ffh
  4945  0031BC  6F80               	movlw	high highword(03D0900h)
  4946  0031BE  0E00               	movwf	((setPeriodTo@FOSC+3))&0ffh
  4947  0031C0  6F81               	goto	l4359
  4948  0031C2  EFA7  F019         	line	54
  4949                           ;./servomoteur.h: 54:     else if (FPWM > (_resolution >>= 1)) {clockSelectBits = 5; FOS
                                 C = 2000000;}
  4950                           	
  4951                           l123:; BSR set to: 0
  4952  0031C6                     
  4953                           	
  4954                           l4337:; BSR set to: 0
  4955  0031C6                     
  4956                           	bcf	status,0
  4957  0031C6  90D8               	rrcf	((setPeriodTo@_resolution+3))&0ffh
  4958  0031C8  338B               	rrcf	((setPeriodTo@_resolution+2))&0ffh
  4959  0031CA  338A               	rrcf	((setPeriodTo@_resolution+1))&0ffh
  4960  0031CC  3389               	rrcf	((setPeriodTo@_resolution))&0ffh
  4961  0031CE  3388               		movf	((setPeriodTo@FPWM))&0ffh,w
  4962  0031D0  5172               	subwf	((setPeriodTo@_resolution))&0ffh,w
  4963  0031D2  5D88               	movf	((setPeriodTo@FPWM+1))&0ffh,w
  4964  0031D4  5173               	subwfb	((setPeriodTo@_resolution+1))&0ffh,w
  4965  0031D6  5989               	movf	((setPeriodTo@FPWM+2))&0ffh,w
  4966  0031D8  5174               	subwfb	((setPeriodTo@_resolution+2))&0ffh,w
  4967  0031DA  598A               	movf	((setPeriodTo@FPWM+3))&0ffh,w
  4968  0031DC  5175               	subwfb	((setPeriodTo@_resolution+3))&0ffh,w
  4969  0031DE  598B               	btfsc	status,0
  4970  0031E0  B0D8               	goto	u5541
  4971  0031E2  EFF5  F018         	goto	u5540
  4972  0031E6  EFF7  F018         
  4973                           u5541:
  4974  0031EA                     	goto	l4341
  4975  0031EA  EF05  F019         u5540:
  4976  0031EE                     	
  4977                           l4339:; BSR set to: 0
  4978  0031EE                     
  4979                           	movlw	high(05h)
  4980  0031EE  0E00               	movwf	((setPeriodTo@clockSelectBits+1))&0ffh
  4981  0031F0  6F83               	movlw	low(05h)
  4982  0031F2  0E05               	movwf	((setPeriodTo@clockSelectBits))&0ffh
  4983  0031F4  6F82               	movlw	low(01E8480h)
  4984  0031F6  0E80               	movwf	((setPeriodTo@FOSC))&0ffh
  4985  0031F8  6F7E               	movlw	high(01E8480h)
  4986  0031FA  0E84               	movwf	((setPeriodTo@FOSC+1))&0ffh
  4987  0031FC  6F7F               	movlw	low highword(01E8480h)
  4988  0031FE  0E1E               	movwf	((setPeriodTo@FOSC+2))&0ffh
  4989  003200  6F80               	movlw	high highword(01E8480h)
  4990  003202  0E00               	movwf	((setPeriodTo@FOSC+3))&0ffh
  4991  003204  6F81               	goto	l4359
  4992  003206  EFA7  F019         	line	55
  4993                           ;./servomoteur.h: 55:     else if (FPWM > (_resolution >>= 1)) {clockSelectBits = 4; FOS
                                 C = 1000000;}
  4994                           	
  4995                           l125:; BSR set to: 0
  4996  00320A                     
  4997                           	
  4998                           l4341:; BSR set to: 0
  4999  00320A                     
  5000                           	bcf	status,0
  5001  00320A  90D8               	rrcf	((setPeriodTo@_resolution+3))&0ffh
  5002  00320C  338B               	rrcf	((setPeriodTo@_resolution+2))&0ffh
  5003  00320E  338A               	rrcf	((setPeriodTo@_resolution+1))&0ffh
  5004  003210  3389               	rrcf	((setPeriodTo@_resolution))&0ffh
  5005  003212  3388               		movf	((setPeriodTo@FPWM))&0ffh,w
  5006  003214  5172               	subwf	((setPeriodTo@_resolution))&0ffh,w
  5007  003216  5D88               	movf	((setPeriodTo@FPWM+1))&0ffh,w
  5008  003218  5173               	subwfb	((setPeriodTo@_resolution+1))&0ffh,w
  5009  00321A  5989               	movf	((setPeriodTo@FPWM+2))&0ffh,w
  5010  00321C  5174               	subwfb	((setPeriodTo@_resolution+2))&0ffh,w
  5011  00321E  598A               	movf	((setPeriodTo@FPWM+3))&0ffh,w
  5012  003220  5175               	subwfb	((setPeriodTo@_resolution+3))&0ffh,w
  5013  003222  598B               	btfsc	status,0
  5014  003224  B0D8               	goto	u5551
  5015  003226  EF17  F019         	goto	u5550
  5016  00322A  EF19  F019         
  5017                           u5551:
  5018  00322E                     	goto	l4345
  5019  00322E  EF27  F019         u5550:
  5020  003232                     	
  5021                           l4343:; BSR set to: 0
  5022  003232                     
  5023                           	movlw	high(04h)
  5024  003232  0E00               	movwf	((setPeriodTo@clockSelectBits+1))&0ffh
  5025  003234  6F83               	movlw	low(04h)
  5026  003236  0E04               	movwf	((setPeriodTo@clockSelectBits))&0ffh
  5027  003238  6F82               	movlw	low(0F4240h)
  5028  00323A  0E40               	movwf	((setPeriodTo@FOSC))&0ffh
  5029  00323C  6F7E               	movlw	high(0F4240h)
  5030  00323E  0E42               	movwf	((setPeriodTo@FOSC+1))&0ffh
  5031  003240  6F7F               	movlw	low highword(0F4240h)
  5032  003242  0E0F               	movwf	((setPeriodTo@FOSC+2))&0ffh
  5033  003244  6F80               	movlw	high highword(0F4240h)
  5034  003246  0E00               	movwf	((setPeriodTo@FOSC+3))&0ffh
  5035  003248  6F81               	goto	l4359
  5036  00324A  EFA7  F019         	line	56
  5037                           ;./servomoteur.h: 56:     else if (FPWM > (_resolution >>= 1)) {clockSelectBits = 3; FOS
                                 C = 500000;}
  5038                           	
  5039                           l127:; BSR set to: 0
  5040  00324E                     
  5041                           	
  5042                           l4345:; BSR set to: 0
  5043  00324E                     
  5044                           	bcf	status,0
  5045  00324E  90D8               	rrcf	((setPeriodTo@_resolution+3))&0ffh
  5046  003250  338B               	rrcf	((setPeriodTo@_resolution+2))&0ffh
  5047  003252  338A               	rrcf	((setPeriodTo@_resolution+1))&0ffh
  5048  003254  3389               	rrcf	((setPeriodTo@_resolution))&0ffh
  5049  003256  3388               		movf	((setPeriodTo@FPWM))&0ffh,w
  5050  003258  5172               	subwf	((setPeriodTo@_resolution))&0ffh,w
  5051  00325A  5D88               	movf	((setPeriodTo@FPWM+1))&0ffh,w
  5052  00325C  5173               	subwfb	((setPeriodTo@_resolution+1))&0ffh,w
  5053  00325E  5989               	movf	((setPeriodTo@FPWM+2))&0ffh,w
  5054  003260  5174               	subwfb	((setPeriodTo@_resolution+2))&0ffh,w
  5055  003262  598A               	movf	((setPeriodTo@FPWM+3))&0ffh,w
  5056  003264  5175               	subwfb	((setPeriodTo@_resolution+3))&0ffh,w
  5057  003266  598B               	btfsc	status,0
  5058  003268  B0D8               	goto	u5561
  5059  00326A  EF39  F019         	goto	u5560
  5060  00326E  EF3B  F019         
  5061                           u5561:
  5062  003272                     	goto	l4349
  5063  003272  EF49  F019         u5560:
  5064  003276                     	
  5065                           l4347:; BSR set to: 0
  5066  003276                     
  5067                           	movlw	high(03h)
  5068  003276  0E00               	movwf	((setPeriodTo@clockSelectBits+1))&0ffh
  5069  003278  6F83               	movlw	low(03h)
  5070  00327A  0E03               	movwf	((setPeriodTo@clockSelectBits))&0ffh
  5071  00327C  6F82               	movlw	low(07A120h)
  5072  00327E  0E20               	movwf	((setPeriodTo@FOSC))&0ffh
  5073  003280  6F7E               	movlw	high(07A120h)
  5074  003282  0EA1               	movwf	((setPeriodTo@FOSC+1))&0ffh
  5075  003284  6F7F               	movlw	low highword(07A120h)
  5076  003286  0E07               	movwf	((setPeriodTo@FOSC+2))&0ffh
  5077  003288  6F80               	movlw	high highword(07A120h)
  5078  00328A  0E00               	movwf	((setPeriodTo@FOSC+3))&0ffh
  5079  00328C  6F81               	goto	l4359
  5080  00328E  EFA7  F019         	line	57
  5081                           ;./servomoteur.h: 57:     else if (FPWM > (_resolution >>= 1)) {clockSelectBits = 2; FOS
                                 C = 250000;}
  5082                           	
  5083                           l129:; BSR set to: 0
  5084  003292                     
  5085                           	
  5086                           l4349:; BSR set to: 0
  5087  003292                     
  5088                           	bcf	status,0
  5089  003292  90D8               	rrcf	((setPeriodTo@_resolution+3))&0ffh
  5090  003294  338B               	rrcf	((setPeriodTo@_resolution+2))&0ffh
  5091  003296  338A               	rrcf	((setPeriodTo@_resolution+1))&0ffh
  5092  003298  3389               	rrcf	((setPeriodTo@_resolution))&0ffh
  5093  00329A  3388               		movf	((setPeriodTo@FPWM))&0ffh,w
  5094  00329C  5172               	subwf	((setPeriodTo@_resolution))&0ffh,w
  5095  00329E  5D88               	movf	((setPeriodTo@FPWM+1))&0ffh,w
  5096  0032A0  5173               	subwfb	((setPeriodTo@_resolution+1))&0ffh,w
  5097  0032A2  5989               	movf	((setPeriodTo@FPWM+2))&0ffh,w
  5098  0032A4  5174               	subwfb	((setPeriodTo@_resolution+2))&0ffh,w
  5099  0032A6  598A               	movf	((setPeriodTo@FPWM+3))&0ffh,w
  5100  0032A8  5175               	subwfb	((setPeriodTo@_resolution+3))&0ffh,w
  5101  0032AA  598B               	btfsc	status,0
  5102  0032AC  B0D8               	goto	u5571
  5103  0032AE  EF5B  F019         	goto	u5570
  5104  0032B2  EF5D  F019         
  5105                           u5571:
  5106  0032B6                     	goto	l4353
  5107  0032B6  EF6B  F019         u5570:
  5108  0032BA                     	
  5109                           l4351:; BSR set to: 0
  5110  0032BA                     
  5111                           	movlw	high(02h)
  5112  0032BA  0E00               	movwf	((setPeriodTo@clockSelectBits+1))&0ffh
  5113  0032BC  6F83               	movlw	low(02h)
  5114  0032BE  0E02               	movwf	((setPeriodTo@clockSelectBits))&0ffh
  5115  0032C0  6F82               	movlw	low(03D090h)
  5116  0032C2  0E90               	movwf	((setPeriodTo@FOSC))&0ffh
  5117  0032C4  6F7E               	movlw	high(03D090h)
  5118  0032C6  0ED0               	movwf	((setPeriodTo@FOSC+1))&0ffh
  5119  0032C8  6F7F               	movlw	low highword(03D090h)
  5120  0032CA  0E03               	movwf	((setPeriodTo@FOSC+2))&0ffh
  5121  0032CC  6F80               	movlw	high highword(03D090h)
  5122  0032CE  0E00               	movwf	((setPeriodTo@FOSC+3))&0ffh
  5123  0032D0  6F81               	goto	l4359
  5124  0032D2  EFA7  F019         	line	58
  5125                           ;./servomoteur.h: 58:     else if (FPWM > (_resolution >>= 1)) {clockSelectBits = 1; FOS
                                 C = 125000;}
  5126                           	
  5127                           l131:; BSR set to: 0
  5128  0032D6                     
  5129                           	
  5130                           l4353:; BSR set to: 0
  5131  0032D6                     
  5132                           	bcf	status,0
  5133  0032D6  90D8               	rrcf	((setPeriodTo@_resolution+3))&0ffh
  5134  0032D8  338B               	rrcf	((setPeriodTo@_resolution+2))&0ffh
  5135  0032DA  338A               	rrcf	((setPeriodTo@_resolution+1))&0ffh
  5136  0032DC  3389               	rrcf	((setPeriodTo@_resolution))&0ffh
  5137  0032DE  3388               		movf	((setPeriodTo@FPWM))&0ffh,w
  5138  0032E0  5172               	subwf	((setPeriodTo@_resolution))&0ffh,w
  5139  0032E2  5D88               	movf	((setPeriodTo@FPWM+1))&0ffh,w
  5140  0032E4  5173               	subwfb	((setPeriodTo@_resolution+1))&0ffh,w
  5141  0032E6  5989               	movf	((setPeriodTo@FPWM+2))&0ffh,w
  5142  0032E8  5174               	subwfb	((setPeriodTo@_resolution+2))&0ffh,w
  5143  0032EA  598A               	movf	((setPeriodTo@FPWM+3))&0ffh,w
  5144  0032EC  5175               	subwfb	((setPeriodTo@_resolution+3))&0ffh,w
  5145  0032EE  598B               	btfsc	status,0
  5146  0032F0  B0D8               	goto	u5581
  5147  0032F2  EF7D  F019         	goto	u5580
  5148  0032F6  EF7F  F019         
  5149                           u5581:
  5150  0032FA                     	goto	l4357
  5151  0032FA  EF8D  F019         u5580:
  5152  0032FE                     	
  5153                           l4355:; BSR set to: 0
  5154  0032FE                     
  5155                           	movlw	high(01h)
  5156  0032FE  0E00               	movwf	((setPeriodTo@clockSelectBits+1))&0ffh
  5157  003300  6F83               	movlw	low(01h)
  5158  003302  0E01               	movwf	((setPeriodTo@clockSelectBits))&0ffh
  5159  003304  6F82               	movlw	low(01E848h)
  5160  003306  0E48               	movwf	((setPeriodTo@FOSC))&0ffh
  5161  003308  6F7E               	movlw	high(01E848h)
  5162  00330A  0EE8               	movwf	((setPeriodTo@FOSC+1))&0ffh
  5163  00330C  6F7F               	movlw	low highword(01E848h)
  5164  00330E  0E01               	movwf	((setPeriodTo@FOSC+2))&0ffh
  5165  003310  6F80               	movlw	high highword(01E848h)
  5166  003312  0E00               	movwf	((setPeriodTo@FOSC+3))&0ffh
  5167  003314  6F81               	goto	l4359
  5168  003316  EFA7  F019         	line	59
  5169                           ;./servomoteur.h: 59:     else {clockSelectBits = 0; FOSC = 31000;}
  5170                           	
  5171                           l133:; BSR set to: 0
  5172  00331A                     
  5173                           	
  5174                           l4357:; BSR set to: 0
  5175  00331A                     
  5176                           	movlw	high(0)
  5177  00331A  0E00               	movwf	((setPeriodTo@clockSelectBits+1))&0ffh
  5178  00331C  6F83               	movlw	low(0)
  5179  00331E  0E00               	movwf	((setPeriodTo@clockSelectBits))&0ffh
  5180  003320  6F82               	movlw	low(07918h)
  5181  003322  0E18               	movwf	((setPeriodTo@FOSC))&0ffh
  5182  003324  6F7E               	movlw	high(07918h)
  5183  003326  0E79               	movwf	((setPeriodTo@FOSC+1))&0ffh
  5184  003328  6F7F               	movlw	low highword(07918h)
  5185  00332A  0E00               	movwf	((setPeriodTo@FOSC+2))&0ffh
  5186  00332C  6F80               	movlw	high highword(07918h)
  5187  00332E  0E00               	movwf	((setPeriodTo@FOSC+3))&0ffh
  5188  003330  6F81               	goto	l4359
  5189  003332  EFA7  F019         	
  5190                           l134:; BSR set to: 0
  5191  003336                     
  5192                           	goto	l4359
  5193  003336  EFA7  F019         	
  5194                           l132:; BSR set to: 0
  5195  00333A                     
  5196                           	goto	l4359
  5197  00333A  EFA7  F019         	
  5198                           l130:; BSR set to: 0
  5199  00333E                     
  5200                           	goto	l4359
  5201  00333E  EFA7  F019         	
  5202                           l128:; BSR set to: 0
  5203  003342                     
  5204                           	goto	l4359
  5205  003342  EFA7  F019         	
  5206                           l126:; BSR set to: 0
  5207  003346                     
  5208                           	goto	l4359
  5209  003346  EFA7  F019         	
  5210                           l124:; BSR set to: 0
  5211  00334A                     
  5212                           	goto	l4359
  5213  00334A  EFA7  F019         	
  5214                           l122:; BSR set to: 0
  5215  00334E                     
  5216                           	line	61
  5217                           	
  5218                           l4359:; BSR set to: 0
  5219  00334E                     
  5220                           ;./servomoteur.h: 61:     period = ((float)FOSC / (4.0 * (float)TimerPrescaleValue * (fl
                                 oat)FPWM)) - 1.0;
  5221                           	movlw	low(normalize32(0x40800000))
  5222  00334E  0E00               	movwf	((c:___flmul@a)),c
  5223  003350  6E13               	movlw	high(normalize32(0x40800000))
  5224  003352  0E00               	movwf	((c:___flmul@a+1)),c
  5225  003354  6E14               	movlw	low highword(normalize32(0x40800000))
  5226  003356  0E80               	movwf	((c:___flmul@a+2)),c
  5227  003358  6E15               	movlw	high highword(normalize32(0x40800000))
  5228  00335A  0E40               	movwf	((c:___flmul@a+3)),c
  5229  00335C  6E16               	movff	(setPeriodTo@TimerPrescaleValue),(c:___xxtofl@val)
  5230  00335E  C07C  F001         	movff	(setPeriodTo@TimerPrescaleValue+1),(c:___xxtofl@val+1)
  5231  003362  C07D  F002         	movlw	0
  5232  003366  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  5233  003368  BE02               	movlw	-1
  5234  00336A  0EFF               	movwf	((c:___xxtofl@val+2)),c
  5235  00336C  6E03               	movwf	((c:___xxtofl@val+3)),c
  5236  00336E  6E04               	movlw	(01h)&0ffh
  5237  003370  0E01               	
  5238                           	call	___xxtofl
  5239  003372  ECF0  F01C         	movff	0+?___xxtofl,(c:___flmul@b)
  5240  003376  C001  F00F         	movff	1+?___xxtofl,(c:___flmul@b+1)
  5241  00337A  C002  F010         	movff	2+?___xxtofl,(c:___flmul@b+2)
  5242  00337E  C003  F011         	movff	3+?___xxtofl,(c:___flmul@b+3)
  5243  003382  C004  F012         	
  5244                           	call	___flmul	;wreg free
  5245  003386  EC29  F012         	movff	0+?___flmul,(_setPeriodTo$1280)
  5246  00338A  C00F  F076         	movff	1+?___flmul,(_setPeriodTo$1280+1)
  5247  00338E  C010  F077         	movff	2+?___flmul,(_setPeriodTo$1280+2)
  5248  003392  C011  F078         	movff	3+?___flmul,(_setPeriodTo$1280+3)
  5249  003396  C012  F079         	
  5250                           	
  5251                           l4361:
  5252  00339A                     ;./servomoteur.h: 61:     period = ((float)FOSC / (4.0 * (float)TimerPrescaleValue * (fl
                                 oat)FPWM)) - 1.0;
  5253                           	movff	(setPeriodTo@FPWM),(c:___xxtofl@val)
  5254  00339A  C072  F001         	movff	(setPeriodTo@FPWM+1),(c:___xxtofl@val+1)
  5255  00339E  C073  F002         	movff	(setPeriodTo@FPWM+2),(c:___xxtofl@val+2)
  5256  0033A2  C074  F003         	movff	(setPeriodTo@FPWM+3),(c:___xxtofl@val+3)
  5257  0033A6  C075  F004         	movlw	(0)&0ffh
  5258  0033AA  0E00               	
  5259                           	call	___xxtofl
  5260  0033AC  ECF0  F01C         	movff	0+?___xxtofl,(c:___flmul@a)
  5261  0033B0  C001  F013         	movff	1+?___xxtofl,(c:___flmul@a+1)
  5262  0033B4  C002  F014         	movff	2+?___xxtofl,(c:___flmul@a+2)
  5263  0033B8  C003  F015         	movff	3+?___xxtofl,(c:___flmul@a+3)
  5264  0033BC  C004  F016         	
  5265                           	movff	(_setPeriodTo$1280),(c:___flmul@b)
  5266  0033C0  C076  F00F         	movff	(_setPeriodTo$1280+1),(c:___flmul@b+1)
  5267  0033C4  C077  F010         	movff	(_setPeriodTo$1280+2),(c:___flmul@b+2)
  5268  0033C8  C078  F011         	movff	(_setPeriodTo$1280+3),(c:___flmul@b+3)
  5269  0033CC  C079  F012         	call	___flmul	;wreg free
  5270  0033D0  EC29  F012         	movff	0+?___flmul,(c:___fldiv@a)
  5271  0033D4  C00F  F02C         	movff	1+?___flmul,(c:___fldiv@a+1)
  5272  0033D8  C010  F02D         	movff	2+?___flmul,(c:___fldiv@a+2)
  5273  0033DC  C011  F02E         	movff	3+?___flmul,(c:___fldiv@a+3)
  5274  0033E0  C012  F02F         	
  5275                           	movff	(setPeriodTo@FOSC),(c:___xxtofl@val)
  5276  0033E4  C07E  F001         	movff	(setPeriodTo@FOSC+1),(c:___xxtofl@val+1)
  5277  0033E8  C07F  F002         	movff	(setPeriodTo@FOSC+2),(c:___xxtofl@val+2)
  5278  0033EC  C080  F003         	movff	(setPeriodTo@FOSC+3),(c:___xxtofl@val+3)
  5279  0033F0  C081  F004         	movlw	(0)&0ffh
  5280  0033F4  0E00               	
  5281                           	call	___xxtofl
  5282  0033F6  ECF0  F01C         	movff	0+?___xxtofl,(c:___fldiv@b)
  5283  0033FA  C001  F028         	movff	1+?___xxtofl,(c:___fldiv@b+1)
  5284  0033FE  C002  F029         	movff	2+?___xxtofl,(c:___fldiv@b+2)
  5285  003402  C003  F02A         	movff	3+?___xxtofl,(c:___fldiv@b+3)
  5286  003406  C004  F02B         	
  5287                           	call	___fldiv	;wreg free
  5288  00340A  EC60  F014         	movff	0+?___fldiv,(c:___fladd@b)
  5289  00340E  C028  F041         	movff	1+?___fldiv,(c:___fladd@b+1)
  5290  003412  C029  F042         	movff	2+?___fldiv,(c:___fladd@b+2)
  5291  003416  C02A  F043         	movff	3+?___fldiv,(c:___fladd@b+3)
  5292  00341A  C02B  F044         	
  5293                           	movlw	low(normalize32(0xbf800000))
  5294  00341E  0E00               	movwf	((c:___fladd@a)),c
  5295  003420  6E45               	movlw	high(normalize32(0xbf800000))
  5296  003422  0E00               	movwf	((c:___fladd@a+1)),c
  5297  003424  6E46               	movlw	low highword(normalize32(0xbf800000))
  5298  003426  0E80               	movwf	((c:___fladd@a+2)),c
  5299  003428  6E47               	movlw	high highword(normalize32(0xbf800000))
  5300  00342A  0EBF               	movwf	((c:___fladd@a+3)),c
  5301  00342C  6E48               	call	___fladd	;wreg free
  5302  00342E  EC2D  F00D         	movff	0+?___fladd,(setPeriodTo@period)
  5303  003432  C041  F084         	movff	1+?___fladd,(setPeriodTo@period+1)
  5304  003436  C042  F085         	movff	2+?___fladd,(setPeriodTo@period+2)
  5305  00343A  C043  F086         	movff	3+?___fladd,(setPeriodTo@period+3)
  5306  00343E  C044  F087         	
  5307                           	line	62
  5308                           	
  5309                           l4363:
  5310  003442                     ;./servomoteur.h: 62:     period = roundf(period);
  5311                           	movff	(setPeriodTo@period),(c:roundf@x)
  5312  003442  C084  F055         	movff	(setPeriodTo@period+1),(c:roundf@x+1)
  5313  003446  C085  F056         	movff	(setPeriodTo@period+2),(c:roundf@x+2)
  5314  00344A  C086  F057         	movff	(setPeriodTo@period+3),(c:roundf@x+3)
  5315  00344E  C087  F058         	call	_roundf	;wreg free
  5316  003452  EC70  F016         	movff	0+?_roundf,(setPeriodTo@period)
  5317  003456  C055  F084         	movff	1+?_roundf,(setPeriodTo@period+1)
  5318  00345A  C056  F085         	movff	2+?_roundf,(setPeriodTo@period+2)
  5319  00345E  C057  F086         	movff	3+?_roundf,(setPeriodTo@period+3)
  5320  003462  C058  F087         	
  5321                           	line	64
  5322                           	
  5323                           l4365:
  5324  003466                     ;./servomoteur.h: 64:     OSCCON = ((clockSelectBits & 0x07) << 4) | 0x02;
  5325                           	movff	(setPeriodTo@clockSelectBits),??_setPeriodTo+0+0
  5326  003466  C082  F05F         	movlw	07h
  5327  00346A  0E07               	andwf	(??_setPeriodTo+0+0),c
  5328  00346C  165F               	swapf	(??_setPeriodTo+0+0),c,w
  5329  00346E  385F               	andlw	(0ffh shl 4) & 0ffh
  5330  003470  0BF0               	iorlw	low(02h)
  5331  003472  0902               	movwf	((c:4051)),c	;volatile
  5332  003474  6ED3               	line	65
  5333                           	
  5334                           l4367:
  5335  003476                     ;./servomoteur.h: 65:     PR2 = (int)period;
  5336                           	movff	(setPeriodTo@period),(c:___fltol@f1)
  5337  003476  C084  F055         	movff	(setPeriodTo@period+1),(c:___fltol@f1+1)
  5338  00347A  C085  F056         	movff	(setPeriodTo@period+2),(c:___fltol@f1+2)
  5339  00347E  C086  F057         	movff	(setPeriodTo@period+3),(c:___fltol@f1+3)
  5340  003482  C087  F058         	call	___fltol	;wreg free
  5341  003486  ECD5  F021         	movf	(0+?___fltol),c,w
  5342  00348A  5055               	movwf	((c:4043)),c	;volatile
  5343  00348C  6ECB               	line	66
  5344                           	
  5345                           l4369:
  5346  00348E                     ;./servomoteur.h: 66:     T2CON = TimerPrescaleBits;
  5347                           	movff	(setPeriodTo@TimerPrescaleBits),(c:4042)	;volatile
  5348  00348E  C07A  FFCA         	line	67
  5349                           	
  5350                           l4371:
  5351  003492                     ;./servomoteur.h: 67:     TMR2 = 0;
  5352                           	movlw	low(0)
  5353  003492  0E00               	movwf	((c:4044)),c	;volatile
  5354  003494  6ECC               	line	68
  5355                           	
  5356                           l4373:
  5357  003496                     ;./servomoteur.h: 68:     T2CONbits.TMR2ON = 1;
  5358                           	bsf	((c:4042)),c,2	;volatile
  5359  003496  84CA               	line	69
  5360                           	
  5361                           l4375:
  5362  003498                     ;./servomoteur.h: 69:     return (int)period;
  5363                           	movff	(setPeriodTo@period),(c:___fltol@f1)
  5364  003498  C084  F055         	movff	(setPeriodTo@period+1),(c:___fltol@f1+1)
  5365  00349C  C085  F056         	movff	(setPeriodTo@period+2),(c:___fltol@f1+2)
  5366  0034A0  C086  F057         	movff	(setPeriodTo@period+3),(c:___fltol@f1+3)
  5367  0034A4  C087  F058         	call	___fltol	;wreg free
  5368  0034A8  ECD5  F021         	movff	0+?___fltol,(?_setPeriodTo)
  5369  0034AC  C055  F072         	movff	1+?___fltol,(?_setPeriodTo+1)
  5370  0034B0  C056  F073         	goto	l135
  5371  0034B4  EF5C  F01A         	
  5372                           l4377:
  5373  0034B8                     	line	70
  5374                           	
  5375                           l135:
  5376  0034B8                     	return	;funcret
  5377  0034B8  0012               	opt stack 0
  5378                           GLOBAL	__end_of_setPeriodTo
  5379                           	__end_of_setPeriodTo:
  5380  0034BA                     	signat	_setPeriodTo,4218
  5381                           	global	_roundf
  5382                           
  5383 ;; *************** function _roundf *****************
  5384 ;; Defined at:
  5385 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\roundf.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  x               4   84[COMRAM] float 
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  y               4   14[BANK0 ] float 
  5390 ;;  u               4   10[BANK0 ] struct .
  5391 ;;  e               2    4[BANK0 ] int 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  4   84[COMRAM] float 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5401 ;;      Params:         4       0       0       0       0       0       0       0       0
  5402 ;;      Locals:         0      18       0       0       0       0       0       0       0
  5403 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5404 ;;      Totals:         8      18       0       0       0       0       0       0       0
  5405 ;;Total ram usage:       26 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    1
  5408 ;; This function calls:
  5409 ;;		___fladd
  5410 ;;		___flge
  5411 ;;		___flmul
  5412 ;;		___flneg
  5413 ;; This function is called by:
  5414 ;;		_setPeriodTo
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           psect	text3,class=CODE,space=0,reloc=2,group=2
  5418                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\roundf.c"
  5419                           	line	12
  5420                           global __ptext3
  5421                           __ptext3:
  5422  002CE0                     psect	text3
  5423                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\roundf.c"
  5424                           	line	12
  5425                           	global	__size_of_roundf
  5426                           	__size_of_roundf	equ	__end_of_roundf-_roundf
  5427  0000                     	
  5428                           _roundf:
  5429  002CE0                     ;incstack = 0
  5430                           	opt	stack 27
  5431                           	line	14
  5432                           	
  5433                           l4121:
  5434  002CE0                     	movff	(roundf@F521),(roundf@u)
  5435  002CE0  C0EE  F06A         	movff	(roundf@F521+1),(roundf@u+1)
  5436  002CE4  C0EF  F06B         	movff	(roundf@F521+2),(roundf@u+2)
  5437  002CE8  C0F0  F06C         	movff	(roundf@F521+3),(roundf@u+3)
  5438  002CEC  C0F1  F06D         	movff	(c:roundf@x),(roundf@u)
  5439  002CF0  C055  F06A         	movff	(c:roundf@x+1),(roundf@u+1)
  5440  002CF4  C056  F06B         	movff	(c:roundf@x+2),(roundf@u+2)
  5441  002CF8  C057  F06C         	movff	(c:roundf@x+3),(roundf@u+3)
  5442  002CFC  C058  F06D         	line	15
  5443                           	
  5444                           l4123:
  5445  002D00                     	movff	(roundf@u),??_roundf+0+0
  5446  002D00  C06A  F059         	movff	(roundf@u+1),??_roundf+0+0+1
  5447  002D04  C06B  F05A         	movff	(roundf@u+2),??_roundf+0+0+2
  5448  002D08  C06C  F05B         	movff	(roundf@u+3),??_roundf+0+0+3
  5449  002D0C  C06D  F05C         	movlw	017h+1
  5450  002D10  0E18               	goto	u5190
  5451  002D12  EF90  F016         u5195:
  5452  002D16                     	bcf	status,0
  5453  002D16  90D8               	rrcf	(??_roundf+0+3),c
  5454  002D18  325C               	rrcf	(??_roundf+0+2),c
  5455  002D1A  325B               	rrcf	(??_roundf+0+1),c
  5456  002D1C  325A               	rrcf	(??_roundf+0+0),c
  5457  002D1E  3259               u5190:
  5458  002D20                     	decfsz	wreg
  5459  002D20  2EE8               	goto	u5195
  5460  002D22  EF8B  F016         	movf	(??_roundf+0+0),c,w
  5461  002D26  5059               	movlb	0	; () banked
  5462  002D28  0100               	movwf	((roundf@e))&0ffh
  5463  002D2A  6F64               	clrf	((roundf@e+1))&0ffh
  5464  002D2C  6B65               	line	18
  5465                           	btfsc	((roundf@e+1))&0ffh,7
  5466  002D2E  BF65               	goto	u5201
  5467  002D30  EFA3  F016         	movf	((roundf@e+1))&0ffh,w
  5468  002D34  5165               	bnz	u5200
  5469  002D36  E109               	movlw	150
  5470  002D38  0E96               	subwf	 ((roundf@e))&0ffh,w
  5471  002D3A  5D64               	btfss	status,0
  5472  002D3C  A0D8               	goto	u5201
  5473  002D3E  EFA3  F016         	goto	u5200
  5474  002D42  EFA5  F016         
  5475                           u5201:
  5476  002D46                     	goto	l4127
  5477  002D46  EFAF  F016         u5200:
  5478  002D4A                     	line	19
  5479                           	
  5480                           l4125:; BSR set to: 0
  5481  002D4A                     
  5482                           	movff	(c:roundf@x),(c:?_roundf)
  5483  002D4A  C055  F055         	movff	(c:roundf@x+1),(c:?_roundf+1)
  5484  002D4E  C056  F056         	movff	(c:roundf@x+2),(c:?_roundf+2)
  5485  002D52  C057  F057         	movff	(c:roundf@x+3),(c:?_roundf+3)
  5486  002D56  C058  F058         	goto	l1221
  5487  002D5A  EF78  F018         	
  5488                           l1220:; BSR set to: 0
  5489  002D5E                     
  5490                           	line	20
  5491                           	
  5492                           l4127:; BSR set to: 0
  5493  002D5E                     
  5494                           	movff	(roundf@u),??_roundf+0+0
  5495  002D5E  C06A  F059         	movff	(roundf@u+1),??_roundf+0+0+1
  5496  002D62  C06B  F05A         	movff	(roundf@u+2),??_roundf+0+0+2
  5497  002D66  C06C  F05B         	movff	(roundf@u+3),??_roundf+0+0+3
  5498  002D6A  C06D  F05C         	movlw	01Fh+1
  5499  002D6E  0E20               	goto	u5210
  5500  002D70  EFBF  F016         u5215:
  5501  002D74                     	bcf	status,0
  5502  002D74  90D8               	rrcf	(??_roundf+0+3),c
  5503  002D76  325C               	rrcf	(??_roundf+0+2),c
  5504  002D78  325B               	rrcf	(??_roundf+0+1),c
  5505  002D7A  325A               	rrcf	(??_roundf+0+0),c
  5506  002D7C  3259               u5210:
  5507  002D7E                     	decfsz	wreg
  5508  002D7E  2EE8               	goto	u5215
  5509  002D80  EFBA  F016         	movf	(??_roundf+0+0),c,w
  5510  002D84  5059               iorwf	(??_roundf+0+1),c,w
  5511  002D86  105A               iorwf	(??_roundf+0+2),c,w
  5512  002D88  105B               iorwf	(??_roundf+0+3),c,w
  5513  002D8A  105C               	btfsc	status,2
  5514  002D8C  B4D8               	goto	u5221
  5515  002D8E  EFCB  F016         	goto	u5220
  5516  002D92  EFCD  F016         
  5517                           u5221:
  5518  002D96                     	goto	l4131
  5519  002D96  EFE1  F016         u5220:
  5520  002D9A                     	line	21
  5521                           	
  5522                           l4129:; BSR set to: 0
  5523  002D9A                     
  5524                           	movff	(c:roundf@x),(c:___flneg@f1)
  5525  002D9A  C055  F001         	movff	(c:roundf@x+1),(c:___flneg@f1+1)
  5526  002D9E  C056  F002         	movff	(c:roundf@x+2),(c:___flneg@f1+2)
  5527  002DA2  C057  F003         	movff	(c:roundf@x+3),(c:___flneg@f1+3)
  5528  002DA6  C058  F004         	call	___flneg	;wreg free
  5529  002DAA  EC1E  F02B         	movff	0+?___flneg,(c:roundf@x)
  5530  002DAE  C001  F055         	movff	1+?___flneg,(c:roundf@x+1)
  5531  002DB2  C002  F056         	movff	2+?___flneg,(c:roundf@x+2)
  5532  002DB6  C003  F057         	movff	3+?___flneg,(c:roundf@x+3)
  5533  002DBA  C004  F058         	
  5534                           	goto	l4131
  5535  002DBE  EFE1  F016         	
  5536                           l1222:
  5537  002DC2                     	line	22
  5538                           	
  5539                           l4131:
  5540  002DC2                     	movlb	0	; () banked
  5541  002DC2  0100               	btfsc	((roundf@e+1))&0ffh,7
  5542  002DC4  BF65               	goto	u5230
  5543  002DC6  EFF0  F016         	movf	((roundf@e+1))&0ffh,w
  5544  002DCA  5165               	bnz	u5231
  5545  002DCC  E107               	movlw	126
  5546  002DCE  0E7E               	subwf	 ((roundf@e))&0ffh,w
  5547  002DD0  5D64               	btfsc	status,0
  5548  002DD2  B0D8               	goto	u5231
  5549  002DD4  EFEE  F016         	goto	u5230
  5550  002DD8  EFF0  F016         
  5551                           u5231:
  5552  002DDC                     	goto	l4137
  5553  002DDC  EF0E  F017         u5230:
  5554  002DE0                     	line	24
  5555                           	
  5556                           l4133:; BSR set to: 0
  5557  002DE0                     
  5558                           	movff	(roundf@u),(c:___flmul@b)
  5559  002DE0  C06A  F00F         	movff	(roundf@u+1),(c:___flmul@b+1)
  5560  002DE4  C06B  F010         	movff	(roundf@u+2),(c:___flmul@b+2)
  5561  002DE8  C06C  F011         	movff	(roundf@u+3),(c:___flmul@b+3)
  5562  002DEC  C06D  F012         	movlw	low(normalize32(0x0))
  5563  002DF0  0E00               	movwf	((c:___flmul@a)),c
  5564  002DF2  6E13               	movlw	high(normalize32(0x0))
  5565  002DF4  0E00               	movwf	((c:___flmul@a+1)),c
  5566  002DF6  6E14               	movlw	low highword(normalize32(0x0))
  5567  002DF8  0E00               	movwf	((c:___flmul@a+2)),c
  5568  002DFA  6E15               	movlw	high highword(normalize32(0x0))
  5569  002DFC  0E00               	movwf	((c:___flmul@a+3)),c
  5570  002DFE  6E16               	call	___flmul	;wreg free
  5571  002E00  EC29  F012         	movff	0+?___flmul,(c:?_roundf)
  5572  002E04  C00F  F055         	movff	1+?___flmul,(c:?_roundf+1)
  5573  002E08  C010  F056         	movff	2+?___flmul,(c:?_roundf+2)
  5574  002E0C  C011  F057         	movff	3+?___flmul,(c:?_roundf+3)
  5575  002E10  C012  F058         	
  5576                           	goto	l1221
  5577  002E14  EF78  F018         	
  5578                           l4135:
  5579  002E18                     	goto	l1221
  5580  002E18  EF78  F018         	line	25
  5581                           	
  5582                           l1223:
  5583  002E1C                     	line	26
  5584                           	
  5585                           l4137:
  5586  002E1C                     	movlw	low((_toint))
  5587  002E1C  0E01               	movwf	tblptrl
  5588  002E1E  6EF6               	if	1	;There is more than 1 active tblptr byte
  5589  002E20                     	movlw	high((_toint))
  5590  002E20  0E08               	movwf	tblptrh
  5591  002E22  6EF7               	endif
  5592  002E24                     	if	0	;There are less than 3 active tblptr bytes
  5593  002E24                     	movlw	low highword((_toint))
  5596  002E24                     	tblrd*+
  5597  002E24  0009               	
  5598                           	movff	tablat,(c:___fladd@a)
  5599  002E26  CFF5 F045          	tblrd*+
  5600  002E2A  0009               	
  5601                           	movff	tablat,(c:___fladd@a+1)
  5602  002E2C  CFF5 F046          	tblrd*+
  5603  002E30  0009               	
  5604                           	movff	tablat,(c:___fladd@a+2)
  5605  002E32  CFF5 F047          	tblrd*-
  5606  002E36  000A               	
  5607                           	movff	tablat,(c:___fladd@a+3)
  5608  002E38  CFF5 F048          	movff	(c:roundf@x),(c:___fladd@b)
  5609  002E3C  C055  F041         	movff	(c:roundf@x+1),(c:___fladd@b+1)
  5610  002E40  C056  F042         	movff	(c:roundf@x+2),(c:___fladd@b+2)
  5611  002E44  C057  F043         	movff	(c:roundf@x+3),(c:___fladd@b+3)
  5612  002E48  C058  F044         	call	___fladd	;wreg free
  5613  002E4C  EC2D  F00D         	movff	0+?___fladd,(_roundf$1282)
  5614  002E50  C041  F066         	movff	1+?___fladd,(_roundf$1282+1)
  5615  002E54  C042  F067         	movff	2+?___fladd,(_roundf$1282+2)
  5616  002E58  C043  F068         	movff	3+?___fladd,(_roundf$1282+3)
  5617  002E5C  C044  F069         	
  5618                           	movlw	low((_toint))
  5619  002E60  0E01               	movwf	tblptrl
  5620  002E62  6EF6               	if	1	;There is more than 1 active tblptr byte
  5621  002E64                     	movlw	high((_toint))
  5622  002E64  0E08               	movwf	tblptrh
  5623  002E66  6EF7               	endif
  5624  002E68                     	if	0	;There are less than 3 active tblptr bytes
  5625  002E68                     	movlw	low highword((_toint))
  5628  002E68                     	tblrd*+
  5629  002E68  0009               	
  5630                           	movff	tablat,(c:___flneg@f1)
  5631  002E6A  CFF5 F001          	tblrd*+
  5632  002E6E  0009               	
  5633                           	movff	tablat,(c:___flneg@f1+1)
  5634  002E70  CFF5 F002          	tblrd*+
  5635  002E74  0009               	
  5636                           	movff	tablat,(c:___flneg@f1+2)
  5637  002E76  CFF5 F003          	tblrd*-
  5638  002E7A  000A               	
  5639                           	movff	tablat,(c:___flneg@f1+3)
  5640  002E7C  CFF5 F004          	call	___flneg	;wreg free
  5641  002E80  EC1E  F02B         	movff	0+?___flneg,(c:___fladd@a)
  5642  002E84  C001  F045         	movff	1+?___flneg,(c:___fladd@a+1)
  5643  002E88  C002  F046         	movff	2+?___flneg,(c:___fladd@a+2)
  5644  002E8C  C003  F047         	movff	3+?___flneg,(c:___fladd@a+3)
  5645  002E90  C004  F048         	
  5646                           	movff	(_roundf$1282),(c:___fladd@b)
  5647  002E94  C066  F041         	movff	(_roundf$1282+1),(c:___fladd@b+1)
  5648  002E98  C067  F042         	movff	(_roundf$1282+2),(c:___fladd@b+2)
  5649  002E9C  C068  F043         	movff	(_roundf$1282+3),(c:___fladd@b+3)
  5650  002EA0  C069  F044         	call	___fladd	;wreg free
  5651  002EA4  EC2D  F00D         	movff	0+?___fladd,(_roundf$1283)
  5652  002EA8  C041  F060         	movff	1+?___fladd,(_roundf$1283+1)
  5653  002EAC  C042  F061         	movff	2+?___fladd,(_roundf$1283+2)
  5654  002EB0  C043  F062         	movff	3+?___fladd,(_roundf$1283+3)
  5655  002EB4  C044  F063         	
  5656                           	
  5657                           l4139:
  5658  002EB8                     	movff	(_roundf$1283),(c:___fladd@b)
  5659  002EB8  C060  F041         	movff	(_roundf$1283+1),(c:___fladd@b+1)
  5660  002EBC  C061  F042         	movff	(_roundf$1283+2),(c:___fladd@b+2)
  5661  002EC0  C062  F043         	movff	(_roundf$1283+3),(c:___fladd@b+3)
  5662  002EC4  C063  F044         	movff	(c:roundf@x),(c:___flneg@f1)
  5663  002EC8  C055  F001         	movff	(c:roundf@x+1),(c:___flneg@f1+1)
  5664  002ECC  C056  F002         	movff	(c:roundf@x+2),(c:___flneg@f1+2)
  5665  002ED0  C057  F003         	movff	(c:roundf@x+3),(c:___flneg@f1+3)
  5666  002ED4  C058  F004         	call	___flneg	;wreg free
  5667  002ED8  EC1E  F02B         	movff	0+?___flneg,(c:___fladd@a)
  5668  002EDC  C001  F045         	movff	1+?___flneg,(c:___fladd@a+1)
  5669  002EE0  C002  F046         	movff	2+?___flneg,(c:___fladd@a+2)
  5670  002EE4  C003  F047         	movff	3+?___flneg,(c:___fladd@a+3)
  5671  002EE8  C004  F048         	
  5672                           	call	___fladd	;wreg free
  5673  002EEC  EC2D  F00D         	movff	0+?___fladd,(roundf@y)
  5674  002EF0  C041  F06E         	movff	1+?___fladd,(roundf@y+1)
  5675  002EF4  C042  F06F         	movff	2+?___fladd,(roundf@y+2)
  5676  002EF8  C043  F070         	movff	3+?___fladd,(roundf@y+3)
  5677  002EFC  C044  F071         	
  5678                           	line	27
  5679                           	
  5680                           l4141:
  5681  002F00                     	movlw	low(normalize32(0x3f000000))
  5682  002F00  0E00               	movwf	((c:___flge@ff1)),c
  5683  002F02  6E01               	movlw	high(normalize32(0x3f000000))
  5684  002F04  0E00               	movwf	((c:___flge@ff1+1)),c
  5685  002F06  6E02               	movlw	low highword(normalize32(0x3f000000))
  5686  002F08  0E00               	movwf	((c:___flge@ff1+2)),c
  5687  002F0A  6E03               	movlw	high highword(normalize32(0x3f000000))
  5688  002F0C  0E3F               	movwf	((c:___flge@ff1+3)),c
  5689  002F0E  6E04               	movff	(roundf@y),(c:___flge@ff2)
  5690  002F10  C06E  F005         	movff	(roundf@y+1),(c:___flge@ff2+1)
  5691  002F14  C06F  F006         	movff	(roundf@y+2),(c:___flge@ff2+2)
  5692  002F18  C070  F007         	movff	(roundf@y+3),(c:___flge@ff2+3)
  5693  002F1C  C071  F008         	call	___flge	;wreg free
  5694  002F20  EC21  F021         	btfsc	status,0
  5695  002F24  B0D8               	goto	u5241
  5696  002F26  EF97  F017         	goto	u5240
  5697  002F2A  EF99  F017         u5241:
  5698  002F2E                     	goto	l4145
  5699  002F2E  EFCF  F017         u5240:
  5700  002F32                     	line	28
  5701                           	
  5702                           l4143:
  5703  002F32                     	movff	(c:roundf@x),(c:___fladd@a)
  5704  002F32  C055  F045         	movff	(c:roundf@x+1),(c:___fladd@a+1)
  5705  002F36  C056  F046         	movff	(c:roundf@x+2),(c:___fladd@a+2)
  5706  002F3A  C057  F047         	movff	(c:roundf@x+3),(c:___fladd@a+3)
  5707  002F3E  C058  F048         	movff	(roundf@y),(c:___fladd@b)
  5708  002F42  C06E  F041         	movff	(roundf@y+1),(c:___fladd@b+1)
  5709  002F46  C06F  F042         	movff	(roundf@y+2),(c:___fladd@b+2)
  5710  002F4A  C070  F043         	movff	(roundf@y+3),(c:___fladd@b+3)
  5711  002F4E  C071  F044         	call	___fladd	;wreg free
  5712  002F52  EC2D  F00D         	movff	0+?___fladd,(_roundf$1282)
  5713  002F56  C041  F066         	movff	1+?___fladd,(_roundf$1282+1)
  5714  002F5A  C042  F067         	movff	2+?___fladd,(_roundf$1282+2)
  5715  002F5E  C043  F068         	movff	3+?___fladd,(_roundf$1282+3)
  5716  002F62  C044  F069         	
  5717                           	movff	(_roundf$1282),(c:___fladd@b)
  5718  002F66  C066  F041         	movff	(_roundf$1282+1),(c:___fladd@b+1)
  5719  002F6A  C067  F042         	movff	(_roundf$1282+2),(c:___fladd@b+2)
  5720  002F6E  C068  F043         	movff	(_roundf$1282+3),(c:___fladd@b+3)
  5721  002F72  C069  F044         	movlw	low(normalize32(0xbf800000))
  5722  002F76  0E00               	movwf	((c:___fladd@a)),c
  5723  002F78  6E45               	movlw	high(normalize32(0xbf800000))
  5724  002F7A  0E00               	movwf	((c:___fladd@a+1)),c
  5725  002F7C  6E46               	movlw	low highword(normalize32(0xbf800000))
  5726  002F7E  0E80               	movwf	((c:___fladd@a+2)),c
  5727  002F80  6E47               	movlw	high highword(normalize32(0xbf800000))
  5728  002F82  0EBF               	movwf	((c:___fladd@a+3)),c
  5729  002F84  6E48               	call	___fladd	;wreg free
  5730  002F86  EC2D  F00D         	movff	0+?___fladd,(roundf@y)
  5731  002F8A  C041  F06E         	movff	1+?___fladd,(roundf@y+1)
  5732  002F8E  C042  F06F         	movff	2+?___fladd,(roundf@y+2)
  5733  002F92  C043  F070         	movff	3+?___fladd,(roundf@y+3)
  5734  002F96  C044  F071         	
  5735                           	goto	l4151
  5736  002F9A  EF3C  F018         	line	29
  5737                           	
  5738                           l1224:
  5739  002F9E                     	
  5740                           l4145:
  5741  002F9E                     	movlw	low(normalize32(0xbf000000))
  5742  002F9E  0E00               	movwf	((c:___flge@ff1)),c
  5743  002FA0  6E01               	movlw	high(normalize32(0xbf000000))
  5744  002FA2  0E00               	movwf	((c:___flge@ff1+1)),c
  5745  002FA4  6E02               	movlw	low highword(normalize32(0xbf000000))
  5746  002FA6  0E00               	movwf	((c:___flge@ff1+2)),c
  5747  002FA8  6E03               	movlw	high highword(normalize32(0xbf000000))
  5748  002FAA  0EBF               	movwf	((c:___flge@ff1+3)),c
  5749  002FAC  6E04               	movff	(roundf@y),(c:___flge@ff2)
  5750  002FAE  C06E  F005         	movff	(roundf@y+1),(c:___flge@ff2+1)
  5751  002FB2  C06F  F006         	movff	(roundf@y+2),(c:___flge@ff2+2)
  5752  002FB6  C070  F007         	movff	(roundf@y+3),(c:___flge@ff2+3)
  5753  002FBA  C071  F008         	call	___flge	;wreg free
  5754  002FBE  EC21  F021         	btfss	status,0
  5755  002FC2  A0D8               	goto	u5251
  5756  002FC4  EFE6  F017         	goto	u5250
  5757  002FC8  EFE8  F017         u5251:
  5758  002FCC                     	goto	l4149
  5759  002FCC  EF1E  F018         u5250:
  5760  002FD0                     	line	30
  5761                           	
  5762                           l4147:
  5763  002FD0                     	movff	(c:roundf@x),(c:___fladd@a)
  5764  002FD0  C055  F045         	movff	(c:roundf@x+1),(c:___fladd@a+1)
  5765  002FD4  C056  F046         	movff	(c:roundf@x+2),(c:___fladd@a+2)
  5766  002FD8  C057  F047         	movff	(c:roundf@x+3),(c:___fladd@a+3)
  5767  002FDC  C058  F048         	movff	(roundf@y),(c:___fladd@b)
  5768  002FE0  C06E  F041         	movff	(roundf@y+1),(c:___fladd@b+1)
  5769  002FE4  C06F  F042         	movff	(roundf@y+2),(c:___fladd@b+2)
  5770  002FE8  C070  F043         	movff	(roundf@y+3),(c:___fladd@b+3)
  5771  002FEC  C071  F044         	call	___fladd	;wreg free
  5772  002FF0  EC2D  F00D         	movff	0+?___fladd,(_roundf$1282)
  5773  002FF4  C041  F066         	movff	1+?___fladd,(_roundf$1282+1)
  5774  002FF8  C042  F067         	movff	2+?___fladd,(_roundf$1282+2)
  5775  002FFC  C043  F068         	movff	3+?___fladd,(_roundf$1282+3)
  5776  003000  C044  F069         	
  5777                           	movff	(_roundf$1282),(c:___fladd@b)
  5778  003004  C066  F041         	movff	(_roundf$1282+1),(c:___fladd@b+1)
  5779  003008  C067  F042         	movff	(_roundf$1282+2),(c:___fladd@b+2)
  5780  00300C  C068  F043         	movff	(_roundf$1282+3),(c:___fladd@b+3)
  5781  003010  C069  F044         	movlw	low(normalize32(0x3f800000))
  5782  003014  0E00               	movwf	((c:___fladd@a)),c
  5783  003016  6E45               	movlw	high(normalize32(0x3f800000))
  5784  003018  0E00               	movwf	((c:___fladd@a+1)),c
  5785  00301A  6E46               	movlw	low highword(normalize32(0x3f800000))
  5786  00301C  0E80               	movwf	((c:___fladd@a+2)),c
  5787  00301E  6E47               	movlw	high highword(normalize32(0x3f800000))
  5788  003020  0E3F               	movwf	((c:___fladd@a+3)),c
  5789  003022  6E48               	call	___fladd	;wreg free
  5790  003024  EC2D  F00D         	movff	0+?___fladd,(roundf@y)
  5791  003028  C041  F06E         	movff	1+?___fladd,(roundf@y+1)
  5792  00302C  C042  F06F         	movff	2+?___fladd,(roundf@y+2)
  5793  003030  C043  F070         	movff	3+?___fladd,(roundf@y+3)
  5794  003034  C044  F071         	
  5795                           	goto	l4151
  5796  003038  EF3C  F018         	line	31
  5797                           	
  5798                           l1226:
  5799  00303C                     	line	32
  5800                           	
  5801                           l4149:
  5802  00303C                     	movff	(roundf@y),(c:___fladd@b)
  5803  00303C  C06E  F041         	movff	(roundf@y+1),(c:___fladd@b+1)
  5804  003040  C06F  F042         	movff	(roundf@y+2),(c:___fladd@b+2)
  5805  003044  C070  F043         	movff	(roundf@y+3),(c:___fladd@b+3)
  5806  003048  C071  F044         	movff	(c:roundf@x),(c:___fladd@a)
  5807  00304C  C055  F045         	movff	(c:roundf@x+1),(c:___fladd@a+1)
  5808  003050  C056  F046         	movff	(c:roundf@x+2),(c:___fladd@a+2)
  5809  003054  C057  F047         	movff	(c:roundf@x+3),(c:___fladd@a+3)
  5810  003058  C058  F048         	call	___fladd	;wreg free
  5811  00305C  EC2D  F00D         	movff	0+?___fladd,(roundf@y)
  5812  003060  C041  F06E         	movff	1+?___fladd,(roundf@y+1)
  5813  003064  C042  F06F         	movff	2+?___fladd,(roundf@y+2)
  5814  003068  C043  F070         	movff	3+?___fladd,(roundf@y+3)
  5815  00306C  C044  F071         	
  5816                           	goto	l4151
  5817  003070  EF3C  F018         	
  5818                           l1227:
  5819  003074                     	goto	l4151
  5820  003074  EF3C  F018         	
  5821                           l1225:
  5822  003078                     	line	33
  5823                           	
  5824                           l4151:
  5825  003078                     	movff	(roundf@u),??_roundf+0+0
  5826  003078  C06A  F059         	movff	(roundf@u+1),??_roundf+0+0+1
  5827  00307C  C06B  F05A         	movff	(roundf@u+2),??_roundf+0+0+2
  5828  003080  C06C  F05B         	movff	(roundf@u+3),??_roundf+0+0+3
  5829  003084  C06D  F05C         	movlw	01Fh+1
  5830  003088  0E20               	goto	u5260
  5831  00308A  EF4C  F018         u5265:
  5832  00308E                     	bcf	status,0
  5833  00308E  90D8               	rrcf	(??_roundf+0+3),c
  5834  003090  325C               	rrcf	(??_roundf+0+2),c
  5835  003092  325B               	rrcf	(??_roundf+0+1),c
  5836  003094  325A               	rrcf	(??_roundf+0+0),c
  5837  003096  3259               u5260:
  5838  003098                     	decfsz	wreg
  5839  003098  2EE8               	goto	u5265
  5840  00309A  EF47  F018         	movf	(??_roundf+0+0),c,w
  5841  00309E  5059               iorwf	(??_roundf+0+1),c,w
  5842  0030A0  105A               iorwf	(??_roundf+0+2),c,w
  5843  0030A2  105B               iorwf	(??_roundf+0+3),c,w
  5844  0030A4  105C               	btfsc	status,2
  5845  0030A6  B4D8               	goto	u5271
  5846  0030A8  EF58  F018         	goto	u5270
  5847  0030AC  EF5A  F018         
  5848                           u5271:
  5849  0030B0                     	goto	l4155
  5850  0030B0  EF6E  F018         u5270:
  5851  0030B4                     	line	34
  5852                           	
  5853                           l4153:
  5854  0030B4                     	movff	(roundf@y),(c:___flneg@f1)
  5855  0030B4  C06E  F001         	movff	(roundf@y+1),(c:___flneg@f1+1)
  5856  0030B8  C06F  F002         	movff	(roundf@y+2),(c:___flneg@f1+2)
  5857  0030BC  C070  F003         	movff	(roundf@y+3),(c:___flneg@f1+3)
  5858  0030C0  C071  F004         	call	___flneg	;wreg free
  5859  0030C4  EC1E  F02B         	movff	0+?___flneg,(roundf@y)
  5860  0030C8  C001  F06E         	movff	1+?___flneg,(roundf@y+1)
  5861  0030CC  C002  F06F         	movff	2+?___flneg,(roundf@y+2)
  5862  0030D0  C003  F070         	movff	3+?___flneg,(roundf@y+3)
  5863  0030D4  C004  F071         	
  5864                           	goto	l4155
  5865  0030D8  EF6E  F018         	
  5866                           l1228:
  5867  0030DC                     	line	35
  5868                           	
  5869                           l4155:
  5870  0030DC                     	movff	(roundf@y),(c:?_roundf)
  5871  0030DC  C06E  F055         	movff	(roundf@y+1),(c:?_roundf+1)
  5872  0030E0  C06F  F056         	movff	(roundf@y+2),(c:?_roundf+2)
  5873  0030E4  C070  F057         	movff	(roundf@y+3),(c:?_roundf+3)
  5874  0030E8  C071  F058         	goto	l1221
  5875  0030EC  EF78  F018         	
  5876                           l4157:
  5877  0030F0                     	line	36
  5878                           	
  5879                           l1221:
  5880  0030F0                     	return	;funcret
  5881  0030F0  0012               	opt stack 0
  5882                           GLOBAL	__end_of_roundf
  5883                           	__end_of_roundf:
  5884  0030F2                     	signat	_roundf,4220
  5885                           	global	___flneg
  5886                           
  5887 ;; *************** function ___flneg *****************
  5888 ;; Defined at:
  5889 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  f1              4    0[COMRAM] float 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  4    0[COMRAM] float 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5903 ;;      Params:         4       0       0       0       0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5906 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5907 ;;Total ram usage:        4 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_roundf
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           psect	text4,class=CODE,space=0,reloc=2,group=1
  5916                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
  5917                           	line	15
  5918                           global __ptext4
  5919                           __ptext4:
  5920  00563C                     psect	text4
  5921                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
  5922                           	line	15
  5923                           	global	__size_of___flneg
  5924                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  5925  0000                     	
  5926                           ___flneg:
  5927  00563C                     ;incstack = 0
  5928                           	opt	stack 27
  5929                           	line	17
  5930                           	
  5931                           l4005:
  5932  00563C                     	movf	((c:___flneg@f1)),c,w
  5933  00563C  5001               iorwf	((c:___flneg@f1+1)),c,w
  5934  00563E  1002               iorwf	((c:___flneg@f1+2)),c,w
  5935  005640  1003               iorwf	((c:___flneg@f1+3)),c,w
  5936  005642  1004               	btfsc	status,2
  5937  005644  B4D8               	goto	u4981
  5938  005646  EF27  F02B         	goto	u4980
  5939  00564A  EF29  F02B         
  5940                           u4981:
  5941  00564E                     	goto	l4009
  5942  00564E  EF33  F02B         u4980:
  5943  005652                     	line	18
  5944                           	
  5945                           l4007:
  5946  005652                     	movlw	0
  5947  005652  0E00               	xorwf	((c:___flneg@f1)),c
  5948  005654  1A01               	movlw	0
  5949  005656  0E00               	xorwf	((c:___flneg@f1+1)),c
  5950  005658  1A02               	movlw	0
  5951  00565A  0E00               	xorwf	((c:___flneg@f1+2)),c
  5952  00565C  1A03               	movlw	080h
  5953  00565E  0E80               	xorwf	((c:___flneg@f1+3)),c
  5954  005660  1A04               	goto	l4009
  5955  005662  EF33  F02B         	
  5956                           l733:
  5957  005666                     	line	19
  5958                           	
  5959                           l4009:
  5960  005666                     	movff	(c:___flneg@f1),(c:?___flneg)
  5961  005666  C001  F001         	movff	(c:___flneg@f1+1),(c:?___flneg+1)
  5962  00566A  C002  F002         	movff	(c:___flneg@f1+2),(c:?___flneg+2)
  5963  00566E  C003  F003         	movff	(c:___flneg@f1+3),(c:?___flneg+3)
  5964  005672  C004  F004         	goto	l734
  5965  005676  EF3D  F02B         	
  5966                           l4011:
  5967  00567A                     	line	20
  5968                           	
  5969                           l734:
  5970  00567A                     	return	;funcret
  5971  00567A  0012               	opt stack 0
  5972                           GLOBAL	__end_of___flneg
  5973                           	__end_of___flneg:
  5974  00567C                     	signat	___flneg,4220
  5975                           	global	___flge
  5976                           
  5977 ;; *************** function ___flge *****************
  5978 ;; Defined at:
  5979 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  ff1             4    0[COMRAM] float 
  5982 ;;  ff2             4    4[COMRAM] float 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;		None               void
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5994 ;;      Params:         8       0       0       0       0       0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5996 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5997 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5998 ;;Total ram usage:       12 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_roundf
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           psect	text5,class=CODE,space=0,reloc=2,group=1
  6007                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
  6008                           	line	4
  6009                           global __ptext5
  6010                           __ptext5:
  6011  004242                     psect	text5
  6012                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
  6013                           	line	4
  6014                           	global	__size_of___flge
  6015                           	__size_of___flge	equ	__end_of___flge-___flge
  6016  0000                     	
  6017                           ___flge:
  6018  004242                     ;incstack = 0
  6019                           	opt	stack 27
  6020                           	line	7
  6021                           	
  6022                           l3983:
  6023  004242                     	movlw	0
  6024  004242  0E00               	andwf	((c:___flge@ff1)),c,w
  6025  004244  1401               	movwf	(??___flge+0+0)&0ffh,c
  6026  004246  6E09               	movlw	0
  6027  004248  0E00               	andwf	((c:___flge@ff1+1)),c,w
  6028  00424A  1402               	movwf	1+(??___flge+0+0)&0ffh,c
  6029  00424C  6E0A               	
  6030                           	movlw	080h
  6031  00424E  0E80               	andwf	((c:___flge@ff1+2)),c,w
  6032  004250  1403               	movwf	2+(??___flge+0+0)&0ffh,c
  6033  004252  6E0B               	
  6034                           	movlw	07Fh
  6035  004254  0E7F               	andwf	((c:___flge@ff1+3)),c,w
  6036  004256  1404               	movwf	3+(??___flge+0+0)&0ffh,c
  6037  004258  6E0C               	movf	(??___flge+0+0),c,w
  6038  00425A  5009               iorwf	(??___flge+0+1),c,w
  6039  00425C  100A               iorwf	(??___flge+0+2),c,w
  6040  00425E  100B               iorwf	(??___flge+0+3),c,w
  6041  004260  100C               	btfss	status,2
  6042  004262  A4D8               	goto	u4931
  6043  004264  EF36  F021         	goto	u4930
  6044  004268  EF38  F021         
  6045                           u4931:
  6046  00426C                     	goto	l3987
  6047  00426C  EF42  F021         u4930:
  6048  004270                     	line	8
  6049                           	
  6050                           l3985:
  6051  004270                     	movlw	low(0)
  6052  004270  0E00               	movwf	((c:___flge@ff1)),c
  6053  004272  6E01               	movlw	high(0)
  6054  004274  0E00               	movwf	((c:___flge@ff1+1)),c
  6055  004276  6E02               	movlw	low highword(0)
  6056  004278  0E00               	movwf	((c:___flge@ff1+2)),c
  6057  00427A  6E03               	movlw	high highword(0)
  6058  00427C  0E00               	movwf	((c:___flge@ff1+3)),c
  6059  00427E  6E04               	goto	l3987
  6060  004280  EF42  F021         	
  6061                           l722:
  6062  004284                     	line	9
  6063                           	
  6064                           l3987:
  6065  004284                     	movlw	0
  6066  004284  0E00               	andwf	((c:___flge@ff2)),c,w
  6067  004286  1405               	movwf	(??___flge+0+0)&0ffh,c
  6068  004288  6E09               	movlw	0
  6069  00428A  0E00               	andwf	((c:___flge@ff2+1)),c,w
  6070  00428C  1406               	movwf	1+(??___flge+0+0)&0ffh,c
  6071  00428E  6E0A               	
  6072                           	movlw	080h
  6073  004290  0E80               	andwf	((c:___flge@ff2+2)),c,w
  6074  004292  1407               	movwf	2+(??___flge+0+0)&0ffh,c
  6075  004294  6E0B               	
  6076                           	movlw	07Fh
  6077  004296  0E7F               	andwf	((c:___flge@ff2+3)),c,w
  6078  004298  1408               	movwf	3+(??___flge+0+0)&0ffh,c
  6079  00429A  6E0C               	movf	(??___flge+0+0),c,w
  6080  00429C  5009               iorwf	(??___flge+0+1),c,w
  6081  00429E  100A               iorwf	(??___flge+0+2),c,w
  6082  0042A0  100B               iorwf	(??___flge+0+3),c,w
  6083  0042A2  100C               	btfss	status,2
  6084  0042A4  A4D8               	goto	u4941
  6085  0042A6  EF57  F021         	goto	u4940
  6086  0042AA  EF59  F021         
  6087                           u4941:
  6088  0042AE                     	goto	l3991
  6089  0042AE  EF63  F021         u4940:
  6090  0042B2                     	line	10
  6091                           	
  6092                           l3989:
  6093  0042B2                     	movlw	low(0)
  6094  0042B2  0E00               	movwf	((c:___flge@ff2)),c
  6095  0042B4  6E05               	movlw	high(0)
  6096  0042B6  0E00               	movwf	((c:___flge@ff2+1)),c
  6097  0042B8  6E06               	movlw	low highword(0)
  6098  0042BA  0E00               	movwf	((c:___flge@ff2+2)),c
  6099  0042BC  6E07               	movlw	high highword(0)
  6100  0042BE  0E00               	movwf	((c:___flge@ff2+3)),c
  6101  0042C0  6E08               	goto	l3991
  6102  0042C2  EF63  F021         	
  6103                           l723:
  6104  0042C6                     	line	12
  6105                           	
  6106                           l3991:
  6107  0042C6                     	
  6108                           	btfss	((c:___flge@ff1+3)),c,(31)&7
  6109  0042C6  AE04               	goto	u4951
  6110  0042C8  EF68  F021         	goto	u4950
  6111  0042CC  EF6A  F021         u4951:
  6112  0042D0                     	goto	l3995
  6113  0042D0  EF89  F021         u4950:
  6114  0042D4                     	line	13
  6115                           	
  6116                           l3993:
  6117  0042D4                     	movff	(c:___flge@ff1),??___flge+0+0
  6118  0042D4  C001  F009         	movff	(c:___flge@ff1+1),??___flge+0+0+1
  6119  0042D8  C002  F00A         	movff	(c:___flge@ff1+2),??___flge+0+0+2
  6120  0042DC  C003  F00B         	movff	(c:___flge@ff1+3),??___flge+0+0+3
  6121  0042E0  C004  F00C         	comf	(??___flge+0+0),c
  6122  0042E4  1E09               	comf	(??___flge+0+1),c
  6123  0042E6  1E0A               	comf	(??___flge+0+2),c
  6124  0042E8  1E0B               	comf	(??___flge+0+3),c
  6125  0042EA  1E0C               	incf	(??___flge+0+0),c
  6126  0042EC  2A09               	movlw	0
  6127  0042EE  0E00               	addwfc	(??___flge+0+1),c
  6128  0042F0  220A               	addwfc	(??___flge+0+2),c
  6129  0042F2  220B               	addwfc	(??___flge+0+3),c
  6130  0042F4  220C               	movlw	0
  6131  0042F6  0E00               	addwf	(??___flge+0+0),c,w
  6132  0042F8  2409               	movwf	((c:___flge@ff1)),c
  6133  0042FA  6E01               	movlw	0
  6134  0042FC  0E00               	addwfc	(??___flge+0+1),c,w
  6135  0042FE  200A               	movwf	1+((c:___flge@ff1)),c
  6136  004300  6E02               	
  6137                           	movlw	0
  6138  004302  0E00               	addwfc	(??___flge+0+2),c,w
  6139  004304  200B               	movwf	2+((c:___flge@ff1)),c
  6140  004306  6E03               	
  6141                           	movlw	080h
  6142  004308  0E80               	addwfc	(??___flge+0+3),c,w
  6143  00430A  200C               	movwf	3+((c:___flge@ff1)),c
  6144  00430C  6E04               	goto	l3995
  6145  00430E  EF89  F021         	
  6146                           l724:
  6147  004312                     	line	14
  6148                           	
  6149                           l3995:
  6150  004312                     	
  6151                           	btfss	((c:___flge@ff2+3)),c,(31)&7
  6152  004312  AE08               	goto	u4961
  6153  004314  EF8E  F021         	goto	u4960
  6154  004318  EF90  F021         u4961:
  6155  00431C                     	goto	l725
  6156  00431C  EFAD  F021         u4960:
  6157  004320                     	line	15
  6158                           	
  6159                           l3997:
  6160  004320                     	movff	(c:___flge@ff2),??___flge+0+0
  6161  004320  C005  F009         	movff	(c:___flge@ff2+1),??___flge+0+0+1
  6162  004324  C006  F00A         	movff	(c:___flge@ff2+2),??___flge+0+0+2
  6163  004328  C007  F00B         	movff	(c:___flge@ff2+3),??___flge+0+0+3
  6164  00432C  C008  F00C         	comf	(??___flge+0+0),c
  6165  004330  1E09               	comf	(??___flge+0+1),c
  6166  004332  1E0A               	comf	(??___flge+0+2),c
  6167  004334  1E0B               	comf	(??___flge+0+3),c
  6168  004336  1E0C               	incf	(??___flge+0+0),c
  6169  004338  2A09               	movlw	0
  6170  00433A  0E00               	addwfc	(??___flge+0+1),c
  6171  00433C  220A               	addwfc	(??___flge+0+2),c
  6172  00433E  220B               	addwfc	(??___flge+0+3),c
  6173  004340  220C               	movlw	0
  6174  004342  0E00               	addwf	(??___flge+0+0),c,w
  6175  004344  2409               	movwf	((c:___flge@ff2)),c
  6176  004346  6E05               	movlw	0
  6177  004348  0E00               	addwfc	(??___flge+0+1),c,w
  6178  00434A  200A               	movwf	1+((c:___flge@ff2)),c
  6179  00434C  6E06               	
  6180                           	movlw	0
  6181  00434E  0E00               	addwfc	(??___flge+0+2),c,w
  6182  004350  200B               	movwf	2+((c:___flge@ff2)),c
  6183  004352  6E07               	
  6184                           	movlw	080h
  6185  004354  0E80               	addwfc	(??___flge+0+3),c,w
  6186  004356  200C               	movwf	3+((c:___flge@ff2)),c
  6187  004358  6E08               	
  6188                           l725:
  6189  00435A                     	line	16
  6190                           	movlw	0
  6191  00435A  0E00               	xorwf	((c:___flge@ff1)),c
  6192  00435C  1A01               	movlw	0
  6193  00435E  0E00               	xorwf	((c:___flge@ff1+1)),c
  6194  004360  1A02               	movlw	0
  6195  004362  0E00               	xorwf	((c:___flge@ff1+2)),c
  6196  004364  1A03               	movlw	080h
  6197  004366  0E80               	xorwf	((c:___flge@ff1+3)),c
  6198  004368  1A04               	line	17
  6199                           	movlw	0
  6200  00436A  0E00               	xorwf	((c:___flge@ff2)),c
  6201  00436C  1A05               	movlw	0
  6202  00436E  0E00               	xorwf	((c:___flge@ff2+1)),c
  6203  004370  1A06               	movlw	0
  6204  004372  0E00               	xorwf	((c:___flge@ff2+2)),c
  6205  004374  1A07               	movlw	080h
  6206  004376  0E80               	xorwf	((c:___flge@ff2+3)),c
  6207  004378  1A08               	line	18
  6208                           		movf	((c:___flge@ff2)),c,w
  6209  00437A  5005               	subwf	((c:___flge@ff1)),c,w
  6210  00437C  5C01               	movf	((c:___flge@ff2+1)),c,w
  6211  00437E  5006               	subwfb	((c:___flge@ff1+1)),c,w
  6212  004380  5802               	movf	((c:___flge@ff2+2)),c,w
  6213  004382  5007               	subwfb	((c:___flge@ff1+2)),c,w
  6214  004384  5803               	movf	((c:___flge@ff2+3)),c,w
  6215  004386  5008               	subwfb	((c:___flge@ff1+3)),c,w
  6216  004388  5804               	btfsc	status,0
  6217  00438A  B0D8               	goto	u4971
  6218  00438C  EFCA  F021         	goto	u4970
  6219  004390  EFCC  F021         
  6220                           u4971:
  6221  004394                     	goto	l4001
  6222  004394  EFCF  F021         u4970:
  6223  004398                     	
  6224                           l3999:
  6225  004398                     	bcf	status,0
  6226  004398  90D8               	goto	l730
  6227  00439A  EFD4  F021         	
  6228                           l727:
  6229  00439E                     	
  6230                           l4001:
  6231  00439E                     	bsf	status,0
  6232  00439E  80D8               	goto	l730
  6233  0043A0  EFD4  F021         	
  6234                           l729:
  6235  0043A4                     	goto	l730
  6236  0043A4  EFD4  F021         	
  6237                           l4003:
  6238  0043A8                     	line	19
  6239                           	
  6240                           l730:
  6241  0043A8                     	return	;funcret
  6242  0043A8  0012               	opt stack 0
  6243                           GLOBAL	__end_of___flge
  6244                           	__end_of___flge:
  6245  0043AA                     	signat	___flge,8312
  6246                           	global	_lcd_arrosage
  6247                           
  6248 ;; *************** function _lcd_arrosage *****************
  6249 ;; Defined at:
  6250 ;;		line 90 in file "./servomoteur.h"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  angle           4   10[BANK0 ] float 
  6253 ;;  time            2   14[BANK0 ] int 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  data           16   16[BANK0 ] unsigned char [16]
  6256 ;;  time2           2   32[BANK0 ] unsigned char [2]
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  1    wreg      void 
  6259 ;; Registers used:
  6260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6266 ;;      Params:         0       6       0       0       0       0       0       0       0
  6267 ;;      Locals:         0      18       0       0       0       0       0       0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6269 ;;      Totals:         0      24       0       0       0       0       0       0       0
  6270 ;;Total ram usage:       24 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; Hardware stack levels required when called:    8
  6273 ;; This function calls:
  6274 ;;		_LCD_String_xy
  6275 ;;		___awdiv
  6276 ;;		___fleq
  6277 ;;		_sprintf
  6278 ;;		_strcat
  6279 ;; This function is called by:
  6280 ;;		_stream
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           psect	text6,class=CODE,space=0,reloc=2,group=0
  6284                           	file	"./servomoteur.h"
  6285                           	line	90
  6286                           global __ptext6
  6287                           __ptext6:
  6288  0044FC                     psect	text6
  6289                           	file	"./servomoteur.h"
  6290                           	line	90
  6291                           	global	__size_of_lcd_arrosage
  6292                           	__size_of_lcd_arrosage	equ	__end_of_lcd_arrosage-_lcd_arrosage
  6293  0000                     	
  6294                           _lcd_arrosage:
  6295  0044FC                     ;incstack = 0
  6296                           	opt	stack 21
  6297                           	line	92
  6298                           	
  6299                           l4379:
  6300  0044FC                     ;./servomoteur.h: 90: void lcd_arrosage(float angle, int time);./servomoteur.h: 91: {;./
                                 servomoteur.h: 92:     char data[16]="Ag:";
  6301                           	lfsr	2,(lcd_arrosage@F4173)
  6302  0044FC  EE20  F0CC         	lfsr	1,(lcd_arrosage@data)
  6303  004500  EE10  F070         	movlw	16-1
  6304  004504  0E0F               u5591:
  6305  004506                     	movff	plusw2,plusw1
  6306  004506  CFDB FFE3          	decf	wreg
  6307  00450A  06E8               	bc	u5591
  6308  00450C  E2FC               
  6309                           	line	93
  6310                           	
  6311                           l4381:
  6312  00450E                     ;./servomoteur.h: 93:     if(angle==7.6)strcat(data,"90");
  6313                           	movff	(lcd_arrosage@angle),(c:___fleq@ff1)
  6314  00450E  C06A  F001         	movff	(lcd_arrosage@angle+1),(c:___fleq@ff1+1)
  6315  004512  C06B  F002         	movff	(lcd_arrosage@angle+2),(c:___fleq@ff1+2)
  6316  004516  C06C  F003         	movff	(lcd_arrosage@angle+3),(c:___fleq@ff1+3)
  6317  00451A  C06D  F004         	movlw	low(normalize32(0x40f33333))
  6318  00451E  0E33               	movwf	((c:___fleq@ff2)),c
  6319  004520  6E05               	movlw	high(normalize32(0x40f33333))
  6320  004522  0E33               	movwf	((c:___fleq@ff2+1)),c
  6321  004524  6E06               	movlw	low highword(normalize32(0x40f33333))
  6322  004526  0EF3               	movwf	((c:___fleq@ff2+2)),c
  6323  004528  6E07               	movlw	high highword(normalize32(0x40f33333))
  6324  00452A  0E40               	movwf	((c:___fleq@ff2+3)),c
  6325  00452C  6E08               	call	___fleq	;wreg free
  6326  00452E  EC98  F026         	btfss	status,0
  6327  004532  A0D8               	goto	u5601
  6328  004534  EF9E  F022         	goto	u5600
  6329  004538  EFA0  F022         u5601:
  6330  00453C                     	goto	l4385
  6331  00453C  EFAC  F022         u5600:
  6332  004540                     	
  6333                           l4383:
  6334  004540                     		movlw	low(lcd_arrosage@data)
  6335  004540  0E70               	movwf	((c:strcat@dest)),c
  6336  004542  6E11               	movlw	high(lcd_arrosage@data)
  6337  004544  0E00               	movwf	((c:strcat@dest+1)),c
  6338  004546  6E12               
  6339                           		movlw	low(STR_1)
  6340  004548  0EBA               	movwf	((c:strcat@src)),c
  6341  00454A  6E13               	movlw	high(STR_1)
  6342  00454C  0E08               	movwf	((c:strcat@src+1)),c
  6343  00454E  6E14               
  6344                           	call	_strcat	;wreg free
  6345  004550  EC89  F02B         	goto	l152
  6346  004554  EFD1  F022         	line	94
  6347                           ;./servomoteur.h: 94:     else if(angle==12.0)strcat(data,"180");
  6348                           	
  6349                           l151:
  6350  004558                     	
  6351                           l4385:
  6352  004558                     	movff	(lcd_arrosage@angle),(c:___fleq@ff1)
  6353  004558  C06A  F001         	movff	(lcd_arrosage@angle+1),(c:___fleq@ff1+1)
  6354  00455C  C06B  F002         	movff	(lcd_arrosage@angle+2),(c:___fleq@ff1+2)
  6355  004560  C06C  F003         	movff	(lcd_arrosage@angle+3),(c:___fleq@ff1+3)
  6356  004564  C06D  F004         	movlw	low(normalize32(0x41400000))
  6357  004568  0E00               	movwf	((c:___fleq@ff2)),c
  6358  00456A  6E05               	movlw	high(normalize32(0x41400000))
  6359  00456C  0E00               	movwf	((c:___fleq@ff2+1)),c
  6360  00456E  6E06               	movlw	low highword(normalize32(0x41400000))
  6361  004570  0E40               	movwf	((c:___fleq@ff2+2)),c
  6362  004572  6E07               	movlw	high highword(normalize32(0x41400000))
  6363  004574  0E41               	movwf	((c:___fleq@ff2+3)),c
  6364  004576  6E08               	call	___fleq	;wreg free
  6365  004578  EC98  F026         	btfss	status,0
  6366  00457C  A0D8               	goto	u5611
  6367  00457E  EFC3  F022         	goto	u5610
  6368  004582  EFC5  F022         u5611:
  6369  004586                     	goto	l152
  6370  004586  EFD1  F022         u5610:
  6371  00458A                     	
  6372                           l4387:
  6373  00458A                     		movlw	low(lcd_arrosage@data)
  6374  00458A  0E70               	movwf	((c:strcat@dest)),c
  6375  00458C  6E11               	movlw	high(lcd_arrosage@data)
  6376  00458E  0E00               	movwf	((c:strcat@dest+1)),c
  6377  004590  6E12               
  6378                           		movlw	low(STR_2)
  6379  004592  0EB6               	movwf	((c:strcat@src)),c
  6380  004594  6E13               	movlw	high(STR_2)
  6381  004596  0E08               	movwf	((c:strcat@src+1)),c
  6382  004598  6E14               
  6383                           	call	_strcat	;wreg free
  6384  00459A  EC89  F02B         	goto	l152
  6385  00459E  EFD1  F022         	
  6386                           l153:
  6387  0045A2                     	
  6388                           l152:
  6389  0045A2                     	line	95
  6390                           ;./servomoteur.h: 95:     strcat(data," Time:");
  6391                           		movlw	low(lcd_arrosage@data)
  6392  0045A2  0E70               	movwf	((c:strcat@dest)),c
  6393  0045A4  6E11               	movlw	high(lcd_arrosage@data)
  6394  0045A6  0E00               	movwf	((c:strcat@dest+1)),c
  6395  0045A8  6E12               
  6396                           		movlw	low(STR_3)
  6397  0045AA  0EAF               	movwf	((c:strcat@src)),c
  6398  0045AC  6E13               	movlw	high(STR_3)
  6399  0045AE  0E08               	movwf	((c:strcat@src+1)),c
  6400  0045B0  6E14               
  6401                           	call	_strcat	;wreg free
  6402  0045B2  EC89  F02B         	line	97
  6403                           ;./servomoteur.h: 96:     char time2[2];;./servomoteur.h: 97:     sprintf(time2,"%d",tim
                                 e/1000);
  6404                           		movlw	low(lcd_arrosage@time2)
  6405  0045B6  0E80               	movwf	((c:sprintf@s)),c
  6406  0045B8  6E58               	movlw	high(lcd_arrosage@time2)
  6407  0045BA  0E00               	movwf	((c:sprintf@s+1)),c
  6408  0045BC  6E59               
  6409                           		movlw	low(STR_4)
  6410  0045BE  0EBD               	movwf	((c:sprintf@fmt)),c
  6411  0045C0  6E5A               	movlw	high(STR_4)
  6412  0045C2  0E08               	movwf	((c:sprintf@fmt+1)),c
  6413  0045C4  6E5B               
  6414                           	movff	(lcd_arrosage@time),(c:___awdiv@dividend)
  6415  0045C6  C06E  F001         	movff	(lcd_arrosage@time+1),(c:___awdiv@dividend+1)
  6416  0045CA  C06F  F002         	movlw	high(03E8h)
  6417  0045CE  0E03               	movwf	((c:___awdiv@divisor+1)),c
  6418  0045D0  6E04               	movlw	low(03E8h)
  6419  0045D2  0EE8               	movwf	((c:___awdiv@divisor)),c
  6420  0045D4  6E03               	call	___awdiv	;wreg free
  6421  0045D6  EC15  F024         	movff	0+?___awdiv,0+((c:?_sprintf)+04h)
  6422  0045DA  C001  F05C         	movff	1+?___awdiv,1+((c:?_sprintf)+04h)
  6423  0045DE  C002  F05D         	call	_sprintf	;wreg free
  6424  0045E2  EC0C  F029         	line	98
  6425                           ;./servomoteur.h: 98:     strcat(data,time2);
  6426                           		movlw	low(lcd_arrosage@data)
  6427  0045E6  0E70               	movwf	((c:strcat@dest)),c
  6428  0045E8  6E11               	movlw	high(lcd_arrosage@data)
  6429  0045EA  0E00               	movwf	((c:strcat@dest+1)),c
  6430  0045EC  6E12               
  6431                           		movlw	low(lcd_arrosage@time2)
  6432  0045EE  0E80               	movwf	((c:strcat@src)),c
  6433  0045F0  6E13               	movlw	high(lcd_arrosage@time2)
  6434  0045F2  0E00               	movwf	((c:strcat@src+1)),c
  6435  0045F4  6E14               
  6436                           	call	_strcat	;wreg free
  6437  0045F6  EC89  F02B         	line	99
  6438                           ;./servomoteur.h: 99:     strcat(data,"s");
  6439                           		movlw	low(lcd_arrosage@data)
  6440  0045FA  0E70               	movwf	((c:strcat@dest)),c
  6441  0045FC  6E11               	movlw	high(lcd_arrosage@data)
  6442  0045FE  0E00               	movwf	((c:strcat@dest+1)),c
  6443  004600  6E12               
  6444                           		movlw	low(STR_5)
  6445  004602  0E7C               	movwf	((c:strcat@src)),c
  6446  004604  6E13               	movlw	high(STR_5)
  6447  004606  0E08               	movwf	((c:strcat@src+1)),c
  6448  004608  6E14               
  6449                           	call	_strcat	;wreg free
  6450  00460A  EC89  F02B         	line	100
  6451                           	
  6452                           l4389:
  6453  00460E                     ;./servomoteur.h: 100:     LCD_String_xy(1,1,"    Arrosage");
  6454                           	movlw	low(01h)
  6455  00460E  0E01               	movwf	((c:LCD_String_xy@pos)),c
  6456  004610  6E0B               		movlw	low(STR_6)
  6457  004612  0E57               	movwf	((c:LCD_String_xy@msg)),c
  6458  004614  6E0C               	movlw	high(STR_6)
  6459  004616  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
  6460  004618  6E0D               
  6461                           	movlw	(01h)&0ffh
  6462  00461A  0E01               	
  6463                           	call	_LCD_String_xy
  6464  00461C  ECB7  F02A         	line	101
  6465                           	
  6466                           l4391:
  6467  004620                     ;./servomoteur.h: 101:     LCD_String_xy(2,1,data);
  6468                           	movlw	low(01h)
  6469  004620  0E01               	movwf	((c:LCD_String_xy@pos)),c
  6470  004622  6E0B               		movlw	low(lcd_arrosage@data)
  6471  004624  0E70               	movwf	((c:LCD_String_xy@msg)),c
  6472  004626  6E0C               	movlw	high(lcd_arrosage@data)
  6473  004628  0E00               	movwf	((c:LCD_String_xy@msg+1)),c
  6474  00462A  6E0D               
  6475                           	movlw	(02h)&0ffh
  6476  00462C  0E02               	
  6477                           	call	_LCD_String_xy
  6478  00462E  ECB7  F02A         	line	102
  6479                           	
  6480                           l154:
  6481  004632                     	return	;funcret
  6482  004632  0012               	opt stack 0
  6483                           GLOBAL	__end_of_lcd_arrosage
  6484                           	__end_of_lcd_arrosage:
  6485  004634                     	signat	_lcd_arrosage,8313
  6486                           	global	___fleq
  6487                           
  6488 ;; *************** function ___fleq *****************
  6489 ;; Defined at:
  6490 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  ff1             4    0[COMRAM] void 
  6493 ;;  ff2             4    4[COMRAM] void 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;		None               void
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6505 ;;      Params:         8       0       0       0       0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6507 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6508 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6509 ;;Total ram usage:       12 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_lcd_arrosage
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           psect	text7,class=CODE,space=0,reloc=2,group=1
  6518                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
  6519                           	line	4
  6520                           global __ptext7
  6521                           __ptext7:
  6522  004D30                     psect	text7
  6523                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
  6524                           	line	4
  6525                           	global	__size_of___fleq
  6526                           	__size_of___fleq	equ	__end_of___fleq-___fleq
  6527  0000                     	
  6528                           ___fleq:
  6529  004D30                     ;incstack = 0
  6530                           	opt	stack 28
  6531                           	line	7
  6532                           	
  6533                           l4247:
  6534  004D30                     	movlw	0
  6535  004D30  0E00               	andwf	((c:___fleq@ff1)),c,w
  6536  004D32  1401               	movwf	(??___fleq+0+0)&0ffh,c
  6537  004D34  6E09               	movlw	0
  6538  004D36  0E00               	andwf	((c:___fleq@ff1+1)),c,w
  6539  004D38  1402               	movwf	1+(??___fleq+0+0)&0ffh,c
  6540  004D3A  6E0A               	
  6541                           	movlw	080h
  6542  004D3C  0E80               	andwf	((c:___fleq@ff1+2)),c,w
  6543  004D3E  1403               	movwf	2+(??___fleq+0+0)&0ffh,c
  6544  004D40  6E0B               	
  6545                           	movlw	07Fh
  6546  004D42  0E7F               	andwf	((c:___fleq@ff1+3)),c,w
  6547  004D44  1404               	movwf	3+(??___fleq+0+0)&0ffh,c
  6548  004D46  6E0C               	movf	(??___fleq+0+0),c,w
  6549  004D48  5009               iorwf	(??___fleq+0+1),c,w
  6550  004D4A  100A               iorwf	(??___fleq+0+2),c,w
  6551  004D4C  100B               iorwf	(??___fleq+0+3),c,w
  6552  004D4E  100C               	btfss	status,2
  6553  004D50  A4D8               	goto	u5371
  6554  004D52  EFAD  F026         	goto	u5370
  6555  004D56  EFAF  F026         
  6556                           u5371:
  6557  004D5A                     	goto	l4251
  6558  004D5A  EFB9  F026         u5370:
  6559  004D5E                     	line	8
  6560                           	
  6561                           l4249:
  6562  004D5E                     	movlw	low(0)
  6563  004D5E  0E00               	movwf	((c:___fleq@ff1)),c
  6564  004D60  6E01               	movlw	high(0)
  6565  004D62  0E00               	movwf	((c:___fleq@ff1+1)),c
  6566  004D64  6E02               	movlw	low highword(0)
  6567  004D66  0E00               	movwf	((c:___fleq@ff1+2)),c
  6568  004D68  6E03               	movlw	high highword(0)
  6569  004D6A  0E00               	movwf	((c:___fleq@ff1+3)),c
  6570  004D6C  6E04               	goto	l4251
  6571  004D6E  EFB9  F026         	
  6572                           l713:
  6573  004D72                     	line	9
  6574                           	
  6575                           l4251:
  6576  004D72                     	movlw	0
  6577  004D72  0E00               	andwf	((c:___fleq@ff2)),c,w
  6578  004D74  1405               	movwf	(??___fleq+0+0)&0ffh,c
  6579  004D76  6E09               	movlw	0
  6580  004D78  0E00               	andwf	((c:___fleq@ff2+1)),c,w
  6581  004D7A  1406               	movwf	1+(??___fleq+0+0)&0ffh,c
  6582  004D7C  6E0A               	
  6583                           	movlw	080h
  6584  004D7E  0E80               	andwf	((c:___fleq@ff2+2)),c,w
  6585  004D80  1407               	movwf	2+(??___fleq+0+0)&0ffh,c
  6586  004D82  6E0B               	
  6587                           	movlw	07Fh
  6588  004D84  0E7F               	andwf	((c:___fleq@ff2+3)),c,w
  6589  004D86  1408               	movwf	3+(??___fleq+0+0)&0ffh,c
  6590  004D88  6E0C               	movf	(??___fleq+0+0),c,w
  6591  004D8A  5009               iorwf	(??___fleq+0+1),c,w
  6592  004D8C  100A               iorwf	(??___fleq+0+2),c,w
  6593  004D8E  100B               iorwf	(??___fleq+0+3),c,w
  6594  004D90  100C               	btfss	status,2
  6595  004D92  A4D8               	goto	u5381
  6596  004D94  EFCE  F026         	goto	u5380
  6597  004D98  EFD0  F026         
  6598                           u5381:
  6599  004D9C                     	goto	l4255
  6600  004D9C  EFDA  F026         u5380:
  6601  004DA0                     	line	10
  6602                           	
  6603                           l4253:
  6604  004DA0                     	movlw	low(0)
  6605  004DA0  0E00               	movwf	((c:___fleq@ff2)),c
  6606  004DA2  6E05               	movlw	high(0)
  6607  004DA4  0E00               	movwf	((c:___fleq@ff2+1)),c
  6608  004DA6  6E06               	movlw	low highword(0)
  6609  004DA8  0E00               	movwf	((c:___fleq@ff2+2)),c
  6610  004DAA  6E07               	movlw	high highword(0)
  6611  004DAC  0E00               	movwf	((c:___fleq@ff2+3)),c
  6612  004DAE  6E08               	goto	l4255
  6613  004DB0  EFDA  F026         	
  6614                           l714:
  6615  004DB4                     	line	11
  6616                           	
  6617                           l4255:
  6618  004DB4                     	movf	((c:___fleq@ff2)),c,w
  6619  004DB4  5005               xorwf	((c:___fleq@ff1)),c,w
  6620  004DB6  1801               	bnz	u5390
  6621  004DB8  E10F               movf	((c:___fleq@ff2+1)),c,w
  6622  004DBA  5006               xorwf	((c:___fleq@ff1+1)),c,w
  6623  004DBC  1802               	bnz	u5390
  6624  004DBE  E10C               movf	((c:___fleq@ff2+2)),c,w
  6625  004DC0  5007               xorwf	((c:___fleq@ff1+2)),c,w
  6626  004DC2  1803               	bnz	u5390
  6627  004DC4  E109               movf	((c:___fleq@ff2+3)),c,w
  6628  004DC6  5008               xorwf	((c:___fleq@ff1+3)),c,w
  6629  004DC8  1804               	btfsc	status,2
  6630  004DCA  B4D8               	goto	u5391
  6631  004DCC  EFEA  F026         	goto	u5390
  6632  004DD0  EFEC  F026         
  6633                           u5391:
  6634  004DD4                     	goto	l4259
  6635  004DD4  EFEF  F026         u5390:
  6636  004DD8                     	
  6637                           l4257:
  6638  004DD8                     	bcf	status,0
  6639  004DD8  90D8               	goto	l719
  6640  004DDA  EFF4  F026         	
  6641                           l716:
  6642  004DDE                     	
  6643                           l4259:
  6644  004DDE                     	bsf	status,0
  6645  004DDE  80D8               	goto	l719
  6646  004DE0  EFF4  F026         	
  6647                           l718:
  6648  004DE4                     	goto	l719
  6649  004DE4  EFF4  F026         	
  6650                           l4261:
  6651  004DE8                     	line	12
  6652                           	
  6653                           l719:
  6654  004DE8                     	return	;funcret
  6655  004DE8  0012               	opt stack 0
  6656                           GLOBAL	__end_of___fleq
  6657                           	__end_of___fleq:
  6658  004DEA                     	signat	___fleq,8312
  6659                           	global	___awdiv
  6660                           
  6661 ;; *************** function ___awdiv *****************
  6662 ;; Defined at:
  6663 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  dividend        2    0[COMRAM] int 
  6666 ;;  divisor         2    2[COMRAM] int 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  quotient        2    6[COMRAM] int 
  6669 ;;  sign            1    5[COMRAM] unsigned char 
  6670 ;;  counter         1    4[COMRAM] unsigned char 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  2    0[COMRAM] int 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2, status,0
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6680 ;;      Params:         4       0       0       0       0       0       0       0       0
  6681 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6683 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6684 ;;Total ram usage:        8 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; This function calls:
  6687 ;;		Nothing
  6688 ;; This function is called by:
  6689 ;;		_lcd_arrosage
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           psect	text8,class=CODE,space=0,reloc=2,group=1
  6693                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  6694                           	line	7
  6695                           global __ptext8
  6696                           __ptext8:
  6697  00482A                     psect	text8
  6698                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  6699                           	line	7
  6700                           	global	__size_of___awdiv
  6701                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  6702  0000                     	
  6703                           ___awdiv:
  6704  00482A                     ;incstack = 0
  6705                           	opt	stack 28
  6706                           	line	13
  6707                           	
  6708                           l4203:
  6709  00482A                     	movlw	low(0)
  6710  00482A  0E00               	movwf	((c:___awdiv@sign)),c
  6711  00482C  6E06               	line	14
  6712                           	
  6713                           l4205:
  6714  00482E                     	btfsc	((c:___awdiv@divisor+1)),c,7
  6715  00482E  BE04               	goto	u5310
  6716  004830  EF1E  F024         	goto	u5311
  6717  004834  EF1C  F024         
  6718                           u5311:
  6719  004838                     	goto	l4211
  6720  004838  EF26  F024         u5310:
  6721  00483C                     	line	15
  6722                           	
  6723                           l4207:
  6724  00483C                     	negf	((c:___awdiv@divisor)),c
  6725  00483C  6C03               	comf	((c:___awdiv@divisor+1)),c
  6726  00483E  1E04               	btfsc	status,0
  6727  004840  B0D8               	incf	((c:___awdiv@divisor+1)),c
  6728  004842  2A04               	line	16
  6729                           	
  6730                           l4209:
  6731  004844                     	movlw	low(01h)
  6732  004844  0E01               	movwf	((c:___awdiv@sign)),c
  6733  004846  6E06               	goto	l4211
  6734  004848  EF26  F024         	line	17
  6735                           	
  6736                           l681:
  6737  00484C                     	line	18
  6738                           	
  6739                           l4211:
  6740  00484C                     	btfsc	((c:___awdiv@dividend+1)),c,7
  6741  00484C  BE02               	goto	u5320
  6742  00484E  EF2D  F024         	goto	u5321
  6743  004852  EF2B  F024         
  6744                           u5321:
  6745  004856                     	goto	l4217
  6746  004856  EF35  F024         u5320:
  6747  00485A                     	line	19
  6748                           	
  6749                           l4213:
  6750  00485A                     	negf	((c:___awdiv@dividend)),c
  6751  00485A  6C01               	comf	((c:___awdiv@dividend+1)),c
  6752  00485C  1E02               	btfsc	status,0
  6753  00485E  B0D8               	incf	((c:___awdiv@dividend+1)),c
  6754  004860  2A02               	line	20
  6755                           	
  6756                           l4215:
  6757  004862                     	movlw	(01h)&0ffh
  6758  004862  0E01               	xorwf	((c:___awdiv@sign)),c
  6759  004864  1A06               	goto	l4217
  6760  004866  EF35  F024         	line	21
  6761                           	
  6762                           l682:
  6763  00486A                     	line	22
  6764                           	
  6765                           l4217:
  6766  00486A                     	movlw	high(0)
  6767  00486A  0E00               	movwf	((c:___awdiv@quotient+1)),c
  6768  00486C  6E08               	movlw	low(0)
  6769  00486E  0E00               	movwf	((c:___awdiv@quotient)),c
  6770  004870  6E07               	line	23
  6771                           	
  6772                           l4219:
  6773  004872                     	movf	((c:___awdiv@divisor)),c,w
  6774  004872  5003               iorwf	((c:___awdiv@divisor+1)),c,w
  6775  004874  1004               	btfsc	status,2
  6776  004876  B4D8               	goto	u5331
  6777  004878  EF40  F024         	goto	u5330
  6778  00487C  EF42  F024         
  6779                           u5331:
  6780  004880                     	goto	l4239
  6781  004880  EF76  F024         u5330:
  6782  004884                     	line	24
  6783                           	
  6784                           l4221:
  6785  004884                     	movlw	low(01h)
  6786  004884  0E01               	movwf	((c:___awdiv@counter)),c
  6787  004886  6E05               	line	25
  6788                           	goto	l4225
  6789  004888  EF4C  F024         	
  6790                           l685:
  6791  00488C                     	line	26
  6792                           	
  6793                           l4223:
  6794  00488C                     	bcf	status,0
  6795  00488C  90D8               	rlcf	((c:___awdiv@divisor)),c
  6796  00488E  3603               	rlcf	((c:___awdiv@divisor+1)),c
  6797  004890  3604               	line	27
  6798                           	incf	((c:___awdiv@counter)),c
  6799  004892  2A05               	goto	l4225
  6800  004894  EF4C  F024         	line	28
  6801                           	
  6802                           l684:
  6803  004898                     	line	25
  6804                           	
  6805                           l4225:
  6806  004898                     	
  6807                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  6808  004898  AE04               	goto	u5341
  6809  00489A  EF51  F024         	goto	u5340
  6810  00489E  EF53  F024         u5341:
  6811  0048A2                     	goto	l4223
  6812  0048A2  EF46  F024         u5340:
  6813  0048A6                     	goto	l4227
  6814  0048A6  EF57  F024         	
  6815                           l686:
  6816  0048AA                     	goto	l4227
  6817  0048AA  EF57  F024         	line	29
  6818                           	
  6819                           l687:
  6820  0048AE                     	line	30
  6821                           	
  6822                           l4227:
  6823  0048AE                     	bcf	status,0
  6824  0048AE  90D8               	rlcf	((c:___awdiv@quotient)),c
  6825  0048B0  3607               	rlcf	((c:___awdiv@quotient+1)),c
  6826  0048B2  3608               	line	31
  6827                           	
  6828                           l4229:
  6829  0048B4                     		movf	((c:___awdiv@divisor)),c,w
  6830  0048B4  5003               	subwf	((c:___awdiv@dividend)),c,w
  6831  0048B6  5C01               	movf	((c:___awdiv@divisor+1)),c,w
  6832  0048B8  5004               	subwfb	((c:___awdiv@dividend+1)),c,w
  6833  0048BA  5802               	btfss	status,0
  6834  0048BC  A0D8               	goto	u5351
  6835  0048BE  EF63  F024         	goto	u5350
  6836  0048C2  EF65  F024         
  6837                           u5351:
  6838  0048C6                     	goto	l4235
  6839  0048C6  EF6C  F024         u5350:
  6840  0048CA                     	line	32
  6841                           	
  6842                           l4231:
  6843  0048CA                     	movf	((c:___awdiv@divisor)),c,w
  6844  0048CA  5003               	subwf	((c:___awdiv@dividend)),c
  6845  0048CC  5E01               	movf	((c:___awdiv@divisor+1)),c,w
  6846  0048CE  5004               	subwfb	((c:___awdiv@dividend+1)),c
  6847  0048D0  5A02               
  6848                           	line	33
  6849                           	
  6850                           l4233:
  6851  0048D2                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
  6852  0048D2  8007               	goto	l4235
  6853  0048D4  EF6C  F024         	line	34
  6854                           	
  6855                           l688:
  6856  0048D8                     	line	35
  6857                           	
  6858                           l4235:
  6859  0048D8                     	bcf	status,0
  6860  0048D8  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  6861  0048DA  3204               	rrcf	((c:___awdiv@divisor)),c
  6862  0048DC  3203               	line	36
  6863                           	
  6864                           l4237:
  6865  0048DE                     	decfsz	((c:___awdiv@counter)),c
  6866  0048DE  2E05               	
  6867                           	goto	l4227
  6868  0048E0  EF57  F024         	goto	l4239
  6869  0048E4  EF76  F024         	
  6870                           l689:
  6871  0048E8                     	goto	l4239
  6872  0048E8  EF76  F024         	line	37
  6873                           	
  6874                           l683:
  6875  0048EC                     	line	38
  6876                           	
  6877                           l4239:
  6878  0048EC                     	movf	((c:___awdiv@sign)),c,w
  6879  0048EC  5006               	btfsc	status,2
  6880  0048EE  B4D8               	goto	u5361
  6881  0048F0  EF7C  F024         	goto	u5360
  6882  0048F4  EF7E  F024         u5361:
  6883  0048F8                     	goto	l4243
  6884  0048F8  EF84  F024         u5360:
  6885  0048FC                     	line	39
  6886                           	
  6887                           l4241:
  6888  0048FC                     	negf	((c:___awdiv@quotient)),c
  6889  0048FC  6C07               	comf	((c:___awdiv@quotient+1)),c
  6890  0048FE  1E08               	btfsc	status,0
  6891  004900  B0D8               	incf	((c:___awdiv@quotient+1)),c
  6892  004902  2A08               	goto	l4243
  6893  004904  EF84  F024         	
  6894                           l690:
  6895  004908                     	line	40
  6896                           	
  6897                           l4243:
  6898  004908                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
  6899  004908  C007  F001         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
  6900  00490C  C008  F002         	goto	l691
  6901  004910  EF8A  F024         	
  6902                           l4245:
  6903  004914                     	line	41
  6904                           	
  6905                           l691:
  6906  004914                     	return	;funcret
  6907  004914  0012               	opt stack 0
  6908                           GLOBAL	__end_of___awdiv
  6909                           	__end_of___awdiv:
  6910  004916                     	signat	___awdiv,8314
  6911                           	global	_arrosage
  6912                           
  6913 ;; *************** function _arrosage *****************
  6914 ;; Defined at:
  6915 ;;		line 106 in file "./servomoteur.h"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  duty_cycle      4   14[BANK0 ] float 
  6918 ;;  Period          2   18[BANK0 ] int 
  6919 ;;  time            2   20[BANK0 ] int 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6931 ;;      Params:         0       8       0       0       0       0       0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6934 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6935 ;;Total ram usage:        8 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    2
  6938 ;; This function calls:
  6939 ;;		_SetDutyCycleTo
  6940 ;;		_delay
  6941 ;; This function is called by:
  6942 ;;		_stream
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           psect	text9,class=CODE,space=0,reloc=2,group=0
  6946                           	file	"./servomoteur.h"
  6947                           	line	106
  6948                           global __ptext9
  6949                           __ptext9:
  6950  0056E8                     psect	text9
  6951                           	file	"./servomoteur.h"
  6952                           	line	106
  6953                           	global	__size_of_arrosage
  6954                           	__size_of_arrosage	equ	__end_of_arrosage-_arrosage
  6955  0000                     	
  6956                           _arrosage:
  6957  0056E8                     ;incstack = 0
  6958                           	opt	stack 27
  6959                           	line	108
  6960                           	
  6961                           l4393:
  6962  0056E8                     ;./servomoteur.h: 106: void arrosage(float duty_cycle,int Period,int time);./servomoteur
                                 .h: 107: {;./servomoteur.h: 108:     SetDutyCycleTo(duty_cycle,Period);
  6963                           	movff	(arrosage@duty_cycle),(SetDutyCycleTo@Duty_cycle)
  6964  0056E8  C06E  F060         	movff	(arrosage@duty_cycle+1),(SetDutyCycleTo@Duty_cycle+1)
  6965  0056EC  C06F  F061         	movff	(arrosage@duty_cycle+2),(SetDutyCycleTo@Duty_cycle+2)
  6966  0056F0  C070  F062         	movff	(arrosage@duty_cycle+3),(SetDutyCycleTo@Duty_cycle+3)
  6967  0056F4  C071  F063         	movff	(arrosage@Period),(SetDutyCycleTo@Period)
  6968  0056F8  C072  F064         	movff	(arrosage@Period+1),(SetDutyCycleTo@Period+1)
  6969  0056FC  C073  F065         	call	_SetDutyCycleTo	;wreg free
  6970  005700  EC1A  F023         	line	109
  6971                           	
  6972                           l4395:
  6973  005704                     ;./servomoteur.h: 109:     delay(time);
  6974                           	movff	(arrosage@time),(c:delay@val)
  6975  005704  C074  F001         	movff	(arrosage@time+1),(c:delay@val+1)
  6976  005708  C075  F002         	call	_delay	;wreg free
  6977  00570C  ECCD  F027         	line	110
  6978                           	
  6979                           l157:
  6980  005710                     	return	;funcret
  6981  005710  0012               	opt stack 0
  6982                           GLOBAL	__end_of_arrosage
  6983                           	__end_of_arrosage:
  6984  005712                     	signat	_arrosage,12409
  6985                           	global	_delay
  6986                           
  6987 ;; *************** function _delay *****************
  6988 ;; Defined at:
  6989 ;;		line 83 in file "./servomoteur.h"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  val             2    0[COMRAM] unsigned int 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  j               2    4[COMRAM] unsigned int 
  6994 ;;  i               2    2[COMRAM] unsigned int 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      void 
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7004 ;;      Params:         2       0       0       0       0       0       0       0       0
  7005 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7007 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7008 ;;Total ram usage:        6 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_arrosage
  7014 ;;		_stream
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           psect	text10,class=CODE,space=0,reloc=2,group=0
  7018                           	line	83
  7019                           global __ptext10
  7020                           __ptext10:
  7021  004F9A                     psect	text10
  7022                           	file	"./servomoteur.h"
  7023                           	line	83
  7024                           	global	__size_of_delay
  7025                           	__size_of_delay	equ	__end_of_delay-_delay
  7026  0000                     	
  7027                           _delay:
  7028  004F9A                     ;incstack = 0
  7029                           	opt	stack 29
  7030                           	line	86
  7031                           	
  7032                           l4165:
  7033  004F9A                     ;./servomoteur.h: 83: void delay(unsigned int val);./servomoteur.h: 84: {;./servomoteur.
                                 h: 85:      unsigned int i,j;;./servomoteur.h: 86:         for(i=0;i<val;i++)
  7034                           	movlw	high(0)
  7035  004F9A  0E00               	movwf	((c:delay@i+1)),c
  7036  004F9C  6E04               	movlw	low(0)
  7037  004F9E  0E00               	movwf	((c:delay@i)),c
  7038  004FA0  6E03               	goto	l4179
  7039  004FA2  EFF9  F027         	
  7040                           l142:
  7041  004FA6                     	line	87
  7042                           	
  7043                           l4167:
  7044  004FA6                     ;./servomoteur.h: 87:             for(j=0;j<10;j++);
  7045                           	movlw	high(0)
  7046  004FA6  0E00               	movwf	((c:delay@j+1)),c
  7047  004FA8  6E06               	movlw	low(0)
  7048  004FAA  0E00               	movwf	((c:delay@j)),c
  7049  004FAC  6E05               	
  7050                           l4169:
  7051  004FAE                     		movf	((c:delay@j+1)),c,w
  7052  004FAE  5006               	bnz	u5280
  7053  004FB0  E109               	movlw	10
  7054  004FB2  0E0A               	subwf	 ((c:delay@j)),c,w
  7055  004FB4  5C05               	btfss	status,0
  7056  004FB6  A0D8               	goto	u5281
  7057  004FB8  EFE0  F027         	goto	u5280
  7058  004FBC  EFE2  F027         
  7059                           u5281:
  7060  004FC0                     	goto	l4173
  7061  004FC0  EFE6  F027         u5280:
  7062  004FC4                     	goto	l4177
  7063  004FC4  EFF5  F027         	
  7064                           l4171:
  7065  004FC8                     	goto	l4177
  7066  004FC8  EFF5  F027         	
  7067                           l143:
  7068  004FCC                     	
  7069                           l4173:
  7070  004FCC                     	infsnz	((c:delay@j)),c
  7071  004FCC  4A05               	incf	((c:delay@j+1)),c
  7072  004FCE  2A06               	
  7073                           l4175:
  7074  004FD0                     		movf	((c:delay@j+1)),c,w
  7075  004FD0  5006               	bnz	u5290
  7076  004FD2  E109               	movlw	10
  7077  004FD4  0E0A               	subwf	 ((c:delay@j)),c,w
  7078  004FD6  5C05               	btfss	status,0
  7079  004FD8  A0D8               	goto	u5291
  7080  004FDA  EFF1  F027         	goto	u5290
  7081  004FDE  EFF3  F027         
  7082                           u5291:
  7083  004FE2                     	goto	l4173
  7084  004FE2  EFE6  F027         u5290:
  7085  004FE6                     	goto	l4177
  7086  004FE6  EFF5  F027         	
  7087                           l144:
  7088  004FEA                     	
  7089                           l4177:
  7090  004FEA                     	infsnz	((c:delay@i)),c
  7091  004FEA  4A03               	incf	((c:delay@i+1)),c
  7092  004FEC  2A04               	goto	l4179
  7093  004FEE  EFF9  F027         	
  7094                           l141:
  7095  004FF2                     	
  7096                           l4179:
  7097  004FF2                     		movf	((c:delay@val)),c,w
  7098  004FF2  5001               	subwf	((c:delay@i)),c,w
  7099  004FF4  5C03               	movf	((c:delay@val+1)),c,w
  7100  004FF6  5002               	subwfb	((c:delay@i+1)),c,w
  7101  004FF8  5804               	btfss	status,0
  7102  004FFA  A0D8               	goto	u5301
  7103  004FFC  EF02  F028         	goto	u5300
  7104  005000  EF04  F028         
  7105                           u5301:
  7106  005004                     	goto	l4167
  7107  005004  EFD3  F027         u5300:
  7108  005008                     	goto	l146
  7109  005008  EF06  F028         	
  7110                           l145:
  7111  00500C                     	line	88
  7112                           	
  7113                           l146:
  7114  00500C                     	return	;funcret
  7115  00500C  0012               	opt stack 0
  7116                           GLOBAL	__end_of_delay
  7117                           	__end_of_delay:
  7118  00500E                     	signat	_delay,4217
  7119                           	global	_SetDutyCycleTo
  7120                           
  7121 ;; *************** function _SetDutyCycleTo *****************
  7122 ;; Defined at:
  7123 ;;		line 73 in file "./servomoteur.h"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  Duty_cycle      4    0[BANK0 ] float 
  7126 ;;  Period          2    4[BANK0 ] int 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  PWM10BitValu    2   12[BANK0 ] int 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  1    wreg      void 
  7131 ;; Registers used:
  7132 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7138 ;;      Params:         0       6       0       0       0       0       0       0       0
  7139 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7140 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7141 ;;      Totals:         0      14       0       0       0       0       0       0       0
  7142 ;;Total ram usage:       14 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    1
  7145 ;; This function calls:
  7146 ;;		___fladd
  7147 ;;		___fldiv
  7148 ;;		___flmul
  7149 ;;		___fltol
  7150 ;;		___xxtofl
  7151 ;; This function is called by:
  7152 ;;		_arrosage
  7153 ;;		_stream
  7154 ;;		_main
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           psect	text11,class=CODE,space=0,reloc=2,group=0
  7158                           	line	73
  7159                           global __ptext11
  7160                           __ptext11:
  7161  004634                     psect	text11
  7162                           	file	"./servomoteur.h"
  7163                           	line	73
  7164                           	global	__size_of_SetDutyCycleTo
  7165                           	__size_of_SetDutyCycleTo	equ	__end_of_SetDutyCycleTo-_SetDutyCycleTo
  7166  0000                     	
  7167                           _SetDutyCycleTo:
  7168  004634                     ;incstack = 0
  7169                           	opt	stack 27
  7170                           	line	77
  7171                           	
  7172                           l4159:
  7173  004634                     ;./servomoteur.h: 73: void SetDutyCycleTo(float Duty_cycle, int Period);./servomoteur.h:
                                  74: {;./servomoteur.h: 75:     int PWM10BitValue;;./servomoteur.h: 77:     PWM10BitValu
                                 e = 4.0 * ((float)Period + 1.0) * (Duty_cycle/100.0);
  7174                           	movlw	low(normalize32(0x40800000))
  7175  004634  0E00               	movwf	((c:___flmul@a)),c
  7176  004636  6E13               	movlw	high(normalize32(0x40800000))
  7177  004638  0E00               	movwf	((c:___flmul@a+1)),c
  7178  00463A  6E14               	movlw	low highword(normalize32(0x40800000))
  7179  00463C  0E80               	movwf	((c:___flmul@a+2)),c
  7180  00463E  6E15               	movlw	high highword(normalize32(0x40800000))
  7181  004640  0E40               	movwf	((c:___flmul@a+3)),c
  7182  004642  6E16               	movlw	low(normalize32(0x3f800000))
  7183  004644  0E00               	movwf	((c:___fladd@a)),c
  7184  004646  6E45               	movlw	high(normalize32(0x3f800000))
  7185  004648  0E00               	movwf	((c:___fladd@a+1)),c
  7186  00464A  6E46               	movlw	low highword(normalize32(0x3f800000))
  7187  00464C  0E80               	movwf	((c:___fladd@a+2)),c
  7188  00464E  6E47               	movlw	high highword(normalize32(0x3f800000))
  7189  004650  0E3F               	movwf	((c:___fladd@a+3)),c
  7190  004652  6E48               	movff	(SetDutyCycleTo@Period),(c:___xxtofl@val)
  7191  004654  C064  F001         	movff	(SetDutyCycleTo@Period+1),(c:___xxtofl@val+1)
  7192  004658  C065  F002         	movlw	0
  7193  00465C  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  7194  00465E  BE02               	movlw	-1
  7195  004660  0EFF               	movwf	((c:___xxtofl@val+2)),c
  7196  004662  6E03               	movwf	((c:___xxtofl@val+3)),c
  7197  004664  6E04               	movlw	(01h)&0ffh
  7198  004666  0E01               	
  7199                           	call	___xxtofl
  7200  004668  ECF0  F01C         	movff	0+?___xxtofl,(c:___fladd@b)
  7201  00466C  C001  F041         	movff	1+?___xxtofl,(c:___fladd@b+1)
  7202  004670  C002  F042         	movff	2+?___xxtofl,(c:___fladd@b+2)
  7203  004674  C003  F043         	movff	3+?___xxtofl,(c:___fladd@b+3)
  7204  004678  C004  F044         	
  7205                           	call	___fladd	;wreg free
  7206  00467C  EC2D  F00D         	movff	0+?___fladd,(c:___flmul@b)
  7207  004680  C041  F00F         	movff	1+?___fladd,(c:___flmul@b+1)
  7208  004684  C042  F010         	movff	2+?___fladd,(c:___flmul@b+2)
  7209  004688  C043  F011         	movff	3+?___fladd,(c:___flmul@b+3)
  7210  00468C  C044  F012         	
  7211                           	call	___flmul	;wreg free
  7212  004690  EC29  F012         	movff	0+?___flmul,(_SetDutyCycleTo$1281)
  7213  004694  C00F  F068         	movff	1+?___flmul,(_SetDutyCycleTo$1281+1)
  7214  004698  C010  F069         	movff	2+?___flmul,(_SetDutyCycleTo$1281+2)
  7215  00469C  C011  F06A         	movff	3+?___flmul,(_SetDutyCycleTo$1281+3)
  7216  0046A0  C012  F06B         	
  7217                           ;./servomoteur.h: 73: void SetDutyCycleTo(float Duty_cycle, int Period);./servomoteur.h:
                                  74: {;./servomoteur.h: 75:     int PWM10BitValue;;./servomoteur.h: 77:     PWM10BitValu
                                 e = 4.0 * ((float)Period + 1.0) * (Duty_cycle/100.0);
  7218                           	movlw	low(normalize32(0x42c80000))
  7219  0046A4  0E00               	movwf	((c:___fldiv@a)),c
  7220  0046A6  6E2C               	movlw	high(normalize32(0x42c80000))
  7221  0046A8  0E00               	movwf	((c:___fldiv@a+1)),c
  7222  0046AA  6E2D               	movlw	low highword(normalize32(0x42c80000))
  7223  0046AC  0EC8               	movwf	((c:___fldiv@a+2)),c
  7224  0046AE  6E2E               	movlw	high highword(normalize32(0x42c80000))
  7225  0046B0  0E42               	movwf	((c:___fldiv@a+3)),c
  7226  0046B2  6E2F               	movff	(SetDutyCycleTo@Duty_cycle),(c:___fldiv@b)
  7227  0046B4  C060  F028         	movff	(SetDutyCycleTo@Duty_cycle+1),(c:___fldiv@b+1)
  7228  0046B8  C061  F029         	movff	(SetDutyCycleTo@Duty_cycle+2),(c:___fldiv@b+2)
  7229  0046BC  C062  F02A         	movff	(SetDutyCycleTo@Duty_cycle+3),(c:___fldiv@b+3)
  7230  0046C0  C063  F02B         	call	___fldiv	;wreg free
  7231  0046C4  EC60  F014         	movff	0+?___fldiv,(c:___flmul@a)
  7232  0046C8  C028  F013         	movff	1+?___fldiv,(c:___flmul@a+1)
  7233  0046CC  C029  F014         	movff	2+?___fldiv,(c:___flmul@a+2)
  7234  0046D0  C02A  F015         	movff	3+?___fldiv,(c:___flmul@a+3)
  7235  0046D4  C02B  F016         	
  7236                           	movff	(_SetDutyCycleTo$1281),(c:___flmul@b)
  7237  0046D8  C068  F00F         	movff	(_SetDutyCycleTo$1281+1),(c:___flmul@b+1)
  7238  0046DC  C069  F010         	movff	(_SetDutyCycleTo$1281+2),(c:___flmul@b+2)
  7239  0046E0  C06A  F011         	movff	(_SetDutyCycleTo$1281+3),(c:___flmul@b+3)
  7240  0046E4  C06B  F012         	call	___flmul	;wreg free
  7241  0046E8  EC29  F012         	movff	0+?___flmul,(c:___fltol@f1)
  7242  0046EC  C00F  F055         	movff	1+?___flmul,(c:___fltol@f1+1)
  7243  0046F0  C010  F056         	movff	2+?___flmul,(c:___fltol@f1+2)
  7244  0046F4  C011  F057         	movff	3+?___flmul,(c:___fltol@f1+3)
  7245  0046F8  C012  F058         	
  7246                           	call	___fltol	;wreg free
  7247  0046FC  ECD5  F021         	movff	0+?___fltol,(SetDutyCycleTo@PWM10BitValue)
  7248  004700  C055  F06C         	movff	1+?___fltol,(SetDutyCycleTo@PWM10BitValue+1)
  7249  004704  C056  F06D         	line	78
  7250                           	
  7251                           l4161:
  7252  004708                     ;./servomoteur.h: 78:     CCPR1L = (PWM10BitValue >> 2);
  7253                           	movff	(SetDutyCycleTo@PWM10BitValue),??_SetDutyCycleTo+0+0
  7254  004708  C06C  F066         	movff	(SetDutyCycleTo@PWM10BitValue+1),??_SetDutyCycleTo+0+0+1
  7255  00470C  C06D  F067         	movlb	0	; () banked
  7256  004710  0100               	rlcf	(??_SetDutyCycleTo+0+1)&0ffh,w
  7257  004712  3567               	rrcf	(??_SetDutyCycleTo+0+1)&0ffh
  7258  004714  3367               	rrcf	(??_SetDutyCycleTo+0+0)&0ffh
  7259  004716  3366               	rlcf	(??_SetDutyCycleTo+0+1)&0ffh,w
  7260  004718  3567               	rrcf	(??_SetDutyCycleTo+0+1)&0ffh
  7261  00471A  3367               	rrcf	(??_SetDutyCycleTo+0+0)&0ffh
  7262  00471C  3366               	movf	(??_SetDutyCycleTo+0+0)&0ffh,w
  7263  00471E  5166               	movwf	((c:4030)),c	;volatile
  7264  004720  6EBE               	line	79
  7265                           	
  7266                           l4163:; BSR set to: 0
  7267  004722                     
  7268                           ;./servomoteur.h: 79:     CCP1CON = ((PWM10BitValue & 0x03) << 4) | 0x0C;
  7269                           	movff	(SetDutyCycleTo@PWM10BitValue),??_SetDutyCycleTo+0+0
  7270  004722  C06C  F066         	movlw	03h
  7271  004726  0E03               	andwf	(??_SetDutyCycleTo+0+0)&0ffh
  7272  004728  1766               	swapf	(??_SetDutyCycleTo+0+0)&0ffh,w
  7273  00472A  3966               	andlw	(0ffh shl 4) & 0ffh
  7274  00472C  0BF0               	iorlw	low(0Ch)
  7275  00472E  090C               	movwf	((c:4029)),c	;volatile
  7276  004730  6EBD               	line	80
  7277                           	
  7278                           l138:; BSR set to: 0
  7279  004732                     
  7280                           	return	;funcret
  7281  004732  0012               	opt stack 0
  7282                           GLOBAL	__end_of_SetDutyCycleTo
  7283                           	__end_of_SetDutyCycleTo:
  7284  004734                     	signat	_SetDutyCycleTo,8313
  7285                           	global	___xxtofl
  7286                           
  7287 ;; *************** function ___xxtofl *****************
  7288 ;; Defined at:
  7289 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  sign            1    wreg     unsigned char 
  7292 ;;  val             4    0[COMRAM] long 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;  sign            1    8[COMRAM] unsigned char 
  7295 ;;  arg             4   10[COMRAM] unsigned long 
  7296 ;;  exp             1    9[COMRAM] unsigned char 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  4    0[COMRAM] unsigned char 
  7299 ;; Registers used:
  7300 ;;		wreg, status,2, status,0
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7306 ;;      Params:         4       0       0       0       0       0       0       0       0
  7307 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7308 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7309 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7310 ;;Total ram usage:       14 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_setPeriodTo
  7316 ;;		_SetDutyCycleTo
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           psect	text12,class=CODE,space=0,reloc=2,group=1
  7320                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  7321                           	line	10
  7322                           global __ptext12
  7323                           __ptext12:
  7324  0039E0                     psect	text12
  7325                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  7326                           	line	10
  7327                           	global	__size_of___xxtofl
  7328                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  7329  0000                     	
  7330                           ___xxtofl:; BSR set to: 0
  7331  0039E0                     
  7332                           ;incstack = 0
  7333                           	opt	stack 28
  7334                           ;___xxtofl@sign stored from wreg
  7335                           	movwf	((c:___xxtofl@sign)),c
  7336  0039E0  6E09               	line	15
  7337                           	
  7338                           l4057:
  7339  0039E2                     	movf	((c:___xxtofl@sign)),c,w
  7340  0039E2  5009               	btfsc	status,2
  7341  0039E4  B4D8               	goto	u5061
  7342  0039E6  EFF7  F01C         	goto	u5060
  7343  0039EA  EFF9  F01C         u5061:
  7344  0039EE                     	goto	l1115
  7345  0039EE  EF1B  F01D         u5060:
  7346  0039F2                     	
  7347                           l4059:
  7348  0039F2                     	btfsc	((c:___xxtofl@val+3)),c,7
  7349  0039F2  BE04               	goto	u5070
  7350  0039F4  EF00  F01D         	goto	u5071
  7351  0039F8  EFFE  F01C         
  7352                           u5071:
  7353  0039FC                     	goto	l1115
  7354  0039FC  EF1B  F01D         u5070:
  7355  003A00                     	line	16
  7356                           	
  7357                           l4061:
  7358  003A00                     	movff	(c:___xxtofl@val),??___xxtofl+0+0
  7359  003A00  C001  F005         	movff	(c:___xxtofl@val+1),??___xxtofl+0+0+1
  7360  003A04  C002  F006         	movff	(c:___xxtofl@val+2),??___xxtofl+0+0+2
  7361  003A08  C003  F007         	movff	(c:___xxtofl@val+3),??___xxtofl+0+0+3
  7362  003A0C  C004  F008         	comf	(??___xxtofl+0+0),c
  7363  003A10  1E05               	comf	(??___xxtofl+0+1),c
  7364  003A12  1E06               	comf	(??___xxtofl+0+2),c
  7365  003A14  1E07               	comf	(??___xxtofl+0+3),c
  7366  003A16  1E08               	incf	(??___xxtofl+0+0),c
  7367  003A18  2A05               	movlw	0
  7368  003A1A  0E00               	addwfc	(??___xxtofl+0+1),c
  7369  003A1C  2206               	addwfc	(??___xxtofl+0+2),c
  7370  003A1E  2207               	addwfc	(??___xxtofl+0+3),c
  7371  003A20  2208               	movff	??___xxtofl+0+0,(c:___xxtofl@arg)
  7372  003A22  C005  F00B         	movff	??___xxtofl+0+1,(c:___xxtofl@arg+1)
  7373  003A26  C006  F00C         	movff	??___xxtofl+0+2,(c:___xxtofl@arg+2)
  7374  003A2A  C007  F00D         	movff	??___xxtofl+0+3,(c:___xxtofl@arg+3)
  7375  003A2E  C008  F00E         	line	17
  7376                           	goto	l4063
  7377  003A32  EF25  F01D         	line	18
  7378                           	
  7379                           l1115:
  7380  003A36                     	line	19
  7381                           	movff	(c:___xxtofl@val),(c:___xxtofl@arg)
  7382  003A36  C001  F00B         	movff	(c:___xxtofl@val+1),(c:___xxtofl@arg+1)
  7383  003A3A  C002  F00C         	movff	(c:___xxtofl@val+2),(c:___xxtofl@arg+2)
  7384  003A3E  C003  F00D         	movff	(c:___xxtofl@val+3),(c:___xxtofl@arg+3)
  7385  003A42  C004  F00E         	goto	l4063
  7386  003A46  EF25  F01D         	line	20
  7387                           	
  7388                           l1116:
  7389  003A4A                     	line	21
  7390                           	
  7391                           l4063:
  7392  003A4A                     	movf	((c:___xxtofl@val)),c,w
  7393  003A4A  5001               iorwf	((c:___xxtofl@val+1)),c,w
  7394  003A4C  1002               iorwf	((c:___xxtofl@val+2)),c,w
  7395  003A4E  1003               iorwf	((c:___xxtofl@val+3)),c,w
  7396  003A50  1004               	btfss	status,2
  7397  003A52  A4D8               	goto	u5081
  7398  003A54  EF2E  F01D         	goto	u5080
  7399  003A58  EF30  F01D         
  7400                           u5081:
  7401  003A5C                     	goto	l4069
  7402  003A5C  EF3C  F01D         u5080:
  7403  003A60                     	line	22
  7404                           	
  7405                           l4065:
  7406  003A60                     	movlw	low(normalize32(0x0))
  7407  003A60  0E00               	movwf	((c:?___xxtofl)),c
  7408  003A62  6E01               	movlw	high(normalize32(0x0))
  7409  003A64  0E00               	movwf	((c:?___xxtofl+1)),c
  7410  003A66  6E02               	movlw	low highword(normalize32(0x0))
  7411  003A68  0E00               	movwf	((c:?___xxtofl+2)),c
  7412  003A6A  6E03               	movlw	high highword(normalize32(0x0))
  7413  003A6C  0E00               	movwf	((c:?___xxtofl+3)),c
  7414  003A6E  6E04               	goto	l1118
  7415  003A70  EFDD  F01D         	
  7416                           l4067:
  7417  003A74                     	goto	l1118
  7418  003A74  EFDD  F01D         	
  7419                           l1117:
  7420  003A78                     	line	23
  7421                           	
  7422                           l4069:
  7423  003A78                     	movlw	low(096h)
  7424  003A78  0E96               	movwf	((c:___xxtofl@exp)),c
  7425  003A7A  6E0A               	line	24
  7426                           	goto	l4073
  7427  003A7C  EF48  F01D         	
  7428                           l1120:
  7429  003A80                     	line	25
  7430                           	
  7431                           l4071:
  7432  003A80                     	incf	((c:___xxtofl@exp)),c
  7433  003A80  2A0A               	line	26
  7434                           	bcf	status,0
  7435  003A82  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  7436  003A84  320E               	rrcf	((c:___xxtofl@arg+2)),c
  7437  003A86  320D               	rrcf	((c:___xxtofl@arg+1)),c
  7438  003A88  320C               	rrcf	((c:___xxtofl@arg)),c
  7439  003A8A  320B               	goto	l4073
  7440  003A8C  EF48  F01D         	line	27
  7441                           	
  7442                           l1119:
  7443  003A90                     	line	24
  7444                           	
  7445                           l4073:
  7446  003A90                     	movlw	0
  7447  003A90  0E00               	andwf	((c:___xxtofl@arg)),c,w
  7448  003A92  140B               	movwf	(??___xxtofl+0+0)&0ffh,c
  7449  003A94  6E05               	movlw	0
  7450  003A96  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  7451  003A98  140C               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  7452  003A9A  6E06               	
  7453                           	movlw	0
  7454  003A9C  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  7455  003A9E  140D               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  7456  003AA0  6E07               	
  7457                           	movlw	0FEh
  7458  003AA2  0EFE               	andwf	((c:___xxtofl@arg+3)),c,w
  7459  003AA4  140E               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  7460  003AA6  6E08               	movf	(??___xxtofl+0+0),c,w
  7461  003AA8  5005               iorwf	(??___xxtofl+0+1),c,w
  7462  003AAA  1006               iorwf	(??___xxtofl+0+2),c,w
  7463  003AAC  1007               iorwf	(??___xxtofl+0+3),c,w
  7464  003AAE  1008               	btfss	status,2
  7465  003AB0  A4D8               	goto	u5091
  7466  003AB2  EF5D  F01D         	goto	u5090
  7467  003AB6  EF5F  F01D         
  7468                           u5091:
  7469  003ABA                     	goto	l4071
  7470  003ABA  EF40  F01D         u5090:
  7471  003ABE                     	goto	l1122
  7472  003ABE  EF6F  F01D         	
  7473                           l1121:
  7474  003AC2                     	line	28
  7475                           	goto	l1122
  7476  003AC2  EF6F  F01D         	
  7477                           l1123:
  7478  003AC6                     	line	29
  7479                           	
  7480                           l4075:
  7481  003AC6                     	incf	((c:___xxtofl@exp)),c
  7482  003AC6  2A0A               	line	30
  7483                           	
  7484                           l4077:
  7485  003AC8                     	movlw	low(01h)
  7486  003AC8  0E01               	addwf	((c:___xxtofl@arg)),c
  7487  003ACA  260B               	movlw	0
  7488  003ACC  0E00               	addwfc	((c:___xxtofl@arg+1)),c
  7489  003ACE  220C               	addwfc	((c:___xxtofl@arg+2)),c
  7490  003AD0  220D               	addwfc	((c:___xxtofl@arg+3)),c
  7491  003AD2  220E               	line	31
  7492                           	
  7493                           l4079:
  7494  003AD4                     	bcf	status,0
  7495  003AD4  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  7496  003AD6  320E               	rrcf	((c:___xxtofl@arg+2)),c
  7497  003AD8  320D               	rrcf	((c:___xxtofl@arg+1)),c
  7498  003ADA  320C               	rrcf	((c:___xxtofl@arg)),c
  7499  003ADC  320B               	line	32
  7500                           	
  7501                           l1122:
  7502  003ADE                     	line	28
  7503                           	movlw	0
  7504  003ADE  0E00               	andwf	((c:___xxtofl@arg)),c,w
  7505  003AE0  140B               	movwf	(??___xxtofl+0+0)&0ffh,c
  7506  003AE2  6E05               	movlw	0
  7507  003AE4  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  7508  003AE6  140C               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  7509  003AE8  6E06               	
  7510                           	movlw	0
  7511  003AEA  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  7512  003AEC  140D               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  7513  003AEE  6E07               	
  7514                           	movlw	0FFh
  7515  003AF0  0EFF               	andwf	((c:___xxtofl@arg+3)),c,w
  7516  003AF2  140E               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  7517  003AF4  6E08               	movf	(??___xxtofl+0+0),c,w
  7518  003AF6  5005               iorwf	(??___xxtofl+0+1),c,w
  7519  003AF8  1006               iorwf	(??___xxtofl+0+2),c,w
  7520  003AFA  1007               iorwf	(??___xxtofl+0+3),c,w
  7521  003AFC  1008               	btfss	status,2
  7522  003AFE  A4D8               	goto	u5101
  7523  003B00  EF84  F01D         	goto	u5100
  7524  003B04  EF86  F01D         
  7525                           u5101:
  7526  003B08                     	goto	l4075
  7527  003B08  EF63  F01D         u5100:
  7528  003B0C                     	goto	l4083
  7529  003B0C  EF92  F01D         	
  7530                           l1124:
  7531  003B10                     	line	33
  7532                           	goto	l4083
  7533  003B10  EF92  F01D         	
  7534                           l1126:
  7535  003B14                     	line	34
  7536                           	
  7537                           l4081:
  7538  003B14                     	decf	((c:___xxtofl@exp)),c
  7539  003B14  060A               	line	35
  7540                           	bcf	status,0
  7541  003B16  90D8               	rlcf	((c:___xxtofl@arg)),c
  7542  003B18  360B               	rlcf	((c:___xxtofl@arg+1)),c
  7543  003B1A  360C               	rlcf	((c:___xxtofl@arg+2)),c
  7544  003B1C  360D               	rlcf	((c:___xxtofl@arg+3)),c
  7545  003B1E  360E               	goto	l4083
  7546  003B20  EF92  F01D         	line	36
  7547                           	
  7548                           l1125:
  7549  003B24                     	line	33
  7550                           	
  7551                           l4083:
  7552  003B24                     	
  7553                           	btfsc	((c:___xxtofl@arg+2)),c,(23)&7
  7554  003B24  BE0D               	goto	u5111
  7555  003B26  EF97  F01D         	goto	u5110
  7556  003B2A  EF99  F01D         u5111:
  7557  003B2E                     	goto	l1129
  7558  003B2E  EFA3  F01D         u5110:
  7559  003B32                     	
  7560                           l4085:
  7561  003B32                     		movlw	02h-0
  7562  003B32  0E02               	cpfslt	((c:___xxtofl@exp)),c
  7563  003B34  600A               	goto	u5121
  7564  003B36  EF9F  F01D         	goto	u5120
  7565  003B3A  EFA1  F01D         
  7566                           u5121:
  7567  003B3E                     	goto	l4081
  7568  003B3E  EF8A  F01D         u5120:
  7569  003B42                     	goto	l1129
  7570  003B42  EFA3  F01D         	
  7571                           l1128:
  7572  003B46                     	
  7573                           l1129:
  7574  003B46                     	line	37
  7575                           	
  7576                           	btfsc	((c:___xxtofl@exp)),c,(0)&7
  7577  003B46  B00A               	goto	u5131
  7578  003B48  EFA8  F01D         	goto	u5130
  7579  003B4C  EFAA  F01D         u5131:
  7580  003B50                     	goto	l4089
  7581  003B50  EFAD  F01D         u5130:
  7582  003B54                     	line	38
  7583                           	
  7584                           l4087:
  7585  003B54                     	bcf	(0+(23/8)+(c:___xxtofl@arg)),c,(23)&7
  7586  003B54  9E0D               	goto	l4089
  7587  003B56  EFAD  F01D         	
  7588                           l1130:
  7589  003B5A                     	line	39
  7590                           	
  7591                           l4089:
  7592  003B5A                     	bcf status,0
  7593  003B5A  90D8               	rrcf	((c:___xxtofl@exp)),c
  7594  003B5C  320A               
  7595                           	line	40
  7596                           	
  7597                           l4091:
  7598  003B5E                     	movff	(c:___xxtofl@exp),??___xxtofl+0+0
  7599  003B5E  C00A  F005         	clrf	(??___xxtofl+0+0+1)&0ffh,c
  7600  003B62  6A06               	clrf	(??___xxtofl+0+0+2)&0ffh,c
  7601  003B64  6A07               	clrf	(??___xxtofl+0+0+3)&0ffh,c
  7602  003B66  6A08               	movff	??___xxtofl+0+0,??___xxtofl+0+3
  7603  003B68  C005  F008         	clrf	(??___xxtofl+0+2),c
  7604  003B6C  6A07               	clrf	(??___xxtofl+0+1),c
  7605  003B6E  6A06               	clrf	(??___xxtofl+0+0),c
  7606  003B70  6A05               	movf	(??___xxtofl+0+0),c,w
  7607  003B72  5005               	iorwf	((c:___xxtofl@arg)),c
  7608  003B74  120B               	movf	(??___xxtofl+0+1),c,w
  7609  003B76  5006               	iorwf	((c:___xxtofl@arg+1)),c
  7610  003B78  120C               	movf	(??___xxtofl+0+2),c,w
  7611  003B7A  5007               	iorwf	((c:___xxtofl@arg+2)),c
  7612  003B7C  120D               	movf	(??___xxtofl+0+3),c,w
  7613  003B7E  5008               	iorwf	((c:___xxtofl@arg+3)),c
  7614  003B80  120E               
  7615                           	line	41
  7616                           	
  7617                           l4093:
  7618  003B82                     	movf	((c:___xxtofl@sign)),c,w
  7619  003B82  5009               	btfsc	status,2
  7620  003B84  B4D8               	goto	u5141
  7621  003B86  EFC7  F01D         	goto	u5140
  7622  003B8A  EFC9  F01D         u5141:
  7623  003B8E                     	goto	l4099
  7624  003B8E  EFD3  F01D         u5140:
  7625  003B92                     	
  7626                           l4095:
  7627  003B92                     	btfsc	((c:___xxtofl@val+3)),c,7
  7628  003B92  BE04               	goto	u5150
  7629  003B94  EFD0  F01D         	goto	u5151
  7630  003B98  EFCE  F01D         
  7631                           u5151:
  7632  003B9C                     	goto	l4099
  7633  003B9C  EFD3  F01D         u5150:
  7634  003BA0                     	line	42
  7635                           	
  7636                           l4097:
  7637  003BA0                     	bsf	(0+(31/8)+(c:___xxtofl@arg)),c,(31)&7
  7638  003BA0  8E0E               	goto	l4099
  7639  003BA2  EFD3  F01D         	
  7640                           l1131:
  7641  003BA6                     	line	43
  7642                           	
  7643                           l4099:
  7644  003BA6                     	movff	(c:___xxtofl@arg),(c:?___xxtofl)
  7645  003BA6  C00B  F001         	movff	(c:___xxtofl@arg+1),(c:?___xxtofl+1)
  7646  003BAA  C00C  F002         	movff	(c:___xxtofl@arg+2),(c:?___xxtofl+2)
  7647  003BAE  C00D  F003         	movff	(c:___xxtofl@arg+3),(c:?___xxtofl+3)
  7648  003BB2  C00E  F004         	goto	l1118
  7649  003BB6  EFDD  F01D         	
  7650                           l4101:
  7651  003BBA                     	line	44
  7652                           	
  7653                           l1118:
  7654  003BBA                     	return	;funcret
  7655  003BBA  0012               	opt stack 0
  7656                           GLOBAL	__end_of___xxtofl
  7657                           	__end_of___xxtofl:
  7658  003BBC                     	signat	___xxtofl,8316
  7659                           	global	___fltol
  7660                           
  7661 ;; *************** function ___fltol *****************
  7662 ;; Defined at:
  7663 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  f1              4   84[COMRAM] unsigned char 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;  exp1            1   93[COMRAM] unsigned char 
  7668 ;;  sign1           1   92[COMRAM] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  4   84[COMRAM] long 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2, status,0
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7678 ;;      Params:         4       0       0       0       0       0       0       0       0
  7679 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7680 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7681 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7682 ;;Total ram usage:       10 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_setPeriodTo
  7688 ;;		_SetDutyCycleTo
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           psect	text13,class=CODE,space=0,reloc=2,group=1
  7692                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  7693                           	line	43
  7694                           global __ptext13
  7695                           __ptext13:
  7696  0043AA                     psect	text13
  7697                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  7698                           	line	43
  7699                           	global	__size_of___fltol
  7700                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  7701  0000                     	
  7702                           ___fltol:
  7703  0043AA                     ;incstack = 0
  7704                           	opt	stack 28
  7705                           	line	47
  7706                           	
  7707                           l4013:
  7708  0043AA                     	rlcf	((c:___fltol@f1+2)),c,w
  7709  0043AA  3457               	rlcf	((c:___fltol@f1+3)),c,w
  7710  0043AC  3458               	movwf	((c:___fltol@exp1)),c
  7711  0043AE  6E5E               	movf	((c:___fltol@exp1)),c,w
  7712  0043B0  505E               	btfss	status,2
  7713  0043B2  A4D8               	goto	u4991
  7714  0043B4  EFDE  F021         	goto	u4990
  7715  0043B8  EFE0  F021         u4991:
  7716  0043BC                     	goto	l4019
  7717  0043BC  EFEC  F021         u4990:
  7718  0043C0                     	line	48
  7719                           	
  7720                           l4015:
  7721  0043C0                     	movlw	low(0)
  7722  0043C0  0E00               	movwf	((c:?___fltol)),c
  7723  0043C2  6E55               	movlw	high(0)
  7724  0043C4  0E00               	movwf	((c:?___fltol+1)),c
  7725  0043C6  6E56               	movlw	low highword(0)
  7726  0043C8  0E00               	movwf	((c:?___fltol+2)),c
  7727  0043CA  6E57               	movlw	high highword(0)
  7728  0043CC  0E00               	movwf	((c:?___fltol+3)),c
  7729  0043CE  6E58               	goto	l757
  7730  0043D0  EF7D  F022         	
  7731                           l4017:
  7732  0043D4                     	goto	l757
  7733  0043D4  EF7D  F022         	
  7734                           l756:
  7735  0043D8                     	line	49
  7736                           	
  7737                           l4019:
  7738  0043D8                     	movff	(c:___fltol@f1),??___fltol+0+0
  7739  0043D8  C055  F059         	movff	(c:___fltol@f1+1),??___fltol+0+0+1
  7740  0043DC  C056  F05A         	movff	(c:___fltol@f1+2),??___fltol+0+0+2
  7741  0043E0  C057  F05B         	movff	(c:___fltol@f1+3),??___fltol+0+0+3
  7742  0043E4  C058  F05C         	movlw	01Fh+1
  7743  0043E8  0E20               	goto	u5000
  7744  0043EA  EFFC  F021         u5005:
  7745  0043EE                     	bcf	status,0
  7746  0043EE  90D8               	rrcf	(??___fltol+0+3),c
  7747  0043F0  325C               	rrcf	(??___fltol+0+2),c
  7748  0043F2  325B               	rrcf	(??___fltol+0+1),c
  7749  0043F4  325A               	rrcf	(??___fltol+0+0),c
  7750  0043F6  3259               u5000:
  7751  0043F8                     	decfsz	wreg
  7752  0043F8  2EE8               	goto	u5005
  7753  0043FA  EFF7  F021         	movf	(??___fltol+0+0),c,w
  7754  0043FE  5059               	movwf	((c:___fltol@sign1)),c
  7755  004400  6E5D               	line	50
  7756                           	
  7757                           l4021:
  7758  004402                     	bsf	(0+(23/8)+(c:___fltol@f1)),c,(23)&7
  7759  004402  8E57               	line	51
  7760                           	
  7761                           l4023:
  7762  004404                     	movlw	0FFh
  7763  004404  0EFF               	andwf	((c:___fltol@f1)),c
  7764  004406  1655               	movlw	0FFh
  7765  004408  0EFF               	andwf	((c:___fltol@f1+1)),c
  7766  00440A  1656               	movlw	0FFh
  7767  00440C  0EFF               	andwf	((c:___fltol@f1+2)),c
  7768  00440E  1657               	movlw	0
  7769  004410  0E00               	andwf	((c:___fltol@f1+3)),c
  7770  004412  1658               	line	52
  7771                           	
  7772                           l4025:
  7773  004414                     	movlw	(096h)&0ffh
  7774  004414  0E96               	subwf	((c:___fltol@exp1)),c
  7775  004416  5E5E               	line	53
  7776                           	
  7777                           l4027:
  7778  004418                     	btfsc	((c:___fltol@exp1)),c,7
  7779  004418  BE5E               	goto	u5010
  7780  00441A  EF13  F022         	goto	u5011
  7781  00441E  EF11  F022         
  7782                           u5011:
  7783  004422                     	goto	l4039
  7784  004422  EF37  F022         u5010:
  7785  004426                     	line	54
  7786                           	
  7787                           l4029:
  7788  004426                     		movf	((c:___fltol@exp1)),c,w
  7789  004426  505E               	xorlw	80h
  7790  004428  0A80               	addlw	-(80h^-23)
  7791  00442A  0F97               	btfsc	status,0
  7792  00442C  B0D8               	goto	u5021
  7793  00442E  EF1B  F022         	goto	u5020
  7794  004432  EF1D  F022         
  7795                           u5021:
  7796  004436                     	goto	l4035
  7797  004436  EF2B  F022         u5020:
  7798  00443A                     	line	55
  7799                           	
  7800                           l4031:
  7801  00443A                     	movlw	low(0)
  7802  00443A  0E00               	movwf	((c:?___fltol)),c
  7803  00443C  6E55               	movlw	high(0)
  7804  00443E  0E00               	movwf	((c:?___fltol+1)),c
  7805  004440  6E56               	movlw	low highword(0)
  7806  004442  0E00               	movwf	((c:?___fltol+2)),c
  7807  004444  6E57               	movlw	high highword(0)
  7808  004446  0E00               	movwf	((c:?___fltol+3)),c
  7809  004448  6E58               	goto	l757
  7810  00444A  EF7D  F022         	
  7811                           l4033:
  7812  00444E                     	goto	l757
  7813  00444E  EF7D  F022         	
  7814                           l759:
  7815  004452                     	goto	l4035
  7816  004452  EF2B  F022         	line	56
  7817                           	
  7818                           l760:
  7819  004456                     	line	57
  7820                           	
  7821                           l4035:
  7822  004456                     	bcf	status,0
  7823  004456  90D8               	rrcf	((c:___fltol@f1+3)),c
  7824  004458  3258               	rrcf	((c:___fltol@f1+2)),c
  7825  00445A  3257               	rrcf	((c:___fltol@f1+1)),c
  7826  00445C  3256               	rrcf	((c:___fltol@f1)),c
  7827  00445E  3255               	
  7828                           l4037:
  7829  004460                     	incfsz	((c:___fltol@exp1)),c
  7830  004460  3E5E               	
  7831                           	goto	l4035
  7832  004462  EF2B  F022         	goto	l4049
  7833  004466  EF61  F022         	
  7834                           l761:
  7835  00446A                     	line	59
  7836                           	goto	l4049
  7837  00446A  EF61  F022         	
  7838                           l758:
  7839  00446E                     	line	60
  7840                           	
  7841                           l4039:
  7842  00446E                     		movlw	020h-1
  7843  00446E  0E1F               	cpfsgt	((c:___fltol@exp1)),c
  7844  004470  645E               	goto	u5031
  7845  004472  EF3D  F022         	goto	u5030
  7846  004476  EF3F  F022         
  7847                           u5031:
  7848  00447A                     	goto	l4047
  7849  00447A  EF55  F022         u5030:
  7850  00447E                     	line	61
  7851                           	
  7852                           l4041:
  7853  00447E                     	movlw	low(0)
  7854  00447E  0E00               	movwf	((c:?___fltol)),c
  7855  004480  6E55               	movlw	high(0)
  7856  004482  0E00               	movwf	((c:?___fltol+1)),c
  7857  004484  6E56               	movlw	low highword(0)
  7858  004486  0E00               	movwf	((c:?___fltol+2)),c
  7859  004488  6E57               	movlw	high highword(0)
  7860  00448A  0E00               	movwf	((c:?___fltol+3)),c
  7861  00448C  6E58               	goto	l757
  7862  00448E  EF7D  F022         	
  7863                           l4043:
  7864  004492                     	goto	l757
  7865  004492  EF7D  F022         	
  7866                           l763:
  7867  004496                     	line	62
  7868                           	goto	l4047
  7869  004496  EF55  F022         	
  7870                           l765:
  7871  00449A                     	line	63
  7872                           	
  7873                           l4045:
  7874  00449A                     	bcf	status,0
  7875  00449A  90D8               	rlcf	((c:___fltol@f1)),c
  7876  00449C  3655               	rlcf	((c:___fltol@f1+1)),c
  7877  00449E  3656               	rlcf	((c:___fltol@f1+2)),c
  7878  0044A0  3657               	rlcf	((c:___fltol@f1+3)),c
  7879  0044A2  3658               	line	64
  7880                           	decf	((c:___fltol@exp1)),c
  7881  0044A4  065E               	goto	l4047
  7882  0044A6  EF55  F022         	line	65
  7883                           	
  7884                           l764:
  7885  0044AA                     	line	62
  7886                           	
  7887                           l4047:
  7888  0044AA                     	movf	((c:___fltol@exp1)),c,w
  7889  0044AA  505E               	btfss	status,2
  7890  0044AC  A4D8               	goto	u5041
  7891  0044AE  EF5B  F022         	goto	u5040
  7892  0044B2  EF5D  F022         u5041:
  7893  0044B6                     	goto	l4045
  7894  0044B6  EF4D  F022         u5040:
  7895  0044BA                     	goto	l4049
  7896  0044BA  EF61  F022         	
  7897                           l766:
  7898  0044BE                     	goto	l4049
  7899  0044BE  EF61  F022         	line	66
  7900                           	
  7901                           l762:
  7902  0044C2                     	line	67
  7903                           	
  7904                           l4049:
  7905  0044C2                     	movf	((c:___fltol@sign1)),c,w
  7906  0044C2  505D               	btfsc	status,2
  7907  0044C4  B4D8               	goto	u5051
  7908  0044C6  EF67  F022         	goto	u5050
  7909  0044CA  EF69  F022         u5051:
  7910  0044CE                     	goto	l4053
  7911  0044CE  EF73  F022         u5050:
  7912  0044D2                     	line	68
  7913                           	
  7914                           l4051:
  7915  0044D2                     	comf	((c:___fltol@f1+3)),c
  7916  0044D2  1E58               	comf	((c:___fltol@f1+2)),c
  7917  0044D4  1E57               	comf	((c:___fltol@f1+1)),c
  7918  0044D6  1E56               	negf	((c:___fltol@f1)),c
  7919  0044D8  6C55               	movlw	0
  7920  0044DA  0E00               	addwfc	((c:___fltol@f1+1)),c
  7921  0044DC  2256               	addwfc	((c:___fltol@f1+2)),c
  7922  0044DE  2257               	addwfc	((c:___fltol@f1+3)),c
  7923  0044E0  2258               	goto	l4053
  7924  0044E2  EF73  F022         	
  7925                           l767:
  7926  0044E6                     	line	69
  7927                           	
  7928                           l4053:
  7929  0044E6                     	movff	(c:___fltol@f1),(c:?___fltol)
  7930  0044E6  C055  F055         	movff	(c:___fltol@f1+1),(c:?___fltol+1)
  7931  0044EA  C056  F056         	movff	(c:___fltol@f1+2),(c:?___fltol+2)
  7932  0044EE  C057  F057         	movff	(c:___fltol@f1+3),(c:?___fltol+3)
  7933  0044F2  C058  F058         	goto	l757
  7934  0044F6  EF7D  F022         	
  7935                           l4055:
  7936  0044FA                     	line	70
  7937                           	
  7938                           l757:
  7939  0044FA                     	return	;funcret
  7940  0044FA  0012               	opt stack 0
  7941                           GLOBAL	__end_of___fltol
  7942                           	__end_of___fltol:
  7943  0044FC                     	signat	___fltol,4220
  7944                           	global	___flmul
  7945                           
  7946 ;; *************** function ___flmul *****************
  7947 ;; Defined at:
  7948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  b               4   14[COMRAM] long 
  7951 ;;  a               4   18[COMRAM] long 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  prod            4   33[COMRAM] struct .
  7954 ;;  grs             4   27[COMRAM] unsigned long 
  7955 ;;  temp            2   37[COMRAM] struct .
  7956 ;;  bexp            1   32[COMRAM] unsigned char 
  7957 ;;  aexp            1   31[COMRAM] unsigned char 
  7958 ;;  sign            1   26[COMRAM] unsigned char 
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  4   14[COMRAM] unsigned char 
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0, prodl, prodh
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7968 ;;      Params:         8       0       0       0       0       0       0       0       0
  7969 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7970 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7971 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7972 ;;Total ram usage:       25 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_setPeriodTo
  7978 ;;		_SetDutyCycleTo
  7979 ;;		_roundf
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           psect	text14,class=CODE,space=0,reloc=2,group=1
  7983                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  7984                           	line	8
  7985                           global __ptext14
  7986                           __ptext14:
  7987  002452                     psect	text14
  7988                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  7989                           	line	8
  7990                           	global	__size_of___flmul
  7991                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  7992  0000                     	
  7993                           ___flmul:
  7994  002452                     ;incstack = 0
  7995                           	opt	stack 27
  7996                           	line	17
  7997                           	
  7998                           l3853:
  7999  002452                     	movf	(0+((c:___flmul@b)+03h)),c,w
  8000  002452  5012               	andlw	low(080h)
  8001  002454  0B80               	movwf	((c:___flmul@sign)),c
  8002  002456  6E1B               	line	18
  8003                           	movf	(0+((c:___flmul@b)+03h)),c,w
  8004  002458  5012               	addwf	(0+((c:___flmul@b)+03h)),c,w
  8005  00245A  2412               	movwf	((c:___flmul@bexp)),c
  8006  00245C  6E21               	line	19
  8007                           	
  8008                           l3855:
  8009  00245E                     	
  8010                           	btfss	(0+((c:___flmul@b)+02h)),c,(7)&7
  8011  00245E  AE11               	goto	u4741
  8012  002460  EF34  F012         	goto	u4740
  8013  002464  EF36  F012         u4741:
  8014  002468                     	goto	l3859
  8015  002468  EF39  F012         u4740:
  8016  00246C                     	line	20
  8017                           	
  8018                           l3857:
  8019  00246C                     	bsf	(0+(0/8)+(c:___flmul@bexp)),c,(0)&7
  8020  00246C  8021               	goto	l3859
  8021  00246E  EF39  F012         	line	21
  8022                           	
  8023                           l1067:
  8024  002472                     	line	24
  8025                           	
  8026                           l3859:
  8027  002472                     	movf	((c:___flmul@bexp)),c,w
  8028  002472  5021               	btfsc	status,2
  8029  002474  B4D8               	goto	u4751
  8030  002476  EF3F  F012         	goto	u4750
  8031  00247A  EF41  F012         u4751:
  8032  00247E                     	goto	l3867
  8033  00247E  EF56  F012         u4750:
  8034  002482                     	line	26
  8035                           	
  8036                           l3861:
  8037  002482                     		incf	((c:___flmul@bexp)),c,w
  8038  002482  2821               	btfss	status,2
  8039  002484  A4D8               	goto	u4761
  8040  002486  EF47  F012         	goto	u4760
  8041  00248A  EF49  F012         
  8042                           u4761:
  8043  00248E                     	goto	l3865
  8044  00248E  EF53  F012         u4760:
  8045  002492                     	line	28
  8046                           	
  8047                           l3863:
  8048  002492                     	movlw	low(normalize32(0x0))
  8049  002492  0E00               	movwf	((c:___flmul@b)),c
  8050  002494  6E0F               	movlw	high(normalize32(0x0))
  8051  002496  0E00               	movwf	((c:___flmul@b+1)),c
  8052  002498  6E10               	movlw	low highword(normalize32(0x0))
  8053  00249A  0E00               	movwf	((c:___flmul@b+2)),c
  8054  00249C  6E11               	movlw	high highword(normalize32(0x0))
  8055  00249E  0E00               	movwf	((c:___flmul@b+3)),c
  8056  0024A0  6E12               	goto	l3865
  8057  0024A2  EF53  F012         	line	29
  8058                           	
  8059                           l1069:
  8060  0024A6                     	line	31
  8061                           	
  8062                           l3865:
  8063  0024A6                     	bsf	(0+(23/8)+(c:___flmul@b)),c,(23)&7
  8064  0024A6  8E11               	line	33
  8065                           	goto	l3869
  8066  0024A8  EF60  F012         	line	34
  8067                           	
  8068                           l1068:
  8069  0024AC                     	line	36
  8070                           	
  8071                           l3867:
  8072  0024AC                     	movlw	low(normalize32(0x0))
  8073  0024AC  0E00               	movwf	((c:___flmul@b)),c
  8074  0024AE  6E0F               	movlw	high(normalize32(0x0))
  8075  0024B0  0E00               	movwf	((c:___flmul@b+1)),c
  8076  0024B2  6E10               	movlw	low highword(normalize32(0x0))
  8077  0024B4  0E00               	movwf	((c:___flmul@b+2)),c
  8078  0024B6  6E11               	movlw	high highword(normalize32(0x0))
  8079  0024B8  0E00               	movwf	((c:___flmul@b+3)),c
  8080  0024BA  6E12               	goto	l3869
  8081  0024BC  EF60  F012         	line	37
  8082                           	
  8083                           l1070:
  8084  0024C0                     	line	39
  8085                           	
  8086                           l3869:
  8087  0024C0                     	movf	(0+((c:___flmul@a)+03h)),c,w
  8088  0024C0  5016               	andlw	low(080h)
  8089  0024C2  0B80               	xorwf	((c:___flmul@sign)),c
  8090  0024C4  1A1B               	line	40
  8091                           	
  8092                           l3871:
  8093  0024C6                     	movf	(0+((c:___flmul@a)+03h)),c,w
  8094  0024C6  5016               	addwf	(0+((c:___flmul@a)+03h)),c,w
  8095  0024C8  2416               	movwf	((c:___flmul@aexp)),c
  8096  0024CA  6E20               	line	41
  8097                           	
  8098                           l3873:
  8099  0024CC                     	
  8100                           	btfss	(0+((c:___flmul@a)+02h)),c,(7)&7
  8101  0024CC  AE15               	goto	u4771
  8102  0024CE  EF6B  F012         	goto	u4770
  8103  0024D2  EF6D  F012         u4771:
  8104  0024D6                     	goto	l3877
  8105  0024D6  EF70  F012         u4770:
  8106  0024DA                     	line	42
  8107                           	
  8108                           l3875:
  8109  0024DA                     	bsf	(0+(0/8)+(c:___flmul@aexp)),c,(0)&7
  8110  0024DA  8020               	goto	l3877
  8111  0024DC  EF70  F012         	line	43
  8112                           	
  8113                           l1071:
  8114  0024E0                     	line	45
  8115                           	
  8116                           l3877:
  8117  0024E0                     	movf	((c:___flmul@aexp)),c,w
  8118  0024E0  5020               	btfsc	status,2
  8119  0024E2  B4D8               	goto	u4781
  8120  0024E4  EF76  F012         	goto	u4780
  8121  0024E8  EF78  F012         u4781:
  8122  0024EC                     	goto	l3885
  8123  0024EC  EF8D  F012         u4780:
  8124  0024F0                     	line	48
  8125                           	
  8126                           l3879:
  8127  0024F0                     		incf	((c:___flmul@aexp)),c,w
  8128  0024F0  2820               	btfss	status,2
  8129  0024F2  A4D8               	goto	u4791
  8130  0024F4  EF7E  F012         	goto	u4790
  8131  0024F8  EF80  F012         
  8132                           u4791:
  8133  0024FC                     	goto	l3883
  8134  0024FC  EF8A  F012         u4790:
  8135  002500                     	line	50
  8136                           	
  8137                           l3881:
  8138  002500                     	movlw	low(normalize32(0x0))
  8139  002500  0E00               	movwf	((c:___flmul@a)),c
  8140  002502  6E13               	movlw	high(normalize32(0x0))
  8141  002504  0E00               	movwf	((c:___flmul@a+1)),c
  8142  002506  6E14               	movlw	low highword(normalize32(0x0))
  8143  002508  0E00               	movwf	((c:___flmul@a+2)),c
  8144  00250A  6E15               	movlw	high highword(normalize32(0x0))
  8145  00250C  0E00               	movwf	((c:___flmul@a+3)),c
  8146  00250E  6E16               	goto	l3883
  8147  002510  EF8A  F012         	line	51
  8148                           	
  8149                           l1073:
  8150  002514                     	line	53
  8151                           	
  8152                           l3883:
  8153  002514                     	bsf	(0+(23/8)+(c:___flmul@a)),c,(23)&7
  8154  002514  8E15               	line	54
  8155                           	goto	l1074
  8156  002516  EF95  F012         	line	55
  8157                           	
  8158                           l1072:
  8159  00251A                     	line	57
  8160                           	
  8161                           l3885:
  8162  00251A                     	movlw	low(normalize32(0x0))
  8163  00251A  0E00               	movwf	((c:___flmul@a)),c
  8164  00251C  6E13               	movlw	high(normalize32(0x0))
  8165  00251E  0E00               	movwf	((c:___flmul@a+1)),c
  8166  002520  6E14               	movlw	low highword(normalize32(0x0))
  8167  002522  0E00               	movwf	((c:___flmul@a+2)),c
  8168  002524  6E15               	movlw	high highword(normalize32(0x0))
  8169  002526  0E00               	movwf	((c:___flmul@a+3)),c
  8170  002528  6E16               	line	58
  8171                           	
  8172                           l1074:
  8173  00252A                     	line	65
  8174                           	movf	((c:___flmul@aexp)),c,w
  8175  00252A  5020               	btfsc	status,2
  8176  00252C  B4D8               	goto	u4801
  8177  00252E  EF9B  F012         	goto	u4800
  8178  002532  EF9D  F012         u4801:
  8179  002536                     	goto	l3889
  8180  002536  EFA7  F012         u4800:
  8181  00253A                     	
  8182                           l3887:
  8183  00253A                     	movf	((c:___flmul@bexp)),c,w
  8184  00253A  5021               	btfss	status,2
  8185  00253C  A4D8               	goto	u4811
  8186  00253E  EFA3  F012         	goto	u4810
  8187  002542  EFA5  F012         u4811:
  8188  002546                     	goto	l3893
  8189  002546  EFB3  F012         u4810:
  8190  00254A                     	goto	l3889
  8191  00254A  EFA7  F012         	
  8192                           l1077:
  8193  00254E                     	line	66
  8194                           	
  8195                           l3889:
  8196  00254E                     	movlw	low(normalize32(0x0))
  8197  00254E  0E00               	movwf	((c:?___flmul)),c
  8198  002550  6E0F               	movlw	high(normalize32(0x0))
  8199  002552  0E00               	movwf	((c:?___flmul+1)),c
  8200  002554  6E10               	movlw	low highword(normalize32(0x0))
  8201  002556  0E00               	movwf	((c:?___flmul+2)),c
  8202  002558  6E11               	movlw	high highword(normalize32(0x0))
  8203  00255A  0E00               	movwf	((c:?___flmul+3)),c
  8204  00255C  6E12               	goto	l1078
  8205  00255E  EF5F  F014         	
  8206                           l3891:
  8207  002562                     	goto	l1078
  8208  002562  EF5F  F014         	line	67
  8209                           	
  8210                           l1075:
  8211  002566                     	line	95
  8212                           	
  8213                           l3893:
  8214  002566                     	movf	(0+((c:___flmul@a)+02h)),c,w
  8215  002566  5015               	mulwf	((c:___flmul@b)),c
  8216  002568  020F               	movff	prodl,(c:___flmul@temp)
  8217  00256A  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  8218  00256E  CFF4 F027          	line	96
  8219                           	
  8220                           l3895:
  8221  002572                     	movf	((c:___flmul@temp)),c,w
  8222  002572  5026               	movwf	((c:___flmul@grs)),c
  8223  002574  6E1C               	clrf	((c:___flmul@grs+1)),c
  8224  002576  6A1D               	clrf	((c:___flmul@grs+2)),c
  8225  002578  6A1E               	clrf	((c:___flmul@grs+3)),c
  8226  00257A  6A1F               
  8227                           	line	97
  8228                           	
  8229                           l3897:
  8230  00257C                     	movf	(0+((c:___flmul@temp)+01h)),c,w
  8231  00257C  5027               	movwf	((c:___flmul@prod)),c
  8232  00257E  6E22               	clrf	((c:___flmul@prod+1)),c
  8233  002580  6A23               	clrf	((c:___flmul@prod+2)),c
  8234  002582  6A24               	clrf	((c:___flmul@prod+3)),c
  8235  002584  6A25               
  8236                           	line	98
  8237                           	movf	(0+((c:___flmul@a)+01h)),c,w
  8238  002586  5014               	mulwf	(0+((c:___flmul@b)+01h)),c
  8239  002588  0210               	movff	prodl,(c:___flmul@temp)
  8240  00258A  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  8241  00258E  CFF4 F027          	line	99
  8242                           	
  8243                           l3899:
  8244  002592                     	movf	((c:___flmul@temp)),c,w
  8245  002592  5026               	addwf	((c:___flmul@grs)),c
  8246  002594  261C               	movlw	0
  8247  002596  0E00               	addwfc	((c:___flmul@grs+1)),c
  8248  002598  221D               	addwfc	((c:___flmul@grs+2)),c
  8249  00259A  221E               	addwfc	((c:___flmul@grs+3)),c
  8250  00259C  221F               	line	100
  8251                           	
  8252                           l3901:
  8253  00259E                     	movf	(0+((c:___flmul@temp)+01h)),c,w
  8254  00259E  5027               	addwf	((c:___flmul@prod)),c
  8255  0025A0  2622               	movlw	0
  8256  0025A2  0E00               	addwfc	((c:___flmul@prod+1)),c
  8257  0025A4  2223               	addwfc	((c:___flmul@prod+2)),c
  8258  0025A6  2224               	addwfc	((c:___flmul@prod+3)),c
  8259  0025A8  2225               	line	101
  8260                           	movf	((c:___flmul@a)),c,w
  8261  0025AA  5013               	mulwf	(0+((c:___flmul@b)+02h)),c
  8262  0025AC  0211               	movff	prodl,(c:___flmul@temp)
  8263  0025AE  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  8264  0025B2  CFF4 F027          	line	102
  8265                           	
  8266                           l3903:
  8267  0025B6                     	movf	((c:___flmul@temp)),c,w
  8268  0025B6  5026               	addwf	((c:___flmul@grs)),c
  8269  0025B8  261C               	movlw	0
  8270  0025BA  0E00               	addwfc	((c:___flmul@grs+1)),c
  8271  0025BC  221D               	addwfc	((c:___flmul@grs+2)),c
  8272  0025BE  221E               	addwfc	((c:___flmul@grs+3)),c
  8273  0025C0  221F               	line	103
  8274                           	
  8275                           l3905:
  8276  0025C2                     	movf	(0+((c:___flmul@temp)+01h)),c,w
  8277  0025C2  5027               	addwf	((c:___flmul@prod)),c
  8278  0025C4  2622               	movlw	0
  8279  0025C6  0E00               	addwfc	((c:___flmul@prod+1)),c
  8280  0025C8  2223               	addwfc	((c:___flmul@prod+2)),c
  8281  0025CA  2224               	addwfc	((c:___flmul@prod+3)),c
  8282  0025CC  2225               	line	104
  8283                           	
  8284                           l3907:
  8285  0025CE                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
  8286  0025CE  C01E  F01F         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
  8287  0025D2  C01D  F01E         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
  8288  0025D6  C01C  F01D         	clrf	((c:___flmul@grs)),c
  8289  0025DA  6A1C               	line	105
  8290                           	
  8291                           l3909:
  8292  0025DC                     	movf	((c:___flmul@a)),c,w
  8293  0025DC  5013               	mulwf	(0+((c:___flmul@b)+01h)),c
  8294  0025DE  0210               	movff	prodl,(c:___flmul@temp)
  8295  0025E0  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  8296  0025E4  CFF4 F027          	line	106
  8297                           	
  8298                           l3911:
  8299  0025E8                     	movf	((c:___flmul@temp)),c,w
  8300  0025E8  5026               	addwf	((c:___flmul@grs)),c
  8301  0025EA  261C               	movf	((c:___flmul@temp+1)),c,w
  8302  0025EC  5027               	addwfc	((c:___flmul@grs+1)),c
  8303  0025EE  221D               	movlw	0
  8304  0025F0  0E00               	addwfc	((c:___flmul@grs+2)),c
  8305  0025F2  221E               	movlw	0
  8306  0025F4  0E00               	addwfc	((c:___flmul@grs+3)),c
  8307  0025F6  221F               
  8308                           	line	107
  8309                           	
  8310                           l3913:
  8311  0025F8                     	movf	(0+((c:___flmul@a)+01h)),c,w
  8312  0025F8  5014               	mulwf	((c:___flmul@b)),c
  8313  0025FA  020F               	movff	prodl,(c:___flmul@temp)
  8314  0025FC  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  8315  002600  CFF4 F027          	line	108
  8316                           	
  8317                           l3915:
  8318  002604                     	movf	((c:___flmul@temp)),c,w
  8319  002604  5026               	addwf	((c:___flmul@grs)),c
  8320  002606  261C               	movf	((c:___flmul@temp+1)),c,w
  8321  002608  5027               	addwfc	((c:___flmul@grs+1)),c
  8322  00260A  221D               	movlw	0
  8323  00260C  0E00               	addwfc	((c:___flmul@grs+2)),c
  8324  00260E  221E               	movlw	0
  8325  002610  0E00               	addwfc	((c:___flmul@grs+3)),c
  8326  002612  221F               
  8327                           	line	109
  8328                           	
  8329                           l3917:
  8330  002614                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
  8331  002614  C01E  F01F         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
  8332  002618  C01D  F01E         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
  8333  00261C  C01C  F01D         	clrf	((c:___flmul@grs)),c
  8334  002620  6A1C               	line	110
  8335                           	movf	((c:___flmul@a)),c,w
  8336  002622  5013               	mulwf	((c:___flmul@b)),c
  8337  002624  020F               	movff	prodl,(c:___flmul@temp)
  8338  002626  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  8339  00262A  CFF4 F027          	line	111
  8340                           	
  8341                           l3919:
  8342  00262E                     	movf	((c:___flmul@temp)),c,w
  8343  00262E  5026               	addwf	((c:___flmul@grs)),c
  8344  002630  261C               	movf	((c:___flmul@temp+1)),c,w
  8345  002632  5027               	addwfc	((c:___flmul@grs+1)),c
  8346  002634  221D               	movlw	0
  8347  002636  0E00               	addwfc	((c:___flmul@grs+2)),c
  8348  002638  221E               	movlw	0
  8349  00263A  0E00               	addwfc	((c:___flmul@grs+3)),c
  8350  00263C  221F               
  8351                           	line	112
  8352                           	
  8353                           l3921:
  8354  00263E                     	movf	(0+((c:___flmul@a)+02h)),c,w
  8355  00263E  5015               	mulwf	(0+((c:___flmul@b)+01h)),c
  8356  002640  0210               	movff	prodl,(c:___flmul@temp)
  8357  002642  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  8358  002646  CFF4 F027          	line	113
  8359                           	movf	((c:___flmul@temp)),c,w
  8360  00264A  5026               	addwf	((c:___flmul@prod)),c
  8361  00264C  2622               	movf	((c:___flmul@temp+1)),c,w
  8362  00264E  5027               	addwfc	((c:___flmul@prod+1)),c
  8363  002650  2223               	movlw	0
  8364  002652  0E00               	addwfc	((c:___flmul@prod+2)),c
  8365  002654  2224               	movlw	0
  8366  002656  0E00               	addwfc	((c:___flmul@prod+3)),c
  8367  002658  2225               
  8368                           	line	114
  8369                           	
  8370                           l3923:
  8371  00265A                     	movf	(0+((c:___flmul@a)+01h)),c,w
  8372  00265A  5014               	mulwf	(0+((c:___flmul@b)+02h)),c
  8373  00265C  0211               	movff	prodl,(c:___flmul@temp)
  8374  00265E  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  8375  002662  CFF4 F027          	line	115
  8376                           	
  8377                           l3925:
  8378  002666                     	movf	((c:___flmul@temp)),c,w
  8379  002666  5026               	addwf	((c:___flmul@prod)),c
  8380  002668  2622               	movf	((c:___flmul@temp+1)),c,w
  8381  00266A  5027               	addwfc	((c:___flmul@prod+1)),c
  8382  00266C  2223               	movlw	0
  8383  00266E  0E00               	addwfc	((c:___flmul@prod+2)),c
  8384  002670  2224               	movlw	0
  8385  002672  0E00               	addwfc	((c:___flmul@prod+3)),c
  8386  002674  2225               
  8387                           	line	116
  8388                           	movf	(0+((c:___flmul@a)+02h)),c,w
  8389  002676  5015               	mulwf	(0+((c:___flmul@b)+02h)),c
  8390  002678  0211               	movff	prodl,(c:___flmul@temp)
  8391  00267A  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  8392  00267E  CFF4 F027          	line	117
  8393                           	
  8394                           l3927:
  8395  002682                     	movf	((c:___flmul@temp)),c,w
  8396  002682  5026               	movwf	(??___flmul+0+0)&0ffh,c
  8397  002684  6E17               	movf	((c:___flmul@temp+1)),c,w
  8398  002686  5027               	movwf	1+(??___flmul+0+0)&0ffh,c
  8399  002688  6E18               	
  8400                           	clrf	2+(??___flmul+0+0)&0ffh,c
  8401  00268A  6A19               	
  8402                           	clrf	3+(??___flmul+0+0)&0ffh,c
  8403  00268C  6A1A               	movff	??___flmul+0+2,??___flmul+0+3
  8404  00268E  C019  F01A         	movff	??___flmul+0+1,??___flmul+0+2
  8405  002692  C018  F019         	movff	??___flmul+0+0,??___flmul+0+1
  8406  002696  C017  F018         	clrf	(??___flmul+0+0),c
  8407  00269A  6A17               	movf	(??___flmul+0+0),c,w
  8408  00269C  5017               	addwf	((c:___flmul@prod)),c
  8409  00269E  2622               	movf	(??___flmul+0+1),c,w
  8410  0026A0  5018               	addwfc	((c:___flmul@prod+1)),c
  8411  0026A2  2223               	movf	(??___flmul+0+2),c,w
  8412  0026A4  5019               	addwfc	((c:___flmul@prod+2)),c
  8413  0026A6  2224               	movf	(??___flmul+0+3),c,w
  8414  0026A8  501A               	addwfc	((c:___flmul@prod+3)),c
  8415  0026AA  2225               
  8416                           	line	145
  8417                           	
  8418                           l3929:
  8419  0026AC                     	movff	(c:___flmul@grs),??___flmul+0+0
  8420  0026AC  C01C  F017         	movff	(c:___flmul@grs+1),??___flmul+0+0+1
  8421  0026B0  C01D  F018         	movff	(c:___flmul@grs+2),??___flmul+0+0+2
  8422  0026B4  C01E  F019         	movff	(c:___flmul@grs+3),??___flmul+0+0+3
  8423  0026B8  C01F  F01A         	movlw	018h+1
  8424  0026BC  0E19               	goto	u4820
  8425  0026BE  EF66  F013         u4825:
  8426  0026C2                     	bcf	status,0
  8427  0026C2  90D8               	rrcf	(??___flmul+0+3),c
  8428  0026C4  321A               	rrcf	(??___flmul+0+2),c
  8429  0026C6  3219               	rrcf	(??___flmul+0+1),c
  8430  0026C8  3218               	rrcf	(??___flmul+0+0),c
  8431  0026CA  3217               u4820:
  8432  0026CC                     	decfsz	wreg
  8433  0026CC  2EE8               	goto	u4825
  8434  0026CE  EF61  F013         	movf	(??___flmul+0+0),c,w
  8435  0026D2  5017               	addwf	((c:___flmul@prod)),c
  8436  0026D4  2622               	movf	(??___flmul+0+1),c,w
  8437  0026D6  5018               	addwfc	((c:___flmul@prod+1)),c
  8438  0026D8  2223               	movf	(??___flmul+0+2),c,w
  8439  0026DA  5019               	addwfc	((c:___flmul@prod+2)),c
  8440  0026DC  2224               	movf	(??___flmul+0+3),c,w
  8441  0026DE  501A               	addwfc	((c:___flmul@prod+3)),c
  8442  0026E0  2225               
  8443                           	line	146
  8444                           	
  8445                           l3931:
  8446  0026E2                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
  8447  0026E2  C01E  F01F         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
  8448  0026E6  C01D  F01E         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
  8449  0026EA  C01C  F01D         	clrf	((c:___flmul@grs)),c
  8450  0026EE  6A1C               	line	149
  8451                           	
  8452                           l3933:
  8453  0026F0                     	movf	((c:___flmul@aexp)),c,w
  8454  0026F0  5020               	movff	(c:___flmul@bexp),??___flmul+0+0
  8455  0026F2  C021  F017         	clrf	(??___flmul+0+0+1)&0ffh,c
  8456  0026F6  6A18               	addwf	(??___flmul+0+0),c
  8457  0026F8  2617               	movlw	0
  8458  0026FA  0E00               	addwfc	(??___flmul+0+1),c
  8459  0026FC  2218               	movlw	low(-126)
  8460  0026FE  0E82               	addwf	(??___flmul+0+0),c,w
  8461  002700  2417               	movwf	((c:___flmul@temp)),c
  8462  002702  6E26               	movlw	high(-126)
  8463  002704  0EFF               	addwfc	(??___flmul+0+1),c,w
  8464  002706  2018               	movwf	1+((c:___flmul@temp)),c
  8465  002708  6E27               	line	152
  8466                           	goto	l3941
  8467  00270A  EF9E  F013         	
  8468                           l1080:
  8469  00270E                     	line	153
  8470                           	
  8471                           l3935:
  8472  00270E                     	bcf	status,0
  8473  00270E  90D8               	rlcf	((c:___flmul@prod)),c
  8474  002710  3622               	rlcf	((c:___flmul@prod+1)),c
  8475  002712  3623               	rlcf	((c:___flmul@prod+2)),c
  8476  002714  3624               	rlcf	((c:___flmul@prod+3)),c
  8477  002716  3625               	line	154
  8478                           	
  8479                           l3937:
  8480  002718                     	
  8481                           	btfss	((c:___flmul@grs+3)),c,(31)&7
  8482  002718  AE1F               	goto	u4831
  8483  00271A  EF91  F013         	goto	u4830
  8484  00271E  EF93  F013         u4831:
  8485  002722                     	goto	l1081
  8486  002722  EF94  F013         u4830:
  8487  002726                     	line	155
  8488                           	
  8489                           l3939:
  8490  002726                     	bsf	(0+(0/8)+(c:___flmul@prod)),c,(0)&7
  8491  002726  8022               	line	156
  8492                           	
  8493                           l1081:
  8494  002728                     	line	157
  8495                           	bcf	status,0
  8496  002728  90D8               	rlcf	((c:___flmul@grs)),c
  8497  00272A  361C               	rlcf	((c:___flmul@grs+1)),c
  8498  00272C  361D               	rlcf	((c:___flmul@grs+2)),c
  8499  00272E  361E               	rlcf	((c:___flmul@grs+3)),c
  8500  002730  361F               	line	158
  8501                           	decf	((c:___flmul@temp)),c
  8502  002732  0626               	btfss	status,0
  8503  002734  A0D8               	decf	((c:___flmul@temp+1)),c
  8504  002736  0627               	goto	l3941
  8505  002738  EF9E  F013         	line	159
  8506                           	
  8507                           l1079:
  8508  00273C                     	line	152
  8509                           	
  8510                           l3941:
  8511  00273C                     	
  8512                           	btfss	((c:___flmul@prod+2)),c,(23)&7
  8513  00273C  AE24               	goto	u4841
  8514  00273E  EFA3  F013         	goto	u4840
  8515  002742  EFA5  F013         u4841:
  8516  002746                     	goto	l3935
  8517  002746  EF87  F013         u4840:
  8518  00274A                     	goto	l3943
  8519  00274A  EFA7  F013         	
  8520                           l1082:
  8521  00274E                     	line	163
  8522                           	
  8523                           l3943:
  8524  00274E                     	movlw	low(0)
  8525  00274E  0E00               	movwf	((c:___flmul@aexp)),c
  8526  002750  6E20               	line	164
  8527                           	
  8528                           l3945:
  8529  002752                     	
  8530                           	btfss	((c:___flmul@grs+3)),c,(31)&7
  8531  002752  AE1F               	goto	u4851
  8532  002754  EFAE  F013         	goto	u4850
  8533  002758  EFB0  F013         u4851:
  8534  00275C                     	goto	l1083
  8535  00275C  EFD8  F013         u4850:
  8536  002760                     	line	165
  8537                           	
  8538                           l3947:
  8539  002760                     	movlw	0FFh
  8540  002760  0EFF               	andwf	((c:___flmul@grs)),c,w
  8541  002762  141C               	movwf	(??___flmul+0+0)&0ffh,c
  8542  002764  6E17               	movlw	0FFh
  8543  002766  0EFF               	andwf	((c:___flmul@grs+1)),c,w
  8544  002768  141D               	movwf	1+(??___flmul+0+0)&0ffh,c
  8545  00276A  6E18               	
  8546                           	movlw	0FFh
  8547  00276C  0EFF               	andwf	((c:___flmul@grs+2)),c,w
  8548  00276E  141E               	movwf	2+(??___flmul+0+0)&0ffh,c
  8549  002770  6E19               	
  8550                           	movlw	07Fh
  8551  002772  0E7F               	andwf	((c:___flmul@grs+3)),c,w
  8552  002774  141F               	movwf	3+(??___flmul+0+0)&0ffh,c
  8553  002776  6E1A               	movf	(??___flmul+0+0),c,w
  8554  002778  5017               iorwf	(??___flmul+0+1),c,w
  8555  00277A  1018               iorwf	(??___flmul+0+2),c,w
  8556  00277C  1019               iorwf	(??___flmul+0+3),c,w
  8557  00277E  101A               	btfsc	status,2
  8558  002780  B4D8               	goto	u4861
  8559  002782  EFC5  F013         	goto	u4860
  8560  002786  EFC7  F013         
  8561                           u4861:
  8562  00278A                     	goto	l1084
  8563  00278A  EFCB  F013         u4860:
  8564  00278E                     	line	166
  8565                           	
  8566                           l3949:
  8567  00278E                     	movlw	low(01h)
  8568  00278E  0E01               	movwf	((c:___flmul@aexp)),c
  8569  002790  6E20               	line	167
  8570                           	goto	l1083
  8571  002792  EFD8  F013         	line	168
  8572                           	
  8573                           l1084:
  8574  002796                     	line	169
  8575                           	
  8576                           	btfss	((c:___flmul@prod)),c,(0)&7
  8577  002796  A022               	goto	u4871
  8578  002798  EFD0  F013         	goto	u4870
  8579  00279C  EFD2  F013         u4871:
  8580  0027A0                     	goto	l1083
  8581  0027A0  EFD8  F013         u4870:
  8582  0027A4                     	line	170
  8583                           	
  8584                           l3951:
  8585  0027A4                     	movlw	low(01h)
  8586  0027A4  0E01               	movwf	((c:___flmul@aexp)),c
  8587  0027A6  6E20               	goto	l1083
  8588  0027A8  EFD8  F013         	line	171
  8589                           	
  8590                           l1086:
  8591  0027AC                     	goto	l1083
  8592  0027AC  EFD8  F013         	line	172
  8593                           	
  8594                           l1085:
  8595  0027B0                     	line	173
  8596                           	
  8597                           l1083:
  8598  0027B0                     	line	174
  8599                           	movf	((c:___flmul@aexp)),c,w
  8600  0027B0  5020               	btfsc	status,2
  8601  0027B2  B4D8               	goto	u4881
  8602  0027B4  EFDE  F013         	goto	u4880
  8603  0027B8  EFE0  F013         u4881:
  8604  0027BC                     	goto	l3961
  8605  0027BC  EF08  F014         u4880:
  8606  0027C0                     	line	175
  8607                           	
  8608                           l3953:
  8609  0027C0                     	movlw	low(01h)
  8610  0027C0  0E01               	addwf	((c:___flmul@prod)),c
  8611  0027C2  2622               	movlw	0
  8612  0027C4  0E00               	addwfc	((c:___flmul@prod+1)),c
  8613  0027C6  2223               	addwfc	((c:___flmul@prod+2)),c
  8614  0027C8  2224               	addwfc	((c:___flmul@prod+3)),c
  8615  0027CA  2225               	line	176
  8616                           	
  8617                           l3955:
  8618  0027CC                     	
  8619                           	btfss	((c:___flmul@prod+3)),c,(24)&7
  8620  0027CC  A025               	goto	u4891
  8621  0027CE  EFEB  F013         	goto	u4890
  8622  0027D2  EFED  F013         u4891:
  8623  0027D6                     	goto	l3961
  8624  0027D6  EF08  F014         u4890:
  8625  0027DA                     	line	177
  8626                           	
  8627                           l3957:
  8628  0027DA                     	movff	(c:___flmul@prod),??___flmul+0+0
  8629  0027DA  C022  F017         	movff	(c:___flmul@prod+1),??___flmul+0+0+1
  8630  0027DE  C023  F018         	movff	(c:___flmul@prod+2),??___flmul+0+0+2
  8631  0027E2  C024  F019         	movff	(c:___flmul@prod+3),??___flmul+0+0+3
  8632  0027E6  C025  F01A         	rlcf	(??___flmul+0+3),c,w
  8633  0027EA  341A               	rrcf	(??___flmul+0+3),c
  8634  0027EC  321A               	rrcf	(??___flmul+0+2),c
  8635  0027EE  3219               	rrcf	(??___flmul+0+1),c
  8636  0027F0  3218               	rrcf	(??___flmul+0+0),c
  8637  0027F2  3217               	movff	??___flmul+0+0,(c:___flmul@prod)
  8638  0027F4  C017  F022         	movff	??___flmul+0+1,(c:___flmul@prod+1)
  8639  0027F8  C018  F023         	movff	??___flmul+0+2,(c:___flmul@prod+2)
  8640  0027FC  C019  F024         	movff	??___flmul+0+3,(c:___flmul@prod+3)
  8641  002800  C01A  F025         	line	178
  8642                           	
  8643                           l3959:
  8644  002804                     	infsnz	((c:___flmul@temp)),c
  8645  002804  4A26               	incf	((c:___flmul@temp+1)),c
  8646  002806  2A27               	goto	l3961
  8647  002808  EF08  F014         	line	179
  8648                           	
  8649                           l1088:
  8650  00280C                     	goto	l3961
  8651  00280C  EF08  F014         	line	180
  8652                           	
  8653                           l1087:
  8654  002810                     	line	183
  8655                           	
  8656                           l3961:
  8657  002810                     	btfsc	((c:___flmul@temp+1)),c,7
  8658  002810  BE27               	goto	u4901
  8659  002812  EF13  F014         	movf	((c:___flmul@temp+1)),c,w
  8660  002816  5027               	bnz	u4900
  8661  002818  E108               	incf	((c:___flmul@temp)),c,w
  8662  00281A  2826               	btfss	status,0
  8663  00281C  A0D8               	goto	u4901
  8664  00281E  EF13  F014         	goto	u4900
  8665  002822  EF15  F014         
  8666                           u4901:
  8667  002826                     	goto	l3965
  8668  002826  EF1F  F014         u4900:
  8669  00282A                     	line	184
  8670                           	
  8671                           l3963:
  8672  00282A                     	movlw	low(07F800000h)
  8673  00282A  0E00               	movwf	((c:___flmul@prod)),c
  8674  00282C  6E22               	movlw	high(07F800000h)
  8675  00282E  0E00               	movwf	((c:___flmul@prod+1)),c
  8676  002830  6E23               	movlw	low highword(07F800000h)
  8677  002832  0E80               	movwf	((c:___flmul@prod+2)),c
  8678  002834  6E24               	movlw	high highword(07F800000h)
  8679  002836  0E7F               	movwf	((c:___flmul@prod+3)),c
  8680  002838  6E25               	line	185
  8681                           	goto	l3977
  8682  00283A  EF53  F014         	line	187
  8683                           	
  8684                           l1089:
  8685  00283E                     	
  8686                           l3965:
  8687  00283E                     	btfsc	((c:___flmul@temp+1)),c,7
  8688  00283E  BE27               	goto	u4910
  8689  002840  EF2C  F014         	movf	((c:___flmul@temp+1)),c,w
  8690  002844  5027               	bnz	u4911
  8691  002846  E106               	decf	((c:___flmul@temp)),c,w
  8692  002848  0426               	btfsc	status,0
  8693  00284A  B0D8               	goto	u4911
  8694  00284C  EF2A  F014         	goto	u4910
  8695  002850  EF2C  F014         
  8696                           u4911:
  8697  002854                     	goto	l1091
  8698  002854  EF38  F014         u4910:
  8699  002858                     	line	188
  8700                           	
  8701                           l3967:
  8702  002858                     	movlw	low(0)
  8703  002858  0E00               	movwf	((c:___flmul@prod)),c
  8704  00285A  6E22               	movlw	high(0)
  8705  00285C  0E00               	movwf	((c:___flmul@prod+1)),c
  8706  00285E  6E23               	movlw	low highword(0)
  8707  002860  0E00               	movwf	((c:___flmul@prod+2)),c
  8708  002862  6E24               	movlw	high highword(0)
  8709  002864  0E00               	movwf	((c:___flmul@prod+3)),c
  8710  002866  6E25               	line	190
  8711                           	movlw	low(0)
  8712  002868  0E00               	movwf	((c:___flmul@sign)),c
  8713  00286A  6E1B               	line	191
  8714                           	goto	l3977
  8715  00286C  EF53  F014         	line	192
  8716                           	
  8717                           l1091:
  8718  002870                     	line	194
  8719                           	movff	(c:___flmul@temp),(c:___flmul@bexp)
  8720  002870  C026  F021         	line	195
  8721                           	
  8722                           l3969:
  8723  002874                     	movlw	0FFh
  8724  002874  0EFF               	andwf	((c:___flmul@prod)),c
  8725  002876  1622               	movlw	0FFh
  8726  002878  0EFF               	andwf	((c:___flmul@prod+1)),c
  8727  00287A  1623               	movlw	07Fh
  8728  00287C  0E7F               	andwf	((c:___flmul@prod+2)),c
  8729  00287E  1624               	movlw	0
  8730  002880  0E00               	andwf	((c:___flmul@prod+3)),c
  8731  002882  1625               	line	196
  8732                           	
  8733                           l3971:
  8734  002884                     	
  8735                           	btfss	((c:___flmul@bexp)),c,(0)&7
  8736  002884  A021               	goto	u4921
  8737  002886  EF47  F014         	goto	u4920
  8738  00288A  EF49  F014         u4921:
  8739  00288E                     	goto	l3975
  8740  00288E  EF4C  F014         u4920:
  8741  002892                     	line	197
  8742                           	
  8743                           l3973:
  8744  002892                     	bsf	(0+(7/8)+0+((c:___flmul@prod)+02h)),c,(7)&7
  8745  002892  8E24               	goto	l3975
  8746  002894  EF4C  F014         	line	198
  8747                           	
  8748                           l1093:
  8749  002898                     	line	199
  8750                           	
  8751                           l3975:
  8752  002898                     	bcf	status,0
  8753  002898  90D8               	rrcf	((c:___flmul@bexp)),c,w
  8754  00289A  3021               	movwf	(0+((c:___flmul@prod)+03h)),c
  8755  00289C  6E25               	goto	l3977
  8756  00289E  EF53  F014         	line	200
  8757                           	
  8758                           l1092:
  8759  0028A2                     	goto	l3977
  8760  0028A2  EF53  F014         	
  8761                           l1090:
  8762  0028A6                     	line	201
  8763                           	
  8764                           l3977:
  8765  0028A6                     	movf	((c:___flmul@sign)),c,w
  8766  0028A6  501B               	iorwf	(0+((c:___flmul@prod)+03h)),c
  8767  0028A8  1225               	line	203
  8768                           	
  8769                           l3979:
  8770  0028AA                     	movff	(c:___flmul@prod),(c:?___flmul)
  8771  0028AA  C022  F00F         	movff	(c:___flmul@prod+1),(c:?___flmul+1)
  8772  0028AE  C023  F010         	movff	(c:___flmul@prod+2),(c:?___flmul+2)
  8773  0028B2  C024  F011         	movff	(c:___flmul@prod+3),(c:?___flmul+3)
  8774  0028B6  C025  F012         	goto	l1078
  8775  0028BA  EF5F  F014         	
  8776                           l3981:
  8777  0028BE                     	line	205
  8778                           	
  8779                           l1078:
  8780  0028BE                     	return	;funcret
  8781  0028BE  0012               	opt stack 0
  8782                           GLOBAL	__end_of___flmul
  8783                           	__end_of___flmul:
  8784  0028C0                     	signat	___flmul,8316
  8785                           	global	___fldiv
  8786                           
  8787 ;; *************** function ___fldiv *****************
  8788 ;; Defined at:
  8789 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;  b               4   39[COMRAM] unsigned char 
  8792 ;;  a               4   43[COMRAM] unsigned char 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  grs             4   58[COMRAM] unsigned long 
  8795 ;;  rem             4   51[COMRAM] unsigned long 
  8796 ;;  new_exp         2   56[COMRAM] short 
  8797 ;;  aexp            1   63[COMRAM] unsigned char 
  8798 ;;  bexp            1   62[COMRAM] unsigned char 
  8799 ;;  sign            1   55[COMRAM] unsigned char 
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  4   39[COMRAM] unsigned char 
  8802 ;; Registers used:
  8803 ;;		wreg, status,2, status,0
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8809 ;;      Params:         8       0       0       0       0       0       0       0       0
  8810 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8811 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8812 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8813 ;;Total ram usage:       25 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_setPeriodTo
  8819 ;;		_SetDutyCycleTo
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           psect	text15,class=CODE,space=0,reloc=2,group=1
  8823                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
  8824                           	line	11
  8825                           global __ptext15
  8826                           __ptext15:
  8827  0028C0                     psect	text15
  8828                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
  8829                           	line	11
  8830                           	global	__size_of___fldiv
  8831                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  8832  0000                     	
  8833                           ___fldiv:
  8834  0028C0                     ;incstack = 0
  8835                           	opt	stack 28
  8836                           	line	26
  8837                           	
  8838                           l3715:
  8839  0028C0                     	movf	(0+((c:___fldiv@b)+03h)),c,w
  8840  0028C0  502B               	andlw	low(080h)
  8841  0028C2  0B80               	movwf	((c:___fldiv@sign)),c
  8842  0028C4  6E38               	line	27
  8843                           	movf	(0+((c:___fldiv@b)+03h)),c,w
  8844  0028C6  502B               	addwf	(0+((c:___fldiv@b)+03h)),c,w
  8845  0028C8  242B               	movwf	((c:___fldiv@bexp)),c
  8846  0028CA  6E3F               	line	28
  8847                           	
  8848                           l3717:
  8849  0028CC                     	
  8850                           	btfss	(0+((c:___fldiv@b)+02h)),c,(7)&7
  8851  0028CC  AE2A               	goto	u4511
  8852  0028CE  EF6B  F014         	goto	u4510
  8853  0028D2  EF6D  F014         u4511:
  8854  0028D6                     	goto	l3721
  8855  0028D6  EF70  F014         u4510:
  8856  0028DA                     	line	29
  8857                           	
  8858                           l3719:
  8859  0028DA                     	bsf	(0+(0/8)+(c:___fldiv@bexp)),c,(0)&7
  8860  0028DA  803F               	goto	l3721
  8861  0028DC  EF70  F014         	line	30
  8862                           	
  8863                           l1033:
  8864  0028E0                     	line	33
  8865                           	
  8866                           l3721:
  8867  0028E0                     	movf	((c:___fldiv@bexp)),c,w
  8868  0028E0  503F               	btfsc	status,2
  8869  0028E2  B4D8               	goto	u4521
  8870  0028E4  EF76  F014         	goto	u4520
  8871  0028E8  EF78  F014         u4521:
  8872  0028EC                     	goto	l3731
  8873  0028EC  EF8F  F014         u4520:
  8874  0028F0                     	line	35
  8875                           	
  8876                           l3723:
  8877  0028F0                     		incf	((c:___fldiv@bexp)),c,w
  8878  0028F0  283F               	btfss	status,2
  8879  0028F2  A4D8               	goto	u4531
  8880  0028F4  EF7E  F014         	goto	u4530
  8881  0028F8  EF80  F014         
  8882                           u4531:
  8883  0028FC                     	goto	l3727
  8884  0028FC  EF8A  F014         u4530:
  8885  002900                     	line	37
  8886                           	
  8887                           l3725:
  8888  002900                     	movlw	low(normalize32(0x0))
  8889  002900  0E00               	movwf	((c:___fldiv@b)),c
  8890  002902  6E28               	movlw	high(normalize32(0x0))
  8891  002904  0E00               	movwf	((c:___fldiv@b+1)),c
  8892  002906  6E29               	movlw	low highword(normalize32(0x0))
  8893  002908  0E00               	movwf	((c:___fldiv@b+2)),c
  8894  00290A  6E2A               	movlw	high highword(normalize32(0x0))
  8895  00290C  0E00               	movwf	((c:___fldiv@b+3)),c
  8896  00290E  6E2B               	goto	l3727
  8897  002910  EF8A  F014         	line	38
  8898                           	
  8899                           l1035:
  8900  002914                     	line	40
  8901                           	
  8902                           l3727:
  8903  002914                     	bsf	(0+(23/8)+(c:___fldiv@b)),c,(23)&7
  8904  002914  8E2A               	line	42
  8905                           	
  8906                           l3729:
  8907  002916                     	movlw	low(0)
  8908  002916  0E00               	movwf	(0+((c:___fldiv@b)+03h)),c
  8909  002918  6E2B               	line	43
  8910                           	goto	l3733
  8911  00291A  EF99  F014         	line	44
  8912                           	
  8913                           l1034:
  8914  00291E                     	line	46
  8915                           	
  8916                           l3731:
  8917  00291E                     	movlw	low(normalize32(0x0))
  8918  00291E  0E00               	movwf	((c:___fldiv@b)),c
  8919  002920  6E28               	movlw	high(normalize32(0x0))
  8920  002922  0E00               	movwf	((c:___fldiv@b+1)),c
  8921  002924  6E29               	movlw	low highword(normalize32(0x0))
  8922  002926  0E00               	movwf	((c:___fldiv@b+2)),c
  8923  002928  6E2A               	movlw	high highword(normalize32(0x0))
  8924  00292A  0E00               	movwf	((c:___fldiv@b+3)),c
  8925  00292C  6E2B               	goto	l3733
  8926  00292E  EF99  F014         	line	47
  8927                           	
  8928                           l1036:
  8929  002932                     	line	49
  8930                           	
  8931                           l3733:
  8932  002932                     	movf	(0+((c:___fldiv@a)+03h)),c,w
  8933  002932  502F               	andlw	low(080h)
  8934  002934  0B80               	xorwf	((c:___fldiv@sign)),c
  8935  002936  1A38               	line	50
  8936                           	
  8937                           l3735:
  8938  002938                     	movf	(0+((c:___fldiv@a)+03h)),c,w
  8939  002938  502F               	addwf	(0+((c:___fldiv@a)+03h)),c,w
  8940  00293A  242F               	movwf	((c:___fldiv@aexp)),c
  8941  00293C  6E40               	line	51
  8942                           	
  8943                           l3737:
  8944  00293E                     	
  8945                           	btfss	(0+((c:___fldiv@a)+02h)),c,(7)&7
  8946  00293E  AE2E               	goto	u4541
  8947  002940  EFA4  F014         	goto	u4540
  8948  002944  EFA6  F014         u4541:
  8949  002948                     	goto	l3741
  8950  002948  EFA9  F014         u4540:
  8951  00294C                     	line	52
  8952                           	
  8953                           l3739:
  8954  00294C                     	bsf	(0+(0/8)+(c:___fldiv@aexp)),c,(0)&7
  8955  00294C  8040               	goto	l3741
  8956  00294E  EFA9  F014         	line	53
  8957                           	
  8958                           l1037:
  8959  002952                     	line	56
  8960                           	
  8961                           l3741:
  8962  002952                     	movf	((c:___fldiv@aexp)),c,w
  8963  002952  5040               	btfsc	status,2
  8964  002954  B4D8               	goto	u4551
  8965  002956  EFAF  F014         	goto	u4550
  8966  00295A  EFB1  F014         u4551:
  8967  00295E                     	goto	l3751
  8968  00295E  EFC8  F014         u4550:
  8969  002962                     	line	58
  8970                           	
  8971                           l3743:
  8972  002962                     		incf	((c:___fldiv@aexp)),c,w
  8973  002962  2840               	btfss	status,2
  8974  002964  A4D8               	goto	u4561
  8975  002966  EFB7  F014         	goto	u4560
  8976  00296A  EFB9  F014         
  8977                           u4561:
  8978  00296E                     	goto	l3747
  8979  00296E  EFC3  F014         u4560:
  8980  002972                     	line	60
  8981                           	
  8982                           l3745:
  8983  002972                     	movlw	low(normalize32(0x0))
  8984  002972  0E00               	movwf	((c:___fldiv@a)),c
  8985  002974  6E2C               	movlw	high(normalize32(0x0))
  8986  002976  0E00               	movwf	((c:___fldiv@a+1)),c
  8987  002978  6E2D               	movlw	low highword(normalize32(0x0))
  8988  00297A  0E00               	movwf	((c:___fldiv@a+2)),c
  8989  00297C  6E2E               	movlw	high highword(normalize32(0x0))
  8990  00297E  0E00               	movwf	((c:___fldiv@a+3)),c
  8991  002980  6E2F               	goto	l3747
  8992  002982  EFC3  F014         	line	61
  8993                           	
  8994                           l1039:
  8995  002986                     	line	63
  8996                           	
  8997                           l3747:
  8998  002986                     	bsf	(0+(23/8)+(c:___fldiv@a)),c,(23)&7
  8999  002986  8E2E               	line	65
  9000                           	
  9001                           l3749:
  9002  002988                     	movlw	low(0)
  9003  002988  0E00               	movwf	(0+((c:___fldiv@a)+03h)),c
  9004  00298A  6E2F               	line	66
  9005                           	goto	l3753
  9006  00298C  EFD2  F014         	line	67
  9007                           	
  9008                           l1038:
  9009  002990                     	line	69
  9010                           	
  9011                           l3751:
  9012  002990                     	movlw	low(normalize32(0x0))
  9013  002990  0E00               	movwf	((c:___fldiv@a)),c
  9014  002992  6E2C               	movlw	high(normalize32(0x0))
  9015  002994  0E00               	movwf	((c:___fldiv@a+1)),c
  9016  002996  6E2D               	movlw	low highword(normalize32(0x0))
  9017  002998  0E00               	movwf	((c:___fldiv@a+2)),c
  9018  00299A  6E2E               	movlw	high highword(normalize32(0x0))
  9019  00299C  0E00               	movwf	((c:___fldiv@a+3)),c
  9020  00299E  6E2F               	goto	l3753
  9021  0029A0  EFD2  F014         	line	70
  9022                           	
  9023                           l1040:
  9024  0029A4                     	line	75
  9025                           	
  9026                           l3753:
  9027  0029A4                     	movf	((c:___fldiv@a)),c,w
  9028  0029A4  502C               iorwf	((c:___fldiv@a+1)),c,w
  9029  0029A6  102D               iorwf	((c:___fldiv@a+2)),c,w
  9030  0029A8  102E               iorwf	((c:___fldiv@a+3)),c,w
  9031  0029AA  102F               	btfss	status,2
  9032  0029AC  A4D8               	goto	u4571
  9033  0029AE  EFDB  F014         	goto	u4570
  9034  0029B2  EFDD  F014         
  9035                           u4571:
  9036  0029B6                     	goto	l3765
  9037  0029B6  EFF7  F014         u4570:
  9038  0029BA                     	line	76
  9039                           	
  9040                           l3755:
  9041  0029BA                     	movlw	low(0)
  9042  0029BA  0E00               	movwf	((c:___fldiv@b)),c
  9043  0029BC  6E28               	movlw	high(0)
  9044  0029BE  0E00               	movwf	((c:___fldiv@b+1)),c
  9045  0029C0  6E29               	movlw	low highword(0)
  9046  0029C2  0E00               	movwf	((c:___fldiv@b+2)),c
  9047  0029C4  6E2A               	movlw	high highword(0)
  9048  0029C6  0E00               	movwf	((c:___fldiv@b+3)),c
  9049  0029C8  6E2B               	line	77
  9050                           	
  9051                           l3757:
  9052  0029CA                     	movlw	low(07F80h)
  9053  0029CA  0E80               	iorwf	(0+((c:___fldiv@b)+02h)),c
  9054  0029CC  122A               	movlw	high(07F80h)
  9055  0029CE  0E7F               	iorwf	(1+((c:___fldiv@b)+02h)),c
  9056  0029D0  122B               	line	78
  9057                           	
  9058                           l3759:
  9059  0029D2                     	movf	((c:___fldiv@sign)),c,w
  9060  0029D2  5038               	iorwf	(0+((c:___fldiv@b)+03h)),c
  9061  0029D4  122B               	line	79
  9062                           	
  9063                           l3761:
  9064  0029D6                     	movff	(c:___fldiv@b),(c:?___fldiv)
  9065  0029D6  C028  F028         	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
  9066  0029DA  C029  F029         	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
  9067  0029DE  C02A  F02A         	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
  9068  0029E2  C02B  F02B         	goto	l1042
  9069  0029E6  EF6F  F016         	
  9070                           l3763:
  9071  0029EA                     	goto	l1042
  9072  0029EA  EF6F  F016         	line	80
  9073                           	
  9074                           l1041:
  9075  0029EE                     	line	83
  9076                           	
  9077                           l3765:
  9078  0029EE                     	movf	((c:___fldiv@bexp)),c,w
  9079  0029EE  503F               	btfss	status,2
  9080  0029F0  A4D8               	goto	u4581
  9081  0029F2  EFFD  F014         	goto	u4580
  9082  0029F6  EFFF  F014         u4581:
  9083  0029FA                     	goto	l3773
  9084  0029FA  EF13  F015         u4580:
  9085  0029FE                     	line	84
  9086                           	
  9087                           l3767:
  9088  0029FE                     	movlw	low(0)
  9089  0029FE  0E00               	movwf	((c:___fldiv@b)),c
  9090  002A00  6E28               	movlw	high(0)
  9091  002A02  0E00               	movwf	((c:___fldiv@b+1)),c
  9092  002A04  6E29               	movlw	low highword(0)
  9093  002A06  0E00               	movwf	((c:___fldiv@b+2)),c
  9094  002A08  6E2A               	movlw	high highword(0)
  9095  002A0A  0E00               	movwf	((c:___fldiv@b+3)),c
  9096  002A0C  6E2B               	line	85
  9097                           	
  9098                           l3769:
  9099  002A0E                     	movff	(c:___fldiv@b),(c:?___fldiv)
  9100  002A0E  C028  F028         	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
  9101  002A12  C029  F029         	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
  9102  002A16  C02A  F02A         	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
  9103  002A1A  C02B  F02B         	goto	l1042
  9104  002A1E  EF6F  F016         	
  9105                           l3771:
  9106  002A22                     	goto	l1042
  9107  002A22  EF6F  F016         	line	86
  9108                           	
  9109                           l1043:
  9110  002A26                     	line	89
  9111                           	
  9112                           l3773:
  9113  002A26                     	movf	((c:___fldiv@aexp)),c,w
  9114  002A26  5040               	movwf	(??___fldiv+0+0)&0ffh,c
  9115  002A28  6E30               	clrf	(??___fldiv+0+0+1)&0ffh,c
  9116  002A2A  6A31               
  9117                           	comf	(??___fldiv+0+0),c
  9118  002A2C  1E30               	comf	(??___fldiv+0+1),c
  9119  002A2E  1E31               	infsnz	(??___fldiv+0+0),c
  9120  002A30  4A30               	incf	(??___fldiv+0+1),c
  9121  002A32  2A31               	movf	((c:___fldiv@bexp)),c,w
  9122  002A34  503F               	movwf	(??___fldiv+2+0)&0ffh,c
  9123  002A36  6E32               	clrf	(??___fldiv+2+0+1)&0ffh,c
  9124  002A38  6A33               
  9125                           	movf	(??___fldiv+0+0),c,w
  9126  002A3A  5030               	addwf	(??___fldiv+2+0),c
  9127  002A3C  2632               	movf	(??___fldiv+0+1),c,w
  9128  002A3E  5031               	addwfc	(??___fldiv+2+1),c
  9129  002A40  2233               	movlw	low(07Fh)
  9130  002A42  0E7F               	addwf	(??___fldiv+2+0),c,w
  9131  002A44  2432               	movwf	((c:___fldiv@new_exp)),c
  9132  002A46  6E39               	movlw	high(07Fh)
  9133  002A48  0E00               	addwfc	(??___fldiv+2+1),c,w
  9134  002A4A  2033               	movwf	1+((c:___fldiv@new_exp)),c
  9135  002A4C  6E3A               	line	92
  9136                           	
  9137                           l3775:
  9138  002A4E                     	movff	(c:___fldiv@b),(c:___fldiv@rem)
  9139  002A4E  C028  F034         	movff	(c:___fldiv@b+1),(c:___fldiv@rem+1)
  9140  002A52  C029  F035         	movff	(c:___fldiv@b+2),(c:___fldiv@rem+2)
  9141  002A56  C02A  F036         	movff	(c:___fldiv@b+3),(c:___fldiv@rem+3)
  9142  002A5A  C02B  F037         	line	93
  9143                           	
  9144                           l3777:
  9145  002A5E                     	movlw	low(0)
  9146  002A5E  0E00               	movwf	((c:___fldiv@b)),c
  9147  002A60  6E28               	movlw	high(0)
  9148  002A62  0E00               	movwf	((c:___fldiv@b+1)),c
  9149  002A64  6E29               	movlw	low highword(0)
  9150  002A66  0E00               	movwf	((c:___fldiv@b+2)),c
  9151  002A68  6E2A               	movlw	high highword(0)
  9152  002A6A  0E00               	movwf	((c:___fldiv@b+3)),c
  9153  002A6C  6E2B               	line	94
  9154                           	
  9155                           l3779:
  9156  002A6E                     	movlw	low(0)
  9157  002A6E  0E00               	movwf	((c:___fldiv@grs)),c
  9158  002A70  6E3B               	movlw	high(0)
  9159  002A72  0E00               	movwf	((c:___fldiv@grs+1)),c
  9160  002A74  6E3C               	movlw	low highword(0)
  9161  002A76  0E00               	movwf	((c:___fldiv@grs+2)),c
  9162  002A78  6E3D               	movlw	high highword(0)
  9163  002A7A  0E00               	movwf	((c:___fldiv@grs+3)),c
  9164  002A7C  6E3E               	line	96
  9165                           	
  9166                           l3781:
  9167  002A7E                     	movlw	low(0)
  9168  002A7E  0E00               	movwf	((c:___fldiv@aexp)),c
  9169  002A80  6E40               	line	97
  9170                           	goto	l1044
  9171  002A82  EF7F  F015         	
  9172                           l1045:
  9173  002A86                     	line	100
  9174                           	
  9175                           l3783:
  9176  002A86                     	movf	((c:___fldiv@aexp)),c,w
  9177  002A86  5040               	btfsc	status,2
  9178  002A88  B4D8               	goto	u4591
  9179  002A8A  EF49  F015         	goto	u4590
  9180  002A8E  EF4B  F015         u4591:
  9181  002A92                     	goto	l3791
  9182  002A92  EF64  F015         u4590:
  9183  002A96                     	line	101
  9184                           	
  9185                           l3785:
  9186  002A96                     	bcf	status,0
  9187  002A96  90D8               	rlcf	((c:___fldiv@rem)),c
  9188  002A98  3634               	rlcf	((c:___fldiv@rem+1)),c
  9189  002A9A  3635               	rlcf	((c:___fldiv@rem+2)),c
  9190  002A9C  3636               	rlcf	((c:___fldiv@rem+3)),c
  9191  002A9E  3637               	line	102
  9192                           	bcf	status,0
  9193  002AA0  90D8               	rlcf	((c:___fldiv@b)),c
  9194  002AA2  3628               	rlcf	((c:___fldiv@b+1)),c
  9195  002AA4  3629               	rlcf	((c:___fldiv@b+2)),c
  9196  002AA6  362A               	rlcf	((c:___fldiv@b+3)),c
  9197  002AA8  362B               	line	103
  9198                           	
  9199                           l3787:
  9200  002AAA                     	
  9201                           	btfss	((c:___fldiv@grs+3)),c,(31)&7
  9202  002AAA  AE3E               	goto	u4601
  9203  002AAC  EF5A  F015         	goto	u4600
  9204  002AB0  EF5C  F015         u4601:
  9205  002AB4                     	goto	l1047
  9206  002AB4  EF5D  F015         u4600:
  9207  002AB8                     	line	104
  9208                           	
  9209                           l3789:
  9210  002AB8                     	bsf	(0+(0/8)+(c:___fldiv@b)),c,(0)&7
  9211  002AB8  8028               	line	105
  9212                           	
  9213                           l1047:
  9214  002ABA                     	line	106
  9215                           	bcf	status,0
  9216  002ABA  90D8               	rlcf	((c:___fldiv@grs)),c
  9217  002ABC  363B               	rlcf	((c:___fldiv@grs+1)),c
  9218  002ABE  363C               	rlcf	((c:___fldiv@grs+2)),c
  9219  002AC0  363D               	rlcf	((c:___fldiv@grs+3)),c
  9220  002AC2  363E               	goto	l3791
  9221  002AC4  EF64  F015         	line	107
  9222                           	
  9223                           l1046:
  9224  002AC8                     	line	112
  9225                           	
  9226                           l3791:
  9227  002AC8                     		movf	((c:___fldiv@a)),c,w
  9228  002AC8  502C               	subwf	((c:___fldiv@rem)),c,w
  9229  002ACA  5C34               	movf	((c:___fldiv@a+1)),c,w
  9230  002ACC  502D               	subwfb	((c:___fldiv@rem+1)),c,w
  9231  002ACE  5835               	movf	((c:___fldiv@a+2)),c,w
  9232  002AD0  502E               	subwfb	((c:___fldiv@rem+2)),c,w
  9233  002AD2  5836               	movf	((c:___fldiv@a+3)),c,w
  9234  002AD4  502F               	subwfb	((c:___fldiv@rem+3)),c,w
  9235  002AD6  5837               	btfss	status,0
  9236  002AD8  A0D8               	goto	u4611
  9237  002ADA  EF71  F015         	goto	u4610
  9238  002ADE  EF73  F015         
  9239                           u4611:
  9240  002AE2                     	goto	l3797
  9241  002AE2  EF7E  F015         u4610:
  9242  002AE6                     	line	115
  9243                           	
  9244                           l3793:
  9245  002AE6                     	bsf	(0+(30/8)+(c:___fldiv@grs)),c,(30)&7
  9246  002AE6  8C3E               	line	116
  9247                           	
  9248                           l3795:
  9249  002AE8                     	movf	((c:___fldiv@a)),c,w
  9250  002AE8  502C               	subwf	((c:___fldiv@rem)),c
  9251  002AEA  5E34               	movf	((c:___fldiv@a+1)),c,w
  9252  002AEC  502D               	subwfb	((c:___fldiv@rem+1)),c
  9253  002AEE  5A35               	movf	((c:___fldiv@a+2)),c,w
  9254  002AF0  502E               	subwfb	((c:___fldiv@rem+2)),c
  9255  002AF2  5A36               	movf	((c:___fldiv@a+3)),c,w
  9256  002AF4  502F               	subwfb	((c:___fldiv@rem+3)),c
  9257  002AF6  5A37               	goto	l3797
  9258  002AF8  EF7E  F015         	line	117
  9259                           	
  9260                           l1048:
  9261  002AFC                     	line	118
  9262                           	
  9263                           l3797:
  9264  002AFC                     	incf	((c:___fldiv@aexp)),c
  9265  002AFC  2A40               	line	119
  9266                           	
  9267                           l1044:
  9268  002AFE                     	line	97
  9269                           		movlw	01Ah-1
  9270  002AFE  0E19               	cpfsgt	((c:___fldiv@aexp)),c
  9271  002B00  6440               	goto	u4621
  9272  002B02  EF85  F015         	goto	u4620
  9273  002B06  EF87  F015         
  9274                           u4621:
  9275  002B0A                     	goto	l3783
  9276  002B0A  EF43  F015         u4620:
  9277  002B0E                     	goto	l3799
  9278  002B0E  EF89  F015         	
  9279                           l1049:
  9280  002B12                     	line	122
  9281                           	
  9282                           l3799:
  9283  002B12                     	movf	((c:___fldiv@rem)),c,w
  9284  002B12  5034               iorwf	((c:___fldiv@rem+1)),c,w
  9285  002B14  1035               iorwf	((c:___fldiv@rem+2)),c,w
  9286  002B16  1036               iorwf	((c:___fldiv@rem+3)),c,w
  9287  002B18  1037               	btfsc	status,2
  9288  002B1A  B4D8               	goto	u4631
  9289  002B1C  EF92  F015         	goto	u4630
  9290  002B20  EF94  F015         
  9291                           u4631:
  9292  002B24                     	goto	l3809
  9293  002B24  EFB0  F015         u4630:
  9294  002B28                     	line	123
  9295                           	
  9296                           l3801:
  9297  002B28                     	bsf	(0+(0/8)+(c:___fldiv@grs)),c,(0)&7
  9298  002B28  803B               	goto	l3809
  9299  002B2A  EFB0  F015         	line	124
  9300                           	
  9301                           l1050:
  9302  002B2E                     	line	127
  9303                           	goto	l3809
  9304  002B2E  EFB0  F015         	
  9305                           l1052:
  9306  002B32                     	line	128
  9307                           	
  9308                           l3803:
  9309  002B32                     	bcf	status,0
  9310  002B32  90D8               	rlcf	((c:___fldiv@b)),c
  9311  002B34  3628               	rlcf	((c:___fldiv@b+1)),c
  9312  002B36  3629               	rlcf	((c:___fldiv@b+2)),c
  9313  002B38  362A               	rlcf	((c:___fldiv@b+3)),c
  9314  002B3A  362B               	line	129
  9315                           	
  9316                           l3805:
  9317  002B3C                     	
  9318                           	btfss	((c:___fldiv@grs+3)),c,(31)&7
  9319  002B3C  AE3E               	goto	u4641
  9320  002B3E  EFA3  F015         	goto	u4640
  9321  002B42  EFA5  F015         u4641:
  9322  002B46                     	goto	l1053
  9323  002B46  EFA6  F015         u4640:
  9324  002B4A                     	line	130
  9325                           	
  9326                           l3807:
  9327  002B4A                     	bsf	(0+(0/8)+(c:___fldiv@b)),c,(0)&7
  9328  002B4A  8028               	line	131
  9329                           	
  9330                           l1053:
  9331  002B4C                     	line	132
  9332                           	bcf	status,0
  9333  002B4C  90D8               	rlcf	((c:___fldiv@grs)),c
  9334  002B4E  363B               	rlcf	((c:___fldiv@grs+1)),c
  9335  002B50  363C               	rlcf	((c:___fldiv@grs+2)),c
  9336  002B52  363D               	rlcf	((c:___fldiv@grs+3)),c
  9337  002B54  363E               	line	133
  9338                           	decf	((c:___fldiv@new_exp)),c
  9339  002B56  0639               	btfss	status,0
  9340  002B58  A0D8               	decf	((c:___fldiv@new_exp+1)),c
  9341  002B5A  063A               	goto	l3809
  9342  002B5C  EFB0  F015         	line	134
  9343                           	
  9344                           l1051:
  9345  002B60                     	line	127
  9346                           	
  9347                           l3809:
  9348  002B60                     	
  9349                           	btfss	((c:___fldiv@b+2)),c,(23)&7
  9350  002B60  AE2A               	goto	u4651
  9351  002B62  EFB5  F015         	goto	u4650
  9352  002B66  EFB7  F015         u4651:
  9353  002B6A                     	goto	l3803
  9354  002B6A  EF99  F015         u4650:
  9355  002B6E                     	goto	l3811
  9356  002B6E  EFB9  F015         	
  9357                           l1054:
  9358  002B72                     	line	139
  9359                           	
  9360                           l3811:
  9361  002B72                     	movlw	low(0)
  9362  002B72  0E00               	movwf	((c:___fldiv@aexp)),c
  9363  002B74  6E40               	line	140
  9364                           	
  9365                           l3813:
  9366  002B76                     	
  9367                           	btfss	((c:___fldiv@grs+3)),c,(31)&7
  9368  002B76  AE3E               	goto	u4661
  9369  002B78  EFC0  F015         	goto	u4660
  9370  002B7C  EFC2  F015         u4661:
  9371  002B80                     	goto	l1055
  9372  002B80  EFEA  F015         u4660:
  9373  002B84                     	line	141
  9374                           	
  9375                           l3815:
  9376  002B84                     	movlw	0FFh
  9377  002B84  0EFF               	andwf	((c:___fldiv@grs)),c,w
  9378  002B86  143B               	movwf	(??___fldiv+0+0)&0ffh,c
  9379  002B88  6E30               	movlw	0FFh
  9380  002B8A  0EFF               	andwf	((c:___fldiv@grs+1)),c,w
  9381  002B8C  143C               	movwf	1+(??___fldiv+0+0)&0ffh,c
  9382  002B8E  6E31               	
  9383                           	movlw	0FFh
  9384  002B90  0EFF               	andwf	((c:___fldiv@grs+2)),c,w
  9385  002B92  143D               	movwf	2+(??___fldiv+0+0)&0ffh,c
  9386  002B94  6E32               	
  9387                           	movlw	07Fh
  9388  002B96  0E7F               	andwf	((c:___fldiv@grs+3)),c,w
  9389  002B98  143E               	movwf	3+(??___fldiv+0+0)&0ffh,c
  9390  002B9A  6E33               	movf	(??___fldiv+0+0),c,w
  9391  002B9C  5030               iorwf	(??___fldiv+0+1),c,w
  9392  002B9E  1031               iorwf	(??___fldiv+0+2),c,w
  9393  002BA0  1032               iorwf	(??___fldiv+0+3),c,w
  9394  002BA2  1033               	btfsc	status,2
  9395  002BA4  B4D8               	goto	u4671
  9396  002BA6  EFD7  F015         	goto	u4670
  9397  002BAA  EFD9  F015         
  9398                           u4671:
  9399  002BAE                     	goto	l1056
  9400  002BAE  EFDD  F015         u4670:
  9401  002BB2                     	line	142
  9402                           	
  9403                           l3817:
  9404  002BB2                     	movlw	low(01h)
  9405  002BB2  0E01               	movwf	((c:___fldiv@aexp)),c
  9406  002BB4  6E40               	line	143
  9407                           	goto	l1055
  9408  002BB6  EFEA  F015         	line	144
  9409                           	
  9410                           l1056:
  9411  002BBA                     	line	145
  9412                           	
  9413                           	btfss	((c:___fldiv@b)),c,(0)&7
  9414  002BBA  A028               	goto	u4681
  9415  002BBC  EFE2  F015         	goto	u4680
  9416  002BC0  EFE4  F015         u4681:
  9417  002BC4                     	goto	l1055
  9418  002BC4  EFEA  F015         u4680:
  9419  002BC8                     	line	146
  9420                           	
  9421                           l3819:
  9422  002BC8                     	movlw	low(01h)
  9423  002BC8  0E01               	movwf	((c:___fldiv@aexp)),c
  9424  002BCA  6E40               	goto	l1055
  9425  002BCC  EFEA  F015         	line	147
  9426                           	
  9427                           l1058:
  9428  002BD0                     	goto	l1055
  9429  002BD0  EFEA  F015         	line	148
  9430                           	
  9431                           l1057:
  9432  002BD4                     	line	149
  9433                           	
  9434                           l1055:
  9435  002BD4                     	line	150
  9436                           	movf	((c:___fldiv@aexp)),c,w
  9437  002BD4  5040               	btfsc	status,2
  9438  002BD6  B4D8               	goto	u4691
  9439  002BD8  EFF0  F015         	goto	u4690
  9440  002BDC  EFF2  F015         u4691:
  9441  002BE0                     	goto	l3829
  9442  002BE0  EF1A  F016         u4690:
  9443  002BE4                     	line	151
  9444                           	
  9445                           l3821:
  9446  002BE4                     	movlw	low(01h)
  9447  002BE4  0E01               	addwf	((c:___fldiv@b)),c
  9448  002BE6  2628               	movlw	0
  9449  002BE8  0E00               	addwfc	((c:___fldiv@b+1)),c
  9450  002BEA  2229               	addwfc	((c:___fldiv@b+2)),c
  9451  002BEC  222A               	addwfc	((c:___fldiv@b+3)),c
  9452  002BEE  222B               	line	152
  9453                           	
  9454                           l3823:
  9455  002BF0                     	
  9456                           	btfss	((c:___fldiv@b+3)),c,(24)&7
  9457  002BF0  A02B               	goto	u4701
  9458  002BF2  EFFD  F015         	goto	u4700
  9459  002BF6  EFFF  F015         u4701:
  9460  002BFA                     	goto	l3829
  9461  002BFA  EF1A  F016         u4700:
  9462  002BFE                     	line	153
  9463                           	
  9464                           l3825:
  9465  002BFE                     	movff	(c:___fldiv@b),??___fldiv+0+0
  9466  002BFE  C028  F030         	movff	(c:___fldiv@b+1),??___fldiv+0+0+1
  9467  002C02  C029  F031         	movff	(c:___fldiv@b+2),??___fldiv+0+0+2
  9468  002C06  C02A  F032         	movff	(c:___fldiv@b+3),??___fldiv+0+0+3
  9469  002C0A  C02B  F033         	rlcf	(??___fldiv+0+3),c,w
  9470  002C0E  3433               	rrcf	(??___fldiv+0+3),c
  9471  002C10  3233               	rrcf	(??___fldiv+0+2),c
  9472  002C12  3232               	rrcf	(??___fldiv+0+1),c
  9473  002C14  3231               	rrcf	(??___fldiv+0+0),c
  9474  002C16  3230               	movff	??___fldiv+0+0,(c:___fldiv@b)
  9475  002C18  C030  F028         	movff	??___fldiv+0+1,(c:___fldiv@b+1)
  9476  002C1C  C031  F029         	movff	??___fldiv+0+2,(c:___fldiv@b+2)
  9477  002C20  C032  F02A         	movff	??___fldiv+0+3,(c:___fldiv@b+3)
  9478  002C24  C033  F02B         	line	154
  9479                           	
  9480                           l3827:
  9481  002C28                     	infsnz	((c:___fldiv@new_exp)),c
  9482  002C28  4A39               	incf	((c:___fldiv@new_exp+1)),c
  9483  002C2A  2A3A               	goto	l3829
  9484  002C2C  EF1A  F016         	line	155
  9485                           	
  9486                           l1060:
  9487  002C30                     	goto	l3829
  9488  002C30  EF1A  F016         	line	156
  9489                           	
  9490                           l1059:
  9491  002C34                     	line	159
  9492                           	
  9493                           l3829:
  9494  002C34                     	btfsc	((c:___fldiv@new_exp+1)),c,7
  9495  002C34  BE3A               	goto	u4711
  9496  002C36  EF25  F016         	movf	((c:___fldiv@new_exp+1)),c,w
  9497  002C3A  503A               	bnz	u4710
  9498  002C3C  E108               	incf	((c:___fldiv@new_exp)),c,w
  9499  002C3E  2839               	btfss	status,0
  9500  002C40  A0D8               	goto	u4711
  9501  002C42  EF25  F016         	goto	u4710
  9502  002C46  EF27  F016         
  9503                           u4711:
  9504  002C4A                     	goto	l3833
  9505  002C4A  EF34  F016         u4710:
  9506  002C4E                     	line	160
  9507                           	
  9508                           l3831:
  9509  002C4E                     	movlw	high(0FFh)
  9510  002C4E  0E00               	movwf	((c:___fldiv@new_exp+1)),c
  9511  002C50  6E3A               	setf	((c:___fldiv@new_exp)),c
  9512  002C52  6839               	line	161
  9513                           	movlw	low(0)
  9514  002C54  0E00               	movwf	((c:___fldiv@b)),c
  9515  002C56  6E28               	movlw	high(0)
  9516  002C58  0E00               	movwf	((c:___fldiv@b+1)),c
  9517  002C5A  6E29               	movlw	low highword(0)
  9518  002C5C  0E00               	movwf	((c:___fldiv@b+2)),c
  9519  002C5E  6E2A               	movlw	high highword(0)
  9520  002C60  0E00               	movwf	((c:___fldiv@b+3)),c
  9521  002C62  6E2B               	goto	l3833
  9522  002C64  EF34  F016         	line	162
  9523                           	
  9524                           l1061:
  9525  002C68                     	line	165
  9526                           	
  9527                           l3833:
  9528  002C68                     	btfsc	((c:___fldiv@new_exp+1)),c,7
  9529  002C68  BE3A               	goto	u4720
  9530  002C6A  EF41  F016         	movf	((c:___fldiv@new_exp+1)),c,w
  9531  002C6E  503A               	bnz	u4721
  9532  002C70  E106               	decf	((c:___fldiv@new_exp)),c,w
  9533  002C72  0439               	btfsc	status,0
  9534  002C74  B0D8               	goto	u4721
  9535  002C76  EF3F  F016         	goto	u4720
  9536  002C7A  EF41  F016         
  9537                           u4721:
  9538  002C7E                     	goto	l3837
  9539  002C7E  EF51  F016         u4720:
  9540  002C82                     	line	166
  9541                           	
  9542                           l3835:
  9543  002C82                     	movlw	high(0)
  9544  002C82  0E00               	movwf	((c:___fldiv@new_exp+1)),c
  9545  002C84  6E3A               	movlw	low(0)
  9546  002C86  0E00               	movwf	((c:___fldiv@new_exp)),c
  9547  002C88  6E39               	line	167
  9548                           	movlw	low(0)
  9549  002C8A  0E00               	movwf	((c:___fldiv@b)),c
  9550  002C8C  6E28               	movlw	high(0)
  9551  002C8E  0E00               	movwf	((c:___fldiv@b+1)),c
  9552  002C90  6E29               	movlw	low highword(0)
  9553  002C92  0E00               	movwf	((c:___fldiv@b+2)),c
  9554  002C94  6E2A               	movlw	high highword(0)
  9555  002C96  0E00               	movwf	((c:___fldiv@b+3)),c
  9556  002C98  6E2B               	line	169
  9557                           	movlw	low(0)
  9558  002C9A  0E00               	movwf	((c:___fldiv@sign)),c
  9559  002C9C  6E38               	goto	l3837
  9560  002C9E  EF51  F016         	line	170
  9561                           	
  9562                           l1062:
  9563  002CA2                     	line	173
  9564                           	
  9565                           l3837:
  9566  002CA2                     	movff	(c:___fldiv@new_exp),(c:___fldiv@bexp)
  9567  002CA2  C039  F03F         	line	175
  9568                           	
  9569                           l3839:
  9570  002CA6                     	
  9571                           	btfss	((c:___fldiv@bexp)),c,(0)&7
  9572  002CA6  A03F               	goto	u4731
  9573  002CA8  EF58  F016         	goto	u4730
  9574  002CAC  EF5A  F016         u4731:
  9575  002CB0                     	goto	l3843
  9576  002CB0  EF5D  F016         u4730:
  9577  002CB4                     	line	176
  9578                           	
  9579                           l3841:
  9580  002CB4                     	bsf	(0+(7/8)+0+((c:___fldiv@b)+02h)),c,(7)&7
  9581  002CB4  8E2A               	line	177
  9582                           	goto	l3845
  9583  002CB6  EF60  F016         	line	179
  9584                           	
  9585                           l1063:
  9586  002CBA                     	line	180
  9587                           	
  9588                           l3843:
  9589  002CBA                     	bcf	(0+(7/8)+0+((c:___fldiv@b)+02h)),c,(7)&7
  9590  002CBA  9E2A               	goto	l3845
  9591  002CBC  EF60  F016         	line	181
  9592                           	
  9593                           l1064:
  9594  002CC0                     	line	182
  9595                           	
  9596                           l3845:
  9597  002CC0                     	bcf	status,0
  9598  002CC0  90D8               	rrcf	((c:___fldiv@bexp)),c,w
  9599  002CC2  303F               	movwf	(0+((c:___fldiv@b)+03h)),c
  9600  002CC4  6E2B               	line	183
  9601                           	
  9602                           l3847:
  9603  002CC6                     	movf	((c:___fldiv@sign)),c,w
  9604  002CC6  5038               	iorwf	(0+((c:___fldiv@b)+03h)),c
  9605  002CC8  122B               	line	184
  9606                           	
  9607                           l3849:
  9608  002CCA                     	movff	(c:___fldiv@b),(c:?___fldiv)
  9609  002CCA  C028  F028         	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
  9610  002CCE  C029  F029         	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
  9611  002CD2  C02A  F02A         	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
  9612  002CD6  C02B  F02B         	goto	l1042
  9613  002CDA  EF6F  F016         	
  9614                           l3851:
  9615  002CDE                     	line	185
  9616                           	
  9617                           l1042:
  9618  002CDE                     	return	;funcret
  9619  002CDE  0012               	opt stack 0
  9620                           GLOBAL	__end_of___fldiv
  9621                           	__end_of___fldiv:
  9622  002CE0                     	signat	___fldiv,8316
  9623                           	global	___fladd
  9624                           
  9625 ;; *************** function ___fladd *****************
  9626 ;; Defined at:
  9627 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  b               4   64[COMRAM] unsigned char 
  9630 ;;  a               4   68[COMRAM] unsigned char 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;  grs             1   83[COMRAM] unsigned char 
  9633 ;;  bexp            1   82[COMRAM] unsigned char 
  9634 ;;  aexp            1   81[COMRAM] unsigned char 
  9635 ;;  signs           1   80[COMRAM] unsigned char 
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  4   64[COMRAM] unsigned char 
  9638 ;; Registers used:
  9639 ;;		wreg, status,2, status,0
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9645 ;;      Params:         8       0       0       0       0       0       0       0       0
  9646 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9647 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9648 ;;      Totals:        20       0       0       0       0       0       0       0       0
  9649 ;;Total ram usage:       20 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_setPeriodTo
  9655 ;;		_SetDutyCycleTo
  9656 ;;		_roundf
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           psect	text16,class=CODE,space=0,reloc=2,group=1
  9660                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  9661                           	line	10
  9662                           global __ptext16
  9663                           __ptext16:
  9664  001A5A                     psect	text16
  9665                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  9666                           	line	10
  9667                           	global	__size_of___fladd
  9668                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  9669  0000                     	
  9670                           ___fladd:
  9671  001A5A                     ;incstack = 0
  9672                           	opt	stack 27
  9673                           	line	21
  9674                           	
  9675                           l3513:
  9676  001A5A                     	movf	(0+((c:___fladd@b)+03h)),c,w
  9677  001A5A  5044               	andlw	low(080h)
  9678  001A5C  0B80               	movwf	((c:___fladd@signs)),c
  9679  001A5E  6E51               	line	22
  9680                           	movf	(0+((c:___fladd@b)+03h)),c,w
  9681  001A60  5044               	addwf	(0+((c:___fladd@b)+03h)),c,w
  9682  001A62  2444               	movwf	((c:___fladd@bexp)),c
  9683  001A64  6E53               	line	23
  9684                           	
  9685                           l3515:
  9686  001A66                     	
  9687                           	btfss	(0+((c:___fladd@b)+02h)),c,(7)&7
  9688  001A66  AE43               	goto	u4121
  9689  001A68  EF38  F00D         	goto	u4120
  9690  001A6C  EF3A  F00D         u4121:
  9691  001A70                     	goto	l3519
  9692  001A70  EF3D  F00D         u4120:
  9693  001A74                     	line	24
  9694                           	
  9695                           l3517:
  9696  001A74                     	bsf	(0+(0/8)+(c:___fladd@bexp)),c,(0)&7
  9697  001A74  8053               	goto	l3519
  9698  001A76  EF3D  F00D         	line	25
  9699                           	
  9700                           l976:
  9701  001A7A                     	line	28
  9702                           	
  9703                           l3519:
  9704  001A7A                     	movf	((c:___fladd@bexp)),c,w
  9705  001A7A  5053               	btfsc	status,2
  9706  001A7C  B4D8               	goto	u4131
  9707  001A7E  EF43  F00D         	goto	u4130
  9708  001A82  EF45  F00D         u4131:
  9709  001A86                     	goto	l3529
  9710  001A86  EF5C  F00D         u4130:
  9711  001A8A                     	line	30
  9712                           	
  9713                           l3521:
  9714  001A8A                     		incf	((c:___fladd@bexp)),c,w
  9715  001A8A  2853               	btfss	status,2
  9716  001A8C  A4D8               	goto	u4141
  9717  001A8E  EF4B  F00D         	goto	u4140
  9718  001A92  EF4D  F00D         
  9719                           u4141:
  9720  001A96                     	goto	l3525
  9721  001A96  EF57  F00D         u4140:
  9722  001A9A                     	line	32
  9723                           	
  9724                           l3523:
  9725  001A9A                     	movlw	low(normalize32(0x0))
  9726  001A9A  0E00               	movwf	((c:___fladd@b)),c
  9727  001A9C  6E41               	movlw	high(normalize32(0x0))
  9728  001A9E  0E00               	movwf	((c:___fladd@b+1)),c
  9729  001AA0  6E42               	movlw	low highword(normalize32(0x0))
  9730  001AA2  0E00               	movwf	((c:___fladd@b+2)),c
  9731  001AA4  6E43               	movlw	high highword(normalize32(0x0))
  9732  001AA6  0E00               	movwf	((c:___fladd@b+3)),c
  9733  001AA8  6E44               	goto	l3525
  9734  001AAA  EF57  F00D         	line	33
  9735                           	
  9736                           l978:
  9737  001AAE                     	line	35
  9738                           	
  9739                           l3525:
  9740  001AAE                     	bsf	(0+(23/8)+(c:___fladd@b)),c,(23)&7
  9741  001AAE  8E43               	line	37
  9742                           	
  9743                           l3527:
  9744  001AB0                     	movlw	low(0)
  9745  001AB0  0E00               	movwf	(0+((c:___fladd@b)+03h)),c
  9746  001AB2  6E44               	line	38
  9747                           	goto	l3531
  9748  001AB4  EF66  F00D         	line	39
  9749                           	
  9750                           l977:
  9751  001AB8                     	line	41
  9752                           	
  9753                           l3529:
  9754  001AB8                     	movlw	low(normalize32(0x0))
  9755  001AB8  0E00               	movwf	((c:___fladd@b)),c
  9756  001ABA  6E41               	movlw	high(normalize32(0x0))
  9757  001ABC  0E00               	movwf	((c:___fladd@b+1)),c
  9758  001ABE  6E42               	movlw	low highword(normalize32(0x0))
  9759  001AC0  0E00               	movwf	((c:___fladd@b+2)),c
  9760  001AC2  6E43               	movlw	high highword(normalize32(0x0))
  9761  001AC4  0E00               	movwf	((c:___fladd@b+3)),c
  9762  001AC6  6E44               	goto	l3531
  9763  001AC8  EF66  F00D         	line	42
  9764                           	
  9765                           l979:
  9766  001ACC                     	line	44
  9767                           	
  9768                           l3531:
  9769  001ACC                     	movf	(0+((c:___fladd@a)+03h)),c,w
  9770  001ACC  5048               	andlw	low(080h)
  9771  001ACE  0B80               	movwf	((c:___fladd@aexp)),c
  9772  001AD0  6E52               	line	46
  9773                           	
  9774                           l3533:
  9775  001AD2                     	movf	((c:___fladd@signs)),c,w
  9776  001AD2  5051               xorwf	((c:___fladd@aexp)),c,w
  9777  001AD4  1852               	btfsc	status,2
  9778  001AD6  B4D8               	goto	u4151
  9779  001AD8  EF70  F00D         	goto	u4150
  9780  001ADC  EF72  F00D         
  9781                           u4151:
  9782  001AE0                     	goto	l3537
  9783  001AE0  EF75  F00D         u4150:
  9784  001AE4                     	line	47
  9785                           	
  9786                           l3535:
  9787  001AE4                     	bsf	(0+(6/8)+(c:___fladd@signs)),c,(6)&7
  9788  001AE4  8C51               	goto	l3537
  9789  001AE6  EF75  F00D         	line	48
  9790                           	
  9791                           l980:
  9792  001AEA                     	line	49
  9793                           	
  9794                           l3537:
  9795  001AEA                     	movf	(0+((c:___fladd@a)+03h)),c,w
  9796  001AEA  5048               	addwf	(0+((c:___fladd@a)+03h)),c,w
  9797  001AEC  2448               	movwf	((c:___fladd@aexp)),c
  9798  001AEE  6E52               	line	50
  9799                           	
  9800                           l3539:
  9801  001AF0                     	
  9802                           	btfss	(0+((c:___fladd@a)+02h)),c,(7)&7
  9803  001AF0  AE47               	goto	u4161
  9804  001AF2  EF7D  F00D         	goto	u4160
  9805  001AF6  EF7F  F00D         u4161:
  9806  001AFA                     	goto	l3543
  9807  001AFA  EF82  F00D         u4160:
  9808  001AFE                     	line	51
  9809                           	
  9810                           l3541:
  9811  001AFE                     	bsf	(0+(0/8)+(c:___fladd@aexp)),c,(0)&7
  9812  001AFE  8052               	goto	l3543
  9813  001B00  EF82  F00D         	line	52
  9814                           	
  9815                           l981:
  9816  001B04                     	line	55
  9817                           	
  9818                           l3543:
  9819  001B04                     	movf	((c:___fladd@aexp)),c,w
  9820  001B04  5052               	btfsc	status,2
  9821  001B06  B4D8               	goto	u4171
  9822  001B08  EF88  F00D         	goto	u4170
  9823  001B0C  EF8A  F00D         u4171:
  9824  001B10                     	goto	l3553
  9825  001B10  EFA1  F00D         u4170:
  9826  001B14                     	line	57
  9827                           	
  9828                           l3545:
  9829  001B14                     		incf	((c:___fladd@aexp)),c,w
  9830  001B14  2852               	btfss	status,2
  9831  001B16  A4D8               	goto	u4181
  9832  001B18  EF90  F00D         	goto	u4180
  9833  001B1C  EF92  F00D         
  9834                           u4181:
  9835  001B20                     	goto	l3549
  9836  001B20  EF9C  F00D         u4180:
  9837  001B24                     	line	59
  9838                           	
  9839                           l3547:
  9840  001B24                     	movlw	low(normalize32(0x0))
  9841  001B24  0E00               	movwf	((c:___fladd@a)),c
  9842  001B26  6E45               	movlw	high(normalize32(0x0))
  9843  001B28  0E00               	movwf	((c:___fladd@a+1)),c
  9844  001B2A  6E46               	movlw	low highword(normalize32(0x0))
  9845  001B2C  0E00               	movwf	((c:___fladd@a+2)),c
  9846  001B2E  6E47               	movlw	high highword(normalize32(0x0))
  9847  001B30  0E00               	movwf	((c:___fladd@a+3)),c
  9848  001B32  6E48               	goto	l3549
  9849  001B34  EF9C  F00D         	line	60
  9850                           	
  9851                           l983:
  9852  001B38                     	line	62
  9853                           	
  9854                           l3549:
  9855  001B38                     	bsf	(0+(23/8)+(c:___fladd@a)),c,(23)&7
  9856  001B38  8E47               	line	64
  9857                           	
  9858                           l3551:
  9859  001B3A                     	movlw	low(0)
  9860  001B3A  0E00               	movwf	(0+((c:___fladd@a)+03h)),c
  9861  001B3C  6E48               	line	65
  9862                           	goto	l3555
  9863  001B3E  EFAB  F00D         	line	66
  9864                           	
  9865                           l982:
  9866  001B42                     	line	68
  9867                           	
  9868                           l3553:
  9869  001B42                     	movlw	low(normalize32(0x0))
  9870  001B42  0E00               	movwf	((c:___fladd@a)),c
  9871  001B44  6E45               	movlw	high(normalize32(0x0))
  9872  001B46  0E00               	movwf	((c:___fladd@a+1)),c
  9873  001B48  6E46               	movlw	low highword(normalize32(0x0))
  9874  001B4A  0E00               	movwf	((c:___fladd@a+2)),c
  9875  001B4C  6E47               	movlw	high highword(normalize32(0x0))
  9876  001B4E  0E00               	movwf	((c:___fladd@a+3)),c
  9877  001B50  6E48               	goto	l3555
  9878  001B52  EFAB  F00D         	line	69
  9879                           	
  9880                           l984:
  9881  001B56                     	line	75
  9882                           	
  9883                           l3555:
  9884  001B56                     		movf	((c:___fladd@bexp)),c,w
  9885  001B56  5053               	subwf	((c:___fladd@aexp)),c,w
  9886  001B58  5C52               	btfsc	status,0
  9887  001B5A  B0D8               	goto	u4191
  9888  001B5C  EFB2  F00D         	goto	u4190
  9889  001B60  EFB4  F00D         
  9890                           u4191:
  9891  001B64                     	goto	l3591
  9892  001B64  EFDF  F00D         u4190:
  9893  001B68                     	line	77
  9894                           	
  9895                           l3557:
  9896  001B68                     	
  9897                           	btfss	((c:___fladd@signs)),c,(6)&7
  9898  001B68  AC51               	goto	u4201
  9899  001B6A  EFB9  F00D         	goto	u4200
  9900  001B6E  EFBB  F00D         u4201:
  9901  001B72                     	goto	l3561
  9902  001B72  EFBF  F00D         u4200:
  9903  001B76                     	line	78
  9904                           	
  9905                           l3559:
  9906  001B76                     	movlw	(080h)&0ffh
  9907  001B76  0E80               	xorwf	((c:___fladd@signs)),c
  9908  001B78  1A51               	goto	l3561
  9909  001B7A  EFBF  F00D         	line	79
  9910                           	
  9911                           l986:
  9912  001B7E                     	line	81
  9913                           	
  9914                           l3561:
  9915  001B7E                     	movff	(c:___fladd@bexp),(c:___fladd@grs)
  9916  001B7E  C053  F054         	line	82
  9917                           	
  9918                           l3563:
  9919  001B82                     	movff	(c:___fladd@aexp),(c:___fladd@bexp)
  9920  001B82  C052  F053         	line	83
  9921                           	
  9922                           l3565:
  9923  001B86                     	movff	(c:___fladd@grs),(c:___fladd@aexp)
  9924  001B86  C054  F052         	line	84
  9925                           	
  9926                           l3567:
  9927  001B8A                     	movff	(c:___fladd@b),(c:___fladd@grs)
  9928  001B8A  C041  F054         	line	85
  9929                           	
  9930                           l3569:
  9931  001B8E                     	movff	(c:___fladd@a),(c:___fladd@b)
  9932  001B8E  C045  F041         	line	86
  9933                           	
  9934                           l3571:
  9935  001B92                     	movff	(c:___fladd@grs),(c:___fladd@a)
  9936  001B92  C054  F045         	line	87
  9937                           	
  9938                           l3573:
  9939  001B96                     	movff	0+((c:___fladd@b)+01h),(c:___fladd@grs)
  9940  001B96  C042  F054         	line	88
  9941                           	
  9942                           l3575:
  9943  001B9A                     	movff	0+((c:___fladd@a)+01h),0+((c:___fladd@b)+01h)
  9944  001B9A  C046  F042         	line	89
  9945                           	
  9946                           l3577:
  9947  001B9E                     	movff	(c:___fladd@grs),0+((c:___fladd@a)+01h)
  9948  001B9E  C054  F046         	line	90
  9949                           	
  9950                           l3579:
  9951  001BA2                     	movff	0+((c:___fladd@b)+02h),(c:___fladd@grs)
  9952  001BA2  C043  F054         	line	91
  9953                           	
  9954                           l3581:
  9955  001BA6                     	movff	0+((c:___fladd@a)+02h),0+((c:___fladd@b)+02h)
  9956  001BA6  C047  F043         	line	92
  9957                           	
  9958                           l3583:
  9959  001BAA                     	movff	(c:___fladd@grs),0+((c:___fladd@a)+02h)
  9960  001BAA  C054  F047         	line	93
  9961                           	
  9962                           l3585:
  9963  001BAE                     	movff	0+((c:___fladd@b)+03h),(c:___fladd@grs)
  9964  001BAE  C044  F054         	line	94
  9965                           	
  9966                           l3587:
  9967  001BB2                     	movff	0+((c:___fladd@a)+03h),0+((c:___fladd@b)+03h)
  9968  001BB2  C048  F044         	line	95
  9969                           	
  9970                           l3589:
  9971  001BB6                     	movff	(c:___fladd@grs),0+((c:___fladd@a)+03h)
  9972  001BB6  C054  F048         	goto	l3591
  9973  001BBA  EFDF  F00D         	line	96
  9974                           	
  9975                           l985:
  9976  001BBE                     	line	98
  9977                           	
  9978                           l3591:
  9979  001BBE                     	movlw	low(0)
  9980  001BBE  0E00               	movwf	((c:___fladd@grs)),c
  9981  001BC0  6E54               	line	100
  9982                           	
  9983                           l3593:
  9984  001BC2                     	movf	((c:___fladd@bexp)),c,w
  9985  001BC2  5053               	movwf	(??___fladd+0+0)&0ffh,c
  9986  001BC4  6E49               	clrf	(??___fladd+0+0+1)&0ffh,c
  9987  001BC6  6A4A               
  9988                           	comf	(??___fladd+0+0),c
  9989  001BC8  1E49               	comf	(??___fladd+0+1),c
  9990  001BCA  1E4A               	infsnz	(??___fladd+0+0),c
  9991  001BCC  4A49               	incf	(??___fladd+0+1),c
  9992  001BCE  2A4A               	movf	((c:___fladd@aexp)),c,w
  9993  001BD0  5052               	movwf	(??___fladd+2+0)&0ffh,c
  9994  001BD2  6E4B               	clrf	(??___fladd+2+0+1)&0ffh,c
  9995  001BD4  6A4C               
  9996                           	movf	(??___fladd+0+0),c,w
  9997  001BD6  5049               	addwf	(??___fladd+2+0),c
  9998  001BD8  264B               	movf	(??___fladd+0+1),c,w
  9999  001BDA  504A               	addwfc	(??___fladd+2+1),c
 10000  001BDC  224C               	btfsc	(??___fladd+2+1),c,7
 10001  001BDE  BE4C               	goto	u4211
 10002  001BE0  EFFB  F00D         	movf	(??___fladd+2+1),c,w
 10003  001BE4  504C               	bnz	u4210
 10004  001BE6  E109               	movlw	26
 10005  001BE8  0E1A               	subwf	 (??___fladd+2+0),c,w
 10006  001BEA  5C4B               	btfss	status,0
 10007  001BEC  A0D8               	goto	u4211
 10008  001BEE  EFFB  F00D         	goto	u4210
 10009  001BF2  EFFD  F00D         
 10010                           u4211:
 10011  001BF6                     	goto	l989
 10012  001BF6  EF3A  F00E         u4210:
 10013  001BFA                     	line	101
 10014                           	
 10015                           l3595:
 10016  001BFA                     	movf	((c:___fladd@b)),c,w
 10017  001BFA  5041               iorwf	((c:___fladd@b+1)),c,w
 10018  001BFC  1042               iorwf	((c:___fladd@b+2)),c,w
 10019  001BFE  1043               iorwf	((c:___fladd@b+3)),c,w
 10020  001C00  1044               	btfss	status,2
 10021  001C02  A4D8               	goto	u4221
 10022  001C04  EF06  F00E         	goto	u4220
 10023  001C08  EF09  F00E         
 10024                           u4221:
 10025  001C0C                     	movlw	1
 10026  001C0C  0E01               	goto	u4230
 10027  001C0E  EF0A  F00E         u4220:
 10028  001C12                     	movlw	0
 10029  001C12  0E00               u4230:
 10030  001C14                     	movwf	((c:___fladd@grs)),c
 10031  001C14  6E54               	line	102
 10032                           	
 10033                           l3597:
 10034  001C16                     	movlw	low(0)
 10035  001C16  0E00               	movwf	((c:___fladd@b)),c
 10036  001C18  6E41               	movlw	high(0)
 10037  001C1A  0E00               	movwf	((c:___fladd@b+1)),c
 10038  001C1C  6E42               	movlw	low highword(0)
 10039  001C1E  0E00               	movwf	((c:___fladd@b+2)),c
 10040  001C20  6E43               	movlw	high highword(0)
 10041  001C22  0E00               	movwf	((c:___fladd@b+3)),c
 10042  001C24  6E44               	line	103
 10043                           	
 10044                           l3599:
 10045  001C26                     	movff	(c:___fladd@aexp),(c:___fladd@bexp)
 10046  001C26  C052  F053         	line	104
 10047                           	goto	l988
 10048  001C2A  EF45  F00E         	line	105
 10049                           	
 10050                           l987:
 10051  001C2E                     	line	106
 10052                           	goto	l989
 10053  001C2E  EF3A  F00E         	
 10054                           l990:
 10055  001C32                     	line	109
 10056                           	
 10057                           	btfss	((c:___fladd@grs)),c,(0)&7
 10058  001C32  A054               	goto	u4241
 10059  001C34  EF1E  F00E         	goto	u4240
 10060  001C38  EF20  F00E         u4241:
 10061  001C3C                     	goto	l3603
 10062  001C3C  EF26  F00E         u4240:
 10063  001C40                     	line	110
 10064                           	
 10065                           l3601:
 10066  001C40                     	bcf	status,0
 10067  001C40  90D8               	rrcf	((c:___fladd@grs)),c,w
 10068  001C42  3054               	iorlw	low(01h)
 10069  001C44  0901               	movwf	((c:___fladd@grs)),c
 10070  001C46  6E54               	line	111
 10071                           	goto	l3605
 10072  001C48  EF2A  F00E         	line	112
 10073                           	
 10074                           l991:
 10075  001C4C                     	line	113
 10076                           	
 10077                           l3603:
 10078  001C4C                     	bcf status,0
 10079  001C4C  90D8               	rrcf	((c:___fladd@grs)),c
 10080  001C4E  3254               
 10081                           	goto	l3605
 10082  001C50  EF2A  F00E         	line	114
 10083                           	
 10084                           l992:
 10085  001C54                     	line	115
 10086                           	
 10087                           l3605:
 10088  001C54                     	
 10089                           	btfss	((c:___fladd@b)),c,(0)&7
 10090  001C54  A041               	goto	u4251
 10091  001C56  EF2F  F00E         	goto	u4250
 10092  001C5A  EF31  F00E         u4251:
 10093  001C5E                     	goto	l3609
 10094  001C5E  EF34  F00E         u4250:
 10095  001C62                     	line	116
 10096                           	
 10097                           l3607:
 10098  001C62                     	bsf	(0+(7/8)+(c:___fladd@grs)),c,(7)&7
 10099  001C62  8E54               	goto	l3609
 10100  001C64  EF34  F00E         	line	117
 10101                           	
 10102                           l993:
 10103  001C68                     	line	118
 10104                           	
 10105                           l3609:
 10106  001C68                     	rlcf	((c:___fladd@b+3)),c,w
 10107  001C68  3444               	rrcf	((c:___fladd@b+3)),c
 10108  001C6A  3244               	rrcf	((c:___fladd@b+2)),c
 10109  001C6C  3243               	rrcf	((c:___fladd@b+1)),c
 10110  001C6E  3242               	rrcf	((c:___fladd@b)),c
 10111  001C70  3241               	line	119
 10112                           	
 10113                           l3611:
 10114  001C72                     	incf	((c:___fladd@bexp)),c
 10115  001C72  2A53               	line	120
 10116                           	
 10117                           l989:
 10118  001C74                     	line	106
 10119                           		movf	((c:___fladd@aexp)),c,w
 10120  001C74  5052               	subwf	((c:___fladd@bexp)),c,w
 10121  001C76  5C53               	btfss	status,0
 10122  001C78  A0D8               	goto	u4261
 10123  001C7A  EF41  F00E         	goto	u4260
 10124  001C7E  EF43  F00E         
 10125                           u4261:
 10126  001C82                     	goto	l990
 10127  001C82  EF19  F00E         u4260:
 10128  001C86                     	goto	l988
 10129  001C86  EF45  F00E         	
 10130                           l994:
 10131  001C8A                     	line	121
 10132                           	
 10133                           l988:
 10134  001C8A                     	line	124
 10135                           	
 10136                           	btfsc	((c:___fladd@signs)),c,(6)&7
 10137  001C8A  BC51               	goto	u4271
 10138  001C8C  EF4A  F00E         	goto	u4270
 10139  001C90  EF4C  F00E         u4271:
 10140  001C94                     	goto	l3637
 10141  001C94  EF94  F00E         u4270:
 10142  001C98                     	line	127
 10143                           	
 10144                           l3613:
 10145  001C98                     	movf	((c:___fladd@bexp)),c,w
 10146  001C98  5053               	btfss	status,2
 10147  001C9A  A4D8               	goto	u4281
 10148  001C9C  EF52  F00E         	goto	u4280
 10149  001CA0  EF54  F00E         u4281:
 10150  001CA4                     	goto	l3619
 10151  001CA4  EF60  F00E         u4280:
 10152  001CA8                     	line	128
 10153                           	
 10154                           l3615:
 10155  001CA8                     	movlw	low(normalize32(0x0))
 10156  001CA8  0E00               	movwf	((c:?___fladd)),c
 10157  001CAA  6E41               	movlw	high(normalize32(0x0))
 10158  001CAC  0E00               	movwf	((c:?___fladd+1)),c
 10159  001CAE  6E42               	movlw	low highword(normalize32(0x0))
 10160  001CB0  0E00               	movwf	((c:?___fladd+2)),c
 10161  001CB2  6E43               	movlw	high highword(normalize32(0x0))
 10162  001CB4  0E00               	movwf	((c:?___fladd+3)),c
 10163  001CB6  6E44               	goto	l997
 10164  001CB8  EFEE  F00F         	
 10165                           l3617:
 10166  001CBC                     	goto	l997
 10167  001CBC  EFEE  F00F         	line	129
 10168                           	
 10169                           l996:
 10170  001CC0                     	line	132
 10171                           	
 10172                           l3619:
 10173  001CC0                     	movf	((c:___fladd@a)),c,w
 10174  001CC0  5045               	addwf	((c:___fladd@b)),c
 10175  001CC2  2641               	movf	((c:___fladd@a+1)),c,w
 10176  001CC4  5046               	addwfc	((c:___fladd@b+1)),c
 10177  001CC6  2242               	movf	((c:___fladd@a+2)),c,w
 10178  001CC8  5047               	addwfc	((c:___fladd@b+2)),c
 10179  001CCA  2243               	movf	((c:___fladd@a+3)),c,w
 10180  001CCC  5048               	addwfc	((c:___fladd@b+3)),c
 10181  001CCE  2244               	line	134
 10182                           	
 10183                           l3621:
 10184  001CD0                     	
 10185                           	btfss	((c:___fladd@b+3)),c,(24)&7
 10186  001CD0  A044               	goto	u4291
 10187  001CD2  EF6D  F00E         	goto	u4290
 10188  001CD6  EF6F  F00E         u4291:
 10189  001CDA                     	goto	l3673
 10190  001CDA  EF44  F00F         u4290:
 10191  001CDE                     	line	135
 10192                           	
 10193                           l3623:
 10194  001CDE                     	
 10195                           	btfss	((c:___fladd@grs)),c,(0)&7
 10196  001CDE  A054               	goto	u4301
 10197  001CE0  EF74  F00E         	goto	u4300
 10198  001CE4  EF76  F00E         u4301:
 10199  001CE8                     	goto	l3627
 10200  001CE8  EF7C  F00E         u4300:
 10201  001CEC                     	line	136
 10202                           	
 10203                           l3625:
 10204  001CEC                     	bcf	status,0
 10205  001CEC  90D8               	rrcf	((c:___fladd@grs)),c,w
 10206  001CEE  3054               	iorlw	low(01h)
 10207  001CF0  0901               	movwf	((c:___fladd@grs)),c
 10208  001CF2  6E54               	line	137
 10209                           	goto	l3629
 10210  001CF4  EF80  F00E         	line	138
 10211                           	
 10212                           l999:
 10213  001CF8                     	line	139
 10214                           	
 10215                           l3627:
 10216  001CF8                     	bcf status,0
 10217  001CF8  90D8               	rrcf	((c:___fladd@grs)),c
 10218  001CFA  3254               
 10219                           	goto	l3629
 10220  001CFC  EF80  F00E         	line	140
 10221                           	
 10222                           l1000:
 10223  001D00                     	line	141
 10224                           	
 10225                           l3629:
 10226  001D00                     	
 10227                           	btfss	((c:___fladd@b)),c,(0)&7
 10228  001D00  A041               	goto	u4311
 10229  001D02  EF85  F00E         	goto	u4310
 10230  001D06  EF87  F00E         u4311:
 10231  001D0A                     	goto	l3633
 10232  001D0A  EF8A  F00E         u4310:
 10233  001D0E                     	line	142
 10234                           	
 10235                           l3631:
 10236  001D0E                     	bsf	(0+(7/8)+(c:___fladd@grs)),c,(7)&7
 10237  001D0E  8E54               	goto	l3633
 10238  001D10  EF8A  F00E         	line	143
 10239                           	
 10240                           l1001:
 10241  001D14                     	line	144
 10242                           	
 10243                           l3633:
 10244  001D14                     	rlcf	((c:___fladd@b+3)),c,w
 10245  001D14  3444               	rrcf	((c:___fladd@b+3)),c
 10246  001D16  3244               	rrcf	((c:___fladd@b+2)),c
 10247  001D18  3243               	rrcf	((c:___fladd@b+1)),c
 10248  001D1A  3242               	rrcf	((c:___fladd@b)),c
 10249  001D1C  3241               	line	145
 10250                           	
 10251                           l3635:
 10252  001D1E                     	incf	((c:___fladd@bexp)),c
 10253  001D1E  2A53               	goto	l3673
 10254  001D20  EF44  F00F         	line	146
 10255                           	
 10256                           l998:
 10257  001D24                     	line	148
 10258                           	goto	l3673
 10259  001D24  EF44  F00F         	line	149
 10260                           	
 10261                           l995:
 10262  001D28                     	line	153
 10263                           	
 10264                           l3637:
 10265  001D28                     		movf	((c:___fladd@a)),c,w
 10266  001D28  5045               	subwf	((c:___fladd@b)),c,w
 10267  001D2A  5C41               	movf	((c:___fladd@a+1)),c,w
 10268  001D2C  5046               	subwfb	((c:___fladd@b+1)),c,w
 10269  001D2E  5842               	movf	((c:___fladd@a+2)),c,w
 10270  001D30  5047               	subwfb	((c:___fladd@b+2)),c,w
 10271  001D32  5843               	movf	((c:___fladd@b+3)),c,w
 10272  001D34  5044               	xorlw	80h
 10273  001D36  0A80               	movwf	(??___fladd+0+0)&0ffh,c
 10274  001D38  6E49               	movf	((c:___fladd@a+3)),c,w
 10275  001D3A  5048               	xorlw	80h
 10276  001D3C  0A80               	subwfb	(??___fladd+0+0)&0ffh,c,w
 10277  001D3E  5849               	btfsc	status,0
 10278  001D40  B0D8               	goto	u4321
 10279  001D42  EFA5  F00E         	goto	u4320
 10280  001D46  EFA7  F00E         
 10281                           u4321:
 10282  001D4A                     	goto	l3647
 10283  001D4A  EFE5  F00E         u4320:
 10284  001D4E                     	line	154
 10285                           	
 10286                           l3639:
 10287  001D4E                     	movff	(c:___fladd@b),??___fladd+0+0
 10288  001D4E  C041  F049         	movff	(c:___fladd@b+1),??___fladd+0+0+1
 10289  001D52  C042  F04A         	movff	(c:___fladd@b+2),??___fladd+0+0+2
 10290  001D56  C043  F04B         	movff	(c:___fladd@b+3),??___fladd+0+0+3
 10291  001D5A  C044  F04C         	comf	(??___fladd+0+0),c
 10292  001D5E  1E49               	comf	(??___fladd+0+1),c
 10293  001D60  1E4A               	comf	(??___fladd+0+2),c
 10294  001D62  1E4B               	comf	(??___fladd+0+3),c
 10295  001D64  1E4C               	incf	(??___fladd+0+0),c
 10296  001D66  2A49               	movlw	0
 10297  001D68  0E00               	addwfc	(??___fladd+0+1),c
 10298  001D6A  224A               	addwfc	(??___fladd+0+2),c
 10299  001D6C  224B               	addwfc	(??___fladd+0+3),c
 10300  001D6E  224C               	movf	((c:___fladd@a)),c,w
 10301  001D70  5045               	addwf	(??___fladd+0+0),c,w
 10302  001D72  2449               	movwf	(??___fladd+4+0)&0ffh,c
 10303  001D74  6E4D               	movf	((c:___fladd@a+1)),c,w
 10304  001D76  5046               	addwfc	(??___fladd+0+1),c,w
 10305  001D78  204A               	movwf	1+(??___fladd+4+0)&0ffh,c
 10306  001D7A  6E4E               	
 10307                           	movf	((c:___fladd@a+2)),c,w
 10308  001D7C  5047               	addwfc	(??___fladd+0+2),c,w
 10309  001D7E  204B               	movwf	2+(??___fladd+4+0)&0ffh,c
 10310  001D80  6E4F               	
 10311                           	movf	((c:___fladd@a+3)),c,w
 10312  001D82  5048               	addwfc	(??___fladd+0+3),c,w
 10313  001D84  204C               	movwf	3+(??___fladd+4+0)&0ffh,c
 10314  001D86  6E50               	movlw	0FFh
 10315  001D88  0EFF               	addwf	(??___fladd+4+0),c,w
 10316  001D8A  244D               	movwf	((c:___fladd@b)),c
 10317  001D8C  6E41               	movlw	0FFh
 10318  001D8E  0EFF               	addwfc	(??___fladd+4+1),c,w
 10319  001D90  204E               	movwf	1+((c:___fladd@b)),c
 10320  001D92  6E42               	
 10321                           	movlw	0FFh
 10322  001D94  0EFF               	addwfc	(??___fladd+4+2),c,w
 10323  001D96  204F               	movwf	2+((c:___fladd@b)),c
 10324  001D98  6E43               	
 10325                           	movlw	0FFh
 10326  001D9A  0EFF               	addwfc	(??___fladd+4+3),c,w
 10327  001D9C  2050               	movwf	3+((c:___fladd@b)),c
 10328  001D9E  6E44               	line	155
 10329                           	movlw	(080h)&0ffh
 10330  001DA0  0E80               	xorwf	((c:___fladd@signs)),c
 10331  001DA2  1A51               	line	156
 10332                           	
 10333                           l3641:
 10334  001DA4                     	negf	((c:___fladd@grs)),c
 10335  001DA4  6C54               	line	157
 10336                           	
 10337                           l3643:
 10338  001DA6                     	movf	((c:___fladd@grs)),c,w
 10339  001DA6  5054               	btfss	status,2
 10340  001DA8  A4D8               	goto	u4331
 10341  001DAA  EFD9  F00E         	goto	u4330
 10342  001DAE  EFDB  F00E         u4331:
 10343  001DB2                     	goto	l1005
 10344  001DB2  EFED  F00E         u4330:
 10345  001DB6                     	line	158
 10346                           	
 10347                           l3645:
 10348  001DB6                     	movlw	low(01h)
 10349  001DB6  0E01               	addwf	((c:___fladd@b)),c
 10350  001DB8  2641               	movlw	0
 10351  001DBA  0E00               	addwfc	((c:___fladd@b+1)),c
 10352  001DBC  2242               	addwfc	((c:___fladd@b+2)),c
 10353  001DBE  2243               	addwfc	((c:___fladd@b+3)),c
 10354  001DC0  2244               	goto	l1005
 10355  001DC2  EFED  F00E         	line	159
 10356                           	
 10357                           l1004:
 10358  001DC6                     	line	160
 10359                           	goto	l1005
 10360  001DC6  EFED  F00E         	line	161
 10361                           	
 10362                           l1003:
 10363  001DCA                     	line	162
 10364                           	
 10365                           l3647:
 10366  001DCA                     	movf	((c:___fladd@a)),c,w
 10367  001DCA  5045               	subwf	((c:___fladd@b)),c
 10368  001DCC  5E41               	movf	((c:___fladd@a+1)),c,w
 10369  001DCE  5046               	subwfb	((c:___fladd@b+1)),c
 10370  001DD0  5A42               	movf	((c:___fladd@a+2)),c,w
 10371  001DD2  5047               	subwfb	((c:___fladd@b+2)),c
 10372  001DD4  5A43               	movf	((c:___fladd@a+3)),c,w
 10373  001DD6  5048               	subwfb	((c:___fladd@b+3)),c
 10374  001DD8  5A44               	line	163
 10375                           	
 10376                           l1005:
 10377  001DDA                     	line	166
 10378                           	movf	((c:___fladd@b)),c,w
 10379  001DDA  5041               iorwf	((c:___fladd@b+1)),c,w
 10380  001DDC  1042               iorwf	((c:___fladd@b+2)),c,w
 10381  001DDE  1043               iorwf	((c:___fladd@b+3)),c,w
 10382  001DE0  1044               	btfss	status,2
 10383  001DE2  A4D8               	goto	u4341
 10384  001DE4  EFF6  F00E         	goto	u4340
 10385  001DE8  EFF8  F00E         
 10386                           u4341:
 10387  001DEC                     	goto	l3671
 10388  001DEC  EF39  F00F         u4340:
 10389  001DF0                     	
 10390                           l3649:
 10391  001DF0                     	movf	((c:___fladd@grs)),c,w
 10392  001DF0  5054               	btfss	status,2
 10393  001DF2  A4D8               	goto	u4351
 10394  001DF4  EFFE  F00E         	goto	u4350
 10395  001DF8  EF00  F00F         u4351:
 10396  001DFC                     	goto	l3671
 10397  001DFC  EF39  F00F         u4350:
 10398  001E00                     	line	167
 10399                           	
 10400                           l3651:
 10401  001E00                     	movlw	low(normalize32(0x0))
 10402  001E00  0E00               	movwf	((c:?___fladd)),c
 10403  001E02  6E41               	movlw	high(normalize32(0x0))
 10404  001E04  0E00               	movwf	((c:?___fladd+1)),c
 10405  001E06  6E42               	movlw	low highword(normalize32(0x0))
 10406  001E08  0E00               	movwf	((c:?___fladd+2)),c
 10407  001E0A  6E43               	movlw	high highword(normalize32(0x0))
 10408  001E0C  0E00               	movwf	((c:?___fladd+3)),c
 10409  001E0E  6E44               	goto	l997
 10410  001E10  EFEE  F00F         	
 10411                           l3653:
 10412  001E14                     	goto	l997
 10413  001E14  EFEE  F00F         	line	168
 10414                           	
 10415                           l1006:
 10416  001E18                     	line	171
 10417                           	goto	l3671
 10418  001E18  EF39  F00F         	
 10419                           l1008:
 10420  001E1C                     	line	172
 10421                           	
 10422                           l3655:
 10423  001E1C                     	bcf	status,0
 10424  001E1C  90D8               	rlcf	((c:___fladd@b)),c
 10425  001E1E  3641               	rlcf	((c:___fladd@b+1)),c
 10426  001E20  3642               	rlcf	((c:___fladd@b+2)),c
 10427  001E22  3643               	rlcf	((c:___fladd@b+3)),c
 10428  001E24  3644               	line	173
 10429                           	
 10430                           l3657:
 10431  001E26                     	
 10432                           	btfss	((c:___fladd@grs)),c,(7)&7
 10433  001E26  AE54               	goto	u4361
 10434  001E28  EF18  F00F         	goto	u4360
 10435  001E2C  EF1A  F00F         u4361:
 10436  001E30                     	goto	l3661
 10437  001E30  EF1D  F00F         u4360:
 10438  001E34                     	line	174
 10439                           	
 10440                           l3659:
 10441  001E34                     	bsf	(0+(0/8)+(c:___fladd@b)),c,(0)&7
 10442  001E34  8041               	goto	l3661
 10443  001E36  EF1D  F00F         	line	175
 10444                           	
 10445                           l1009:
 10446  001E3A                     	line	176
 10447                           	
 10448                           l3661:
 10449  001E3A                     	
 10450                           	btfss	((c:___fladd@grs)),c,(0)&7
 10451  001E3A  A054               	goto	u4371
 10452  001E3C  EF22  F00F         	goto	u4370
 10453  001E40  EF24  F00F         u4371:
 10454  001E44                     	goto	l3665
 10455  001E44  EF28  F00F         u4370:
 10456  001E48                     	line	177
 10457                           	
 10458                           l3663:
 10459  001E48                     	bsf	status,0
 10460  001E48  80D8               	
 10461                           	rlcf	((c:___fladd@grs)),c
 10462  001E4A  3654               	line	178
 10463                           	goto	l3667
 10464  001E4C  EF2C  F00F         	line	179
 10465                           	
 10466                           l1010:
 10467  001E50                     	line	180
 10468                           	
 10469                           l3665:
 10470  001E50                     	bcf status,0
 10471  001E50  90D8               	rlcf	((c:___fladd@grs)),c
 10472  001E52  3654               
 10473                           	goto	l3667
 10474  001E54  EF2C  F00F         	line	181
 10475                           	
 10476                           l1011:
 10477  001E58                     	line	182
 10478                           	
 10479                           l3667:
 10480  001E58                     	movf	((c:___fladd@bexp)),c,w
 10481  001E58  5053               	btfsc	status,2
 10482  001E5A  B4D8               	goto	u4381
 10483  001E5C  EF32  F00F         	goto	u4380
 10484  001E60  EF34  F00F         u4381:
 10485  001E64                     	goto	l3671
 10486  001E64  EF39  F00F         u4380:
 10487  001E68                     	line	183
 10488                           	
 10489                           l3669:
 10490  001E68                     	decf	((c:___fladd@bexp)),c
 10491  001E68  0653               	goto	l3671
 10492  001E6A  EF39  F00F         	line	184
 10493                           	
 10494                           l1012:
 10495  001E6E                     	goto	l3671
 10496  001E6E  EF39  F00F         	line	185
 10497                           	
 10498                           l1007:
 10499  001E72                     	line	171
 10500                           	
 10501                           l3671:
 10502  001E72                     	
 10503                           	btfss	((c:___fladd@b+2)),c,(23)&7
 10504  001E72  AE43               	goto	u4391
 10505  001E74  EF3E  F00F         	goto	u4390
 10506  001E78  EF40  F00F         u4391:
 10507  001E7C                     	goto	l3655
 10508  001E7C  EF0E  F00F         u4390:
 10509  001E80                     	goto	l3673
 10510  001E80  EF44  F00F         	
 10511                           l1013:
 10512  001E84                     	goto	l3673
 10513  001E84  EF44  F00F         	line	186
 10514                           	
 10515                           l1002:
 10516  001E88                     	line	192
 10517                           	
 10518                           l3673:
 10519  001E88                     	movlw	low(0)
 10520  001E88  0E00               	movwf	((c:___fladd@aexp)),c
 10521  001E8A  6E52               	line	193
 10522                           	
 10523                           l3675:
 10524  001E8C                     	
 10525                           	btfss	((c:___fladd@grs)),c,(7)&7
 10526  001E8C  AE54               	goto	u4401
 10527  001E8E  EF4B  F00F         	goto	u4400
 10528  001E92  EF4D  F00F         u4401:
 10529  001E96                     	goto	l1014
 10530  001E96  EF69  F00F         u4400:
 10531  001E9A                     	line	194
 10532                           	
 10533                           l3677:
 10534  001E9A                     	movff	(c:___fladd@grs),??___fladd+0+0
 10535  001E9A  C054  F049         	movlw	07Fh
 10536  001E9E  0E7F               	andwf	(??___fladd+0+0),c
 10537  001EA0  1649               	btfsc	status,2
 10538  001EA2  B4D8               	goto	u4411
 10539  001EA4  EF56  F00F         	goto	u4410
 10540  001EA8  EF58  F00F         u4411:
 10541  001EAC                     	goto	l1015
 10542  001EAC  EF5C  F00F         u4410:
 10543  001EB0                     	line	195
 10544                           	
 10545                           l3679:
 10546  001EB0                     	movlw	low(01h)
 10547  001EB0  0E01               	movwf	((c:___fladd@aexp)),c
 10548  001EB2  6E52               	line	196
 10549                           	goto	l1014
 10550  001EB4  EF69  F00F         	line	197
 10551                           	
 10552                           l1015:
 10553  001EB8                     	line	198
 10554                           	
 10555                           	btfss	((c:___fladd@b)),c,(0)&7
 10556  001EB8  A041               	goto	u4421
 10557  001EBA  EF61  F00F         	goto	u4420
 10558  001EBE  EF63  F00F         u4421:
 10559  001EC2                     	goto	l1014
 10560  001EC2  EF69  F00F         u4420:
 10561  001EC6                     	line	199
 10562                           	
 10563                           l3681:
 10564  001EC6                     	movlw	low(01h)
 10565  001EC6  0E01               	movwf	((c:___fladd@aexp)),c
 10566  001EC8  6E52               	goto	l1014
 10567  001ECA  EF69  F00F         	line	200
 10568                           	
 10569                           l1017:
 10570  001ECE                     	goto	l1014
 10571  001ECE  EF69  F00F         	line	201
 10572                           	
 10573                           l1016:
 10574  001ED2                     	line	202
 10575                           	
 10576                           l1014:
 10577  001ED2                     	line	203
 10578                           	movf	((c:___fladd@aexp)),c,w
 10579  001ED2  5052               	btfsc	status,2
 10580  001ED4  B4D8               	goto	u4431
 10581  001ED6  EF6F  F00F         	goto	u4430
 10582  001EDA  EF71  F00F         u4431:
 10583  001EDE                     	goto	l3691
 10584  001EDE  EFA2  F00F         u4430:
 10585  001EE2                     	line	204
 10586                           	
 10587                           l3683:
 10588  001EE2                     	movlw	low(01h)
 10589  001EE2  0E01               	addwf	((c:___fladd@b)),c
 10590  001EE4  2641               	movlw	0
 10591  001EE6  0E00               	addwfc	((c:___fladd@b+1)),c
 10592  001EE8  2242               	addwfc	((c:___fladd@b+2)),c
 10593  001EEA  2243               	addwfc	((c:___fladd@b+3)),c
 10594  001EEC  2244               	line	205
 10595                           	
 10596                           l3685:
 10597  001EEE                     	
 10598                           	btfss	((c:___fladd@b+3)),c,(24)&7
 10599  001EEE  A044               	goto	u4441
 10600  001EF0  EF7C  F00F         	goto	u4440
 10601  001EF4  EF7E  F00F         u4441:
 10602  001EF8                     	goto	l3691
 10603  001EF8  EFA2  F00F         u4440:
 10604  001EFC                     	line	206
 10605                           	
 10606                           l3687:
 10607  001EFC                     	movff	(c:___fladd@b),??___fladd+0+0
 10608  001EFC  C041  F049         	movff	(c:___fladd@b+1),??___fladd+0+0+1
 10609  001F00  C042  F04A         	movff	(c:___fladd@b+2),??___fladd+0+0+2
 10610  001F04  C043  F04B         	movff	(c:___fladd@b+3),??___fladd+0+0+3
 10611  001F08  C044  F04C         	rlcf	(??___fladd+0+3),c,w
 10612  001F0C  344C               	rrcf	(??___fladd+0+3),c
 10613  001F0E  324C               	rrcf	(??___fladd+0+2),c
 10614  001F10  324B               	rrcf	(??___fladd+0+1),c
 10615  001F12  324A               	rrcf	(??___fladd+0+0),c
 10616  001F14  3249               	movff	??___fladd+0+0,(c:___fladd@b)
 10617  001F16  C049  F041         	movff	??___fladd+0+1,(c:___fladd@b+1)
 10618  001F1A  C04A  F042         	movff	??___fladd+0+2,(c:___fladd@b+2)
 10619  001F1E  C04B  F043         	movff	??___fladd+0+3,(c:___fladd@b+3)
 10620  001F22  C04C  F044         	line	207
 10621                           		incf	((c:___fladd@bexp)),c,w
 10622  001F26  2853               	btfsc	status,2
 10623  001F28  B4D8               	goto	u4451
 10624  001F2A  EF99  F00F         	goto	u4450
 10625  001F2E  EF9B  F00F         
 10626                           u4451:
 10627  001F32                     	goto	l3691
 10628  001F32  EFA2  F00F         u4450:
 10629  001F36                     	line	208
 10630                           	
 10631                           l3689:
 10632  001F36                     	incf	((c:___fladd@bexp)),c
 10633  001F36  2A53               	goto	l3691
 10634  001F38  EFA2  F00F         	line	209
 10635                           	
 10636                           l1020:
 10637  001F3C                     	goto	l3691
 10638  001F3C  EFA2  F00F         	line	210
 10639                           	
 10640                           l1019:
 10641  001F40                     	goto	l3691
 10642  001F40  EFA2  F00F         	line	211
 10643                           	
 10644                           l1018:
 10645  001F44                     	line	215
 10646                           	
 10647                           l3691:
 10648  001F44                     		incf	((c:___fladd@bexp)),c,w
 10649  001F44  2853               	btfsc	status,2
 10650  001F46  B4D8               	goto	u4461
 10651  001F48  EFA8  F00F         	goto	u4460
 10652  001F4C  EFAA  F00F         
 10653                           u4461:
 10654  001F50                     	goto	l3695
 10655  001F50  EFB4  F00F         u4460:
 10656  001F54                     	
 10657                           l3693:
 10658  001F54                     	movf	((c:___fladd@bexp)),c,w
 10659  001F54  5053               	btfss	status,2
 10660  001F56  A4D8               	goto	u4471
 10661  001F58  EFB0  F00F         	goto	u4470
 10662  001F5C  EFB2  F00F         u4471:
 10663  001F60                     	goto	l3699
 10664  001F60  EFCA  F00F         u4470:
 10665  001F64                     	goto	l3695
 10666  001F64  EFB4  F00F         	
 10667                           l1023:
 10668  001F68                     	line	216
 10669                           	
 10670                           l3695:
 10671  001F68                     	movlw	low(0)
 10672  001F68  0E00               	movwf	((c:___fladd@b)),c
 10673  001F6A  6E41               	movlw	high(0)
 10674  001F6C  0E00               	movwf	((c:___fladd@b+1)),c
 10675  001F6E  6E42               	movlw	low highword(0)
 10676  001F70  0E00               	movwf	((c:___fladd@b+2)),c
 10677  001F72  6E43               	movlw	high highword(0)
 10678  001F74  0E00               	movwf	((c:___fladd@b+3)),c
 10679  001F76  6E44               	line	218
 10680                           	movf	((c:___fladd@bexp)),c,w
 10681  001F78  5053               	btfss	status,2
 10682  001F7A  A4D8               	goto	u4481
 10683  001F7C  EFC2  F00F         	goto	u4480
 10684  001F80  EFC4  F00F         u4481:
 10685  001F84                     	goto	l3699
 10686  001F84  EFCA  F00F         u4480:
 10687  001F88                     	line	219
 10688                           	
 10689                           l3697:
 10690  001F88                     	movlw	low(0)
 10691  001F88  0E00               	movwf	((c:___fladd@signs)),c
 10692  001F8A  6E51               	goto	l3699
 10693  001F8C  EFCA  F00F         	line	220
 10694                           	
 10695                           l1024:
 10696  001F90                     	goto	l3699
 10697  001F90  EFCA  F00F         	line	221
 10698                           	
 10699                           l1021:
 10700  001F94                     	line	225
 10701                           	
 10702                           l3699:
 10703  001F94                     	
 10704                           	btfss	((c:___fladd@bexp)),c,(0)&7
 10705  001F94  A053               	goto	u4491
 10706  001F96  EFCF  F00F         	goto	u4490
 10707  001F9A  EFD1  F00F         u4491:
 10708  001F9E                     	goto	l3703
 10709  001F9E  EFD4  F00F         u4490:
 10710  001FA2                     	line	226
 10711                           	
 10712                           l3701:
 10713  001FA2                     	bsf	(0+(7/8)+0+((c:___fladd@b)+02h)),c,(7)&7
 10714  001FA2  8E43               	line	227
 10715                           	goto	l3705
 10716  001FA4  EFD7  F00F         	line	229
 10717                           	
 10718                           l1025:
 10719  001FA8                     	line	230
 10720                           	
 10721                           l3703:
 10722  001FA8                     	bcf	(0+(7/8)+0+((c:___fladd@b)+02h)),c,(7)&7
 10723  001FA8  9E43               	goto	l3705
 10724  001FAA  EFD7  F00F         	line	231
 10725                           	
 10726                           l1026:
 10727  001FAE                     	line	232
 10728                           	
 10729                           l3705:
 10730  001FAE                     	bcf	status,0
 10731  001FAE  90D8               	rrcf	((c:___fladd@bexp)),c,w
 10732  001FB0  3053               	movwf	(0+((c:___fladd@b)+03h)),c
 10733  001FB2  6E44               	line	233
 10734                           	
 10735                           l3707:
 10736  001FB4                     	
 10737                           	btfss	((c:___fladd@signs)),c,(7)&7
 10738  001FB4  AE51               	goto	u4501
 10739  001FB6  EFDF  F00F         	goto	u4500
 10740  001FBA  EFE1  F00F         u4501:
 10741  001FBE                     	goto	l3711
 10742  001FBE  EFE4  F00F         u4500:
 10743  001FC2                     	line	234
 10744                           	
 10745                           l3709:
 10746  001FC2                     	bsf	(0+(7/8)+0+((c:___fladd@b)+03h)),c,(7)&7
 10747  001FC2  8E44               	goto	l3711
 10748  001FC4  EFE4  F00F         	line	235
 10749                           	
 10750                           l1027:
 10751  001FC8                     	line	236
 10752                           	
 10753                           l3711:
 10754  001FC8                     	movff	(c:___fladd@b),(c:?___fladd)
 10755  001FC8  C041  F041         	movff	(c:___fladd@b+1),(c:?___fladd+1)
 10756  001FCC  C042  F042         	movff	(c:___fladd@b+2),(c:?___fladd+2)
 10757  001FD0  C043  F043         	movff	(c:___fladd@b+3),(c:?___fladd+3)
 10758  001FD4  C044  F044         	goto	l997
 10759  001FD8  EFEE  F00F         	
 10760                           l3713:
 10761  001FDC                     	line	237
 10762                           	
 10763                           l997:
 10764  001FDC                     	return	;funcret
 10765  001FDC  0012               	opt stack 0
 10766                           GLOBAL	__end_of___fladd
 10767                           	__end_of___fladd:
 10768  001FDE                     	signat	___fladd,8316
 10769                           	global	_lcd_temp
 10770                           
 10771 ;; *************** function _lcd_temp *****************
 10772 ;; Defined at:
 10773 ;;		line 175 in file "main.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;  t               2   93[COMRAM] unsigned int 
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;  temp_info      16   10[BANK0 ] unsigned char [16]
 10778 ;;  temperature     3   29[BANK0 ] unsigned char [3]
 10779 ;;  value           3   26[BANK0 ] unsigned char [3]
 10780 ;;  temp            2   32[BANK0 ] int 
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10790 ;;      Params:         2       0       0       0       0       0       0       0       0
 10791 ;;      Locals:         0      24       0       0       0       0       0       0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10793 ;;      Totals:         2      24       0       0       0       0       0       0       0
 10794 ;;Total ram usage:       26 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; Hardware stack levels required when called:    8
 10797 ;; This function calls:
 10798 ;;		_LCD_String_xy
 10799 ;;		_MSdelay
 10800 ;;		_sprintf
 10801 ;;		_strcat
 10802 ;;		_temp_convert
 10803 ;; This function is called by:
 10804 ;;		_main
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           psect	text17,class=CODE,space=0,reloc=2,group=0
 10808                           	file	"main.c"
 10809                           	line	175
 10810                           global __ptext17
 10811                           __ptext17:
 10812  004ACA                     psect	text17
 10813                           	file	"main.c"
 10814                           	line	175
 10815                           	global	__size_of_lcd_temp
 10816                           	__size_of_lcd_temp	equ	__end_of_lcd_temp-_lcd_temp
 10817  0000                     	
 10818                           _lcd_temp:
 10819  004ACA                     ;incstack = 0
 10820                           	opt	stack 22
 10821                           	line	177
 10822                           	
 10823                           l5055:
 10824  004ACA                     ;main.c: 175: void lcd_temp(unsigned int t);main.c: 176: {;main.c: 177:     char value[3
                                 ]="0000";
 10825                           	movff	(lcd_temp@F4245),(lcd_temp@value)
 10826  004ACA  C0DF  F07A         	movff	(lcd_temp@F4245+1),(lcd_temp@value+1)
 10827  004ACE  C0E0  F07B         	movff	(lcd_temp@F4245+2),(lcd_temp@value+2)
 10828  004AD2  C0E1  F07C         	line	182
 10829                           	
 10830                           l5057:
 10831  004AD6                     ;main.c: 182:     int temp=temp_convert(t);
 10832                           	movff	(c:lcd_temp@t),(c:temp_convert@x)
 10833  004AD6  C05E  F001         	movff	(c:lcd_temp@t+1),(c:temp_convert@x+1)
 10834  004ADA  C05F  F002         	call	_temp_convert	;wreg free
 10835  004ADE  EC61  F004         	movff	0+?_temp_convert,(lcd_temp@temp)
 10836  004AE2  C001  F080         	movff	1+?_temp_convert,(lcd_temp@temp+1)
 10837  004AE6  C002  F081         	line	183
 10838                           	
 10839                           l5059:
 10840  004AEA                     ;main.c: 183:     char temperature[3]="000";
 10841                           	movff	(lcd_temp@F4248),(lcd_temp@temperature)
 10842  004AEA  C0DC  F07D         	movff	(lcd_temp@F4248+1),(lcd_temp@temperature+1)
 10843  004AEE  C0DD  F07E         	movff	(lcd_temp@F4248+2),(lcd_temp@temperature+2)
 10844  004AF2  C0DE  F07F         	line	184
 10845                           	
 10846                           l5061:
 10847  004AF6                     ;main.c: 184:     sprintf(temperature,"%d",temp);
 10848                           		movlw	low(lcd_temp@temperature)
 10849  004AF6  0E7D               	movwf	((c:sprintf@s)),c
 10850  004AF8  6E58               	movlw	high(lcd_temp@temperature)
 10851  004AFA  0E00               	movwf	((c:sprintf@s+1)),c
 10852  004AFC  6E59               
 10853                           		movlw	low(STR_18)
 10854  004AFE  0EBD               	movwf	((c:sprintf@fmt)),c
 10855  004B00  6E5A               	movlw	high(STR_18)
 10856  004B02  0E08               	movwf	((c:sprintf@fmt+1)),c
 10857  004B04  6E5B               
 10858                           	movff	(lcd_temp@temp),0+((c:?_sprintf)+04h)
 10859  004B06  C080  F05C         	movff	(lcd_temp@temp+1),1+((c:?_sprintf)+04h)
 10860  004B0A  C081  F05D         	call	_sprintf	;wreg free
 10861  004B0E  EC0C  F029         	line	185
 10862                           	
 10863                           l5063:
 10864  004B12                     ;main.c: 185:     char temp_info[16]="Temp C: ";
 10865                           	lfsr	2,(lcd_temp@F4250)
 10866  004B12  EE21  F020         	lfsr	1,(lcd_temp@temp_info)
 10867  004B16  EE10  F06A         	movlw	16-1
 10868  004B1A  0E0F               u7201:
 10869  004B1C                     	movff	plusw2,plusw1
 10870  004B1C  CFDB FFE3          	decf	wreg
 10871  004B20  06E8               	bc	u7201
 10872  004B22  E2FC               
 10873                           	line	186
 10874                           	
 10875                           l5065:
 10876  004B24                     ;main.c: 186:     strcat(temp_info,temperature);
 10877                           		movlw	low(lcd_temp@temp_info)
 10878  004B24  0E6A               	movwf	((c:strcat@dest)),c
 10879  004B26  6E11               	movlw	high(lcd_temp@temp_info)
 10880  004B28  0E00               	movwf	((c:strcat@dest+1)),c
 10881  004B2A  6E12               
 10882                           		movlw	low(lcd_temp@temperature)
 10883  004B2C  0E7D               	movwf	((c:strcat@src)),c
 10884  004B2E  6E13               	movlw	high(lcd_temp@temperature)
 10885  004B30  0E00               	movwf	((c:strcat@src+1)),c
 10886  004B32  6E14               
 10887                           	call	_strcat	;wreg free
 10888  004B34  EC89  F02B         	line	187
 10889                           	
 10890                           l5067:
 10891  004B38                     ;main.c: 187:     LCD_String_xy(1,1,temp_info);
 10892                           	movlw	low(01h)
 10893  004B38  0E01               	movwf	((c:LCD_String_xy@pos)),c
 10894  004B3A  6E0B               		movlw	low(lcd_temp@temp_info)
 10895  004B3C  0E6A               	movwf	((c:LCD_String_xy@msg)),c
 10896  004B3E  6E0C               	movlw	high(lcd_temp@temp_info)
 10897  004B40  0E00               	movwf	((c:LCD_String_xy@msg+1)),c
 10898  004B42  6E0D               
 10899                           	movlw	(01h)&0ffh
 10900  004B44  0E01               	
 10901                           	call	_LCD_String_xy
 10902  004B46  ECB7  F02A         	line	190
 10903                           	
 10904                           l5069:
 10905  004B4A                     ;main.c: 190: if(t<500)
 10906                           		movlw	244
 10907  004B4A  0EF4               	subwf	 ((c:lcd_temp@t)),c,w
 10908  004B4C  5C5E               	movlw	1
 10909  004B4E  0E01               	subwfb	((c:lcd_temp@t+1)),c,w
 10910  004B50  585F               	btfsc	status,0
 10911  004B52  B0D8               	goto	u7211
 10912  004B54  EFAE  F025         	goto	u7210
 10913  004B58  EFB0  F025         
 10914                           u7211:
 10915  004B5C                     	goto	l5073
 10916  004B5C  EFBB  F025         u7210:
 10917  004B60                     	line	192
 10918                           	
 10919                           l5071:
 10920  004B60                     ;main.c: 191:     {;main.c: 192:         LCD_String_xy(2,1,"Il fait froid");
 10921                           	movlw	low(01h)
 10922  004B60  0E01               	movwf	((c:LCD_String_xy@pos)),c
 10923  004B62  6E0B               		movlw	low(STR_19)
 10924  004B64  0E3B               	movwf	((c:LCD_String_xy@msg)),c
 10925  004B66  6E0C               	movlw	high(STR_19)
 10926  004B68  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
 10927  004B6A  6E0D               
 10928                           	movlw	(02h)&0ffh
 10929  004B6C  0E02               	
 10930                           	call	_LCD_String_xy
 10931  004B6E  ECB7  F02A         	line	193
 10932                           ;main.c: 193:     }
 10933                           	goto	l5075
 10934  004B72  EFC6  F025         	line	194
 10935                           ;main.c: 194:     else
 10936                           	
 10937                           l235:
 10938  004B76                     	line	196
 10939                           	
 10940                           l5073:
 10941  004B76                     ;main.c: 195:     {;main.c: 196:         LCD_String_xy(2,1,"Il fait chaud");
 10942                           	movlw	low(01h)
 10943  004B76  0E01               	movwf	((c:LCD_String_xy@pos)),c
 10944  004B78  6E0B               		movlw	low(STR_20)
 10945  004B7A  0E49               	movwf	((c:LCD_String_xy@msg)),c
 10946  004B7C  6E0C               	movlw	high(STR_20)
 10947  004B7E  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
 10948  004B80  6E0D               
 10949                           	movlw	(02h)&0ffh
 10950  004B82  0E02               	
 10951                           	call	_LCD_String_xy
 10952  004B84  ECB7  F02A         	goto	l5075
 10953  004B88  EFC6  F025         	line	197
 10954                           ;main.c: 197:     }
 10955                           	
 10956                           l236:
 10957  004B8C                     	line	199
 10958                           	
 10959                           l5075:
 10960  004B8C                     ;main.c: 199:     MSdelay(1000);
 10961                           	movlw	high(03E8h)
 10962  004B8C  0E03               	movwf	((c:MSdelay@val+1)),c
 10963  004B8E  6E02               	movlw	low(03E8h)
 10964  004B90  0EE8               	movwf	((c:MSdelay@val)),c
 10965  004B92  6E01               	call	_MSdelay	;wreg free
 10966  004B94  EC07  F028         	line	201
 10967                           	
 10968                           l237:
 10969  004B98                     	return	;funcret
 10970  004B98  0012               	opt stack 0
 10971                           GLOBAL	__end_of_lcd_temp
 10972                           	__end_of_lcd_temp:
 10973  004B9A                     	signat	_lcd_temp,4217
 10974                           	global	_temp_convert
 10975                           
 10976 ;; *************** function _temp_convert *****************
 10977 ;; Defined at:
 10978 ;;		line 339 in file "main.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  x               2    0[COMRAM] unsigned int 
 10981 ;; Auto vars:     Size  Location     Type
 10982 ;;  temperature     2    2[COMRAM] int 
 10983 ;; Return value:  Size  Location     Type
 10984 ;;                  2    0[COMRAM] int 
 10985 ;; Registers used:
 10986 ;;		wreg, status,2, status,0
 10987 ;; Tracked objects:
 10988 ;;		On entry : 0/0
 10989 ;;		On exit  : 0/0
 10990 ;;		Unchanged: 0/0
 10991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10992 ;;      Params:         2       0       0       0       0       0       0       0       0
 10993 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10995 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10996 ;;Total ram usage:        4 bytes
 10997 ;; Hardware stack levels used:    1
 10998 ;; This function calls:
 10999 ;;		Nothing
 11000 ;; This function is called by:
 11001 ;;		_lcd_temp
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           psect	text18,class=CODE,space=0,reloc=2,group=0
 11005                           	line	339
 11006                           global __ptext18
 11007                           __ptext18:
 11008  0008C2                     psect	text18
 11009                           	file	"main.c"
 11010                           	line	339
 11011                           	global	__size_of_temp_convert
 11012                           	__size_of_temp_convert	equ	__end_of_temp_convert-_temp_convert
 11013  0000                     	
 11014                           _temp_convert:
 11015  0008C2                     ;incstack = 0
 11016                           	opt	stack 29
 11017                           	line	344
 11018                           	
 11019                           l4515:
 11020  0008C2                     ;main.c: 339:     int temp_convert(unsigned int x);main.c: 340:     {;main.c: 342:      
                                    int temperature;;main.c: 344:         if (x<25){temperature=0;}
 11021                           		movf	((c:temp_convert@x+1)),c,w
 11022  0008C2  5002               	bnz	u5991
 11023  0008C4  E107               	movlw	25
 11024  0008C6  0E19               	subwf	 ((c:temp_convert@x)),c,w
 11025  0008C8  5C01               	btfsc	status,0
 11026  0008CA  B0D8               	goto	u5991
 11027  0008CC  EF6A  F004         	goto	u5990
 11028  0008D0  EF6C  F004         
 11029                           u5991:
 11030  0008D4                     	goto	l4519
 11031  0008D4  EF72  F004         u5990:
 11032  0008D8                     	
 11033                           l4517:
 11034  0008D8                     	movlw	high(0)
 11035  0008D8  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11036  0008DA  6E04               	movlw	low(0)
 11037  0008DC  0E00               	movwf	((c:temp_convert@temperature)),c
 11038  0008DE  6E03               	goto	l4755
 11039  0008E0  EF0A  F009         	line	345
 11040                           ;main.c: 345:         else if (x>=25 && x<50){temperature=1;}
 11041                           	
 11042                           l305:
 11043  0008E4                     	
 11044                           l4519:
 11045  0008E4                     		movf	((c:temp_convert@x+1)),c,w
 11046  0008E4  5002               	bnz	u6000
 11047  0008E6  E109               	movlw	25
 11048  0008E8  0E19               	subwf	 ((c:temp_convert@x)),c,w
 11049  0008EA  5C01               	btfss	status,0
 11050  0008EC  A0D8               	goto	u6001
 11051  0008EE  EF7B  F004         	goto	u6000
 11052  0008F2  EF7D  F004         
 11053                           u6001:
 11054  0008F6                     	goto	l4525
 11055  0008F6  EF8E  F004         u6000:
 11056  0008FA                     	
 11057                           l4521:
 11058  0008FA                     		movf	((c:temp_convert@x+1)),c,w
 11059  0008FA  5002               	bnz	u6011
 11060  0008FC  E107               	movlw	50
 11061  0008FE  0E32               	subwf	 ((c:temp_convert@x)),c,w
 11062  000900  5C01               	btfsc	status,0
 11063  000902  B0D8               	goto	u6011
 11064  000904  EF86  F004         	goto	u6010
 11065  000908  EF88  F004         
 11066                           u6011:
 11067  00090C                     	goto	l4525
 11068  00090C  EF8E  F004         u6010:
 11069  000910                     	
 11070                           l4523:
 11071  000910                     	movlw	high(01h)
 11072  000910  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11073  000912  6E04               	movlw	low(01h)
 11074  000914  0E01               	movwf	((c:temp_convert@temperature)),c
 11075  000916  6E03               	goto	l4755
 11076  000918  EF0A  F009         	line	346
 11077                           ;main.c: 346:         else if (x>=50 && x<75){temperature=2;}
 11078                           	
 11079                           l307:
 11080  00091C                     	
 11081                           l4525:
 11082  00091C                     		movf	((c:temp_convert@x+1)),c,w
 11083  00091C  5002               	bnz	u6020
 11084  00091E  E109               	movlw	50
 11085  000920  0E32               	subwf	 ((c:temp_convert@x)),c,w
 11086  000922  5C01               	btfss	status,0
 11087  000924  A0D8               	goto	u6021
 11088  000926  EF97  F004         	goto	u6020
 11089  00092A  EF99  F004         
 11090                           u6021:
 11091  00092E                     	goto	l4531
 11092  00092E  EFAA  F004         u6020:
 11093  000932                     	
 11094                           l4527:
 11095  000932                     		movf	((c:temp_convert@x+1)),c,w
 11096  000932  5002               	bnz	u6031
 11097  000934  E107               	movlw	75
 11098  000936  0E4B               	subwf	 ((c:temp_convert@x)),c,w
 11099  000938  5C01               	btfsc	status,0
 11100  00093A  B0D8               	goto	u6031
 11101  00093C  EFA2  F004         	goto	u6030
 11102  000940  EFA4  F004         
 11103                           u6031:
 11104  000944                     	goto	l4531
 11105  000944  EFAA  F004         u6030:
 11106  000948                     	
 11107                           l4529:
 11108  000948                     	movlw	high(02h)
 11109  000948  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11110  00094A  6E04               	movlw	low(02h)
 11111  00094C  0E02               	movwf	((c:temp_convert@temperature)),c
 11112  00094E  6E03               	goto	l4755
 11113  000950  EF0A  F009         	line	347
 11114                           ;main.c: 347:         else if (x>=75 && x<100){temperature=3;}
 11115                           	
 11116                           l309:
 11117  000954                     	
 11118                           l4531:
 11119  000954                     		movf	((c:temp_convert@x+1)),c,w
 11120  000954  5002               	bnz	u6040
 11121  000956  E109               	movlw	75
 11122  000958  0E4B               	subwf	 ((c:temp_convert@x)),c,w
 11123  00095A  5C01               	btfss	status,0
 11124  00095C  A0D8               	goto	u6041
 11125  00095E  EFB3  F004         	goto	u6040
 11126  000962  EFB5  F004         
 11127                           u6041:
 11128  000966                     	goto	l4537
 11129  000966  EFC6  F004         u6040:
 11130  00096A                     	
 11131                           l4533:
 11132  00096A                     		movf	((c:temp_convert@x+1)),c,w
 11133  00096A  5002               	bnz	u6051
 11134  00096C  E107               	movlw	100
 11135  00096E  0E64               	subwf	 ((c:temp_convert@x)),c,w
 11136  000970  5C01               	btfsc	status,0
 11137  000972  B0D8               	goto	u6051
 11138  000974  EFBE  F004         	goto	u6050
 11139  000978  EFC0  F004         
 11140                           u6051:
 11141  00097C                     	goto	l4537
 11142  00097C  EFC6  F004         u6050:
 11143  000980                     	
 11144                           l4535:
 11145  000980                     	movlw	high(03h)
 11146  000980  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11147  000982  6E04               	movlw	low(03h)
 11148  000984  0E03               	movwf	((c:temp_convert@temperature)),c
 11149  000986  6E03               	goto	l4755
 11150  000988  EF0A  F009         	line	348
 11151                           ;main.c: 348:         else if (x>=100 && x<125){temperature=4;}
 11152                           	
 11153                           l311:
 11154  00098C                     	
 11155                           l4537:
 11156  00098C                     		movf	((c:temp_convert@x+1)),c,w
 11157  00098C  5002               	bnz	u6060
 11158  00098E  E109               	movlw	100
 11159  000990  0E64               	subwf	 ((c:temp_convert@x)),c,w
 11160  000992  5C01               	btfss	status,0
 11161  000994  A0D8               	goto	u6061
 11162  000996  EFCF  F004         	goto	u6060
 11163  00099A  EFD1  F004         
 11164                           u6061:
 11165  00099E                     	goto	l4543
 11166  00099E  EFE2  F004         u6060:
 11167  0009A2                     	
 11168                           l4539:
 11169  0009A2                     		movf	((c:temp_convert@x+1)),c,w
 11170  0009A2  5002               	bnz	u6071
 11171  0009A4  E107               	movlw	125
 11172  0009A6  0E7D               	subwf	 ((c:temp_convert@x)),c,w
 11173  0009A8  5C01               	btfsc	status,0
 11174  0009AA  B0D8               	goto	u6071
 11175  0009AC  EFDA  F004         	goto	u6070
 11176  0009B0  EFDC  F004         
 11177                           u6071:
 11178  0009B4                     	goto	l4543
 11179  0009B4  EFE2  F004         u6070:
 11180  0009B8                     	
 11181                           l4541:
 11182  0009B8                     	movlw	high(04h)
 11183  0009B8  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11184  0009BA  6E04               	movlw	low(04h)
 11185  0009BC  0E04               	movwf	((c:temp_convert@temperature)),c
 11186  0009BE  6E03               	goto	l4755
 11187  0009C0  EF0A  F009         	line	349
 11188                           ;main.c: 349:         else if (x>=125 && x<150){temperature=5;}
 11189                           	
 11190                           l313:
 11191  0009C4                     	
 11192                           l4543:
 11193  0009C4                     		movf	((c:temp_convert@x+1)),c,w
 11194  0009C4  5002               	bnz	u6080
 11195  0009C6  E109               	movlw	125
 11196  0009C8  0E7D               	subwf	 ((c:temp_convert@x)),c,w
 11197  0009CA  5C01               	btfss	status,0
 11198  0009CC  A0D8               	goto	u6081
 11199  0009CE  EFEB  F004         	goto	u6080
 11200  0009D2  EFED  F004         
 11201                           u6081:
 11202  0009D6                     	goto	l4549
 11203  0009D6  EFFE  F004         u6080:
 11204  0009DA                     	
 11205                           l4545:
 11206  0009DA                     		movf	((c:temp_convert@x+1)),c,w
 11207  0009DA  5002               	bnz	u6091
 11208  0009DC  E107               	movlw	150
 11209  0009DE  0E96               	subwf	 ((c:temp_convert@x)),c,w
 11210  0009E0  5C01               	btfsc	status,0
 11211  0009E2  B0D8               	goto	u6091
 11212  0009E4  EFF6  F004         	goto	u6090
 11213  0009E8  EFF8  F004         
 11214                           u6091:
 11215  0009EC                     	goto	l4549
 11216  0009EC  EFFE  F004         u6090:
 11217  0009F0                     	
 11218                           l4547:
 11219  0009F0                     	movlw	high(05h)
 11220  0009F0  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11221  0009F2  6E04               	movlw	low(05h)
 11222  0009F4  0E05               	movwf	((c:temp_convert@temperature)),c
 11223  0009F6  6E03               	goto	l4755
 11224  0009F8  EF0A  F009         	line	350
 11225                           ;main.c: 350:         else if (x>=150 && x<175){temperature=6;}
 11226                           	
 11227                           l315:
 11228  0009FC                     	
 11229                           l4549:
 11230  0009FC                     		movf	((c:temp_convert@x+1)),c,w
 11231  0009FC  5002               	bnz	u6100
 11232  0009FE  E109               	movlw	150
 11233  000A00  0E96               	subwf	 ((c:temp_convert@x)),c,w
 11234  000A02  5C01               	btfss	status,0
 11235  000A04  A0D8               	goto	u6101
 11236  000A06  EF07  F005         	goto	u6100
 11237  000A0A  EF09  F005         
 11238                           u6101:
 11239  000A0E                     	goto	l4555
 11240  000A0E  EF1A  F005         u6100:
 11241  000A12                     	
 11242                           l4551:
 11243  000A12                     		movf	((c:temp_convert@x+1)),c,w
 11244  000A12  5002               	bnz	u6111
 11245  000A14  E107               	movlw	175
 11246  000A16  0EAF               	subwf	 ((c:temp_convert@x)),c,w
 11247  000A18  5C01               	btfsc	status,0
 11248  000A1A  B0D8               	goto	u6111
 11249  000A1C  EF12  F005         	goto	u6110
 11250  000A20  EF14  F005         
 11251                           u6111:
 11252  000A24                     	goto	l4555
 11253  000A24  EF1A  F005         u6110:
 11254  000A28                     	
 11255                           l4553:
 11256  000A28                     	movlw	high(06h)
 11257  000A28  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11258  000A2A  6E04               	movlw	low(06h)
 11259  000A2C  0E06               	movwf	((c:temp_convert@temperature)),c
 11260  000A2E  6E03               	goto	l4755
 11261  000A30  EF0A  F009         	line	351
 11262                           ;main.c: 351:         else if (x>=175 && x<200){temperature=7;}
 11263                           	
 11264                           l317:
 11265  000A34                     	
 11266                           l4555:
 11267  000A34                     		movf	((c:temp_convert@x+1)),c,w
 11268  000A34  5002               	bnz	u6120
 11269  000A36  E109               	movlw	175
 11270  000A38  0EAF               	subwf	 ((c:temp_convert@x)),c,w
 11271  000A3A  5C01               	btfss	status,0
 11272  000A3C  A0D8               	goto	u6121
 11273  000A3E  EF23  F005         	goto	u6120
 11274  000A42  EF25  F005         
 11275                           u6121:
 11276  000A46                     	goto	l4561
 11277  000A46  EF36  F005         u6120:
 11278  000A4A                     	
 11279                           l4557:
 11280  000A4A                     		movf	((c:temp_convert@x+1)),c,w
 11281  000A4A  5002               	bnz	u6131
 11282  000A4C  E107               	movlw	200
 11283  000A4E  0EC8               	subwf	 ((c:temp_convert@x)),c,w
 11284  000A50  5C01               	btfsc	status,0
 11285  000A52  B0D8               	goto	u6131
 11286  000A54  EF2E  F005         	goto	u6130
 11287  000A58  EF30  F005         
 11288                           u6131:
 11289  000A5C                     	goto	l4561
 11290  000A5C  EF36  F005         u6130:
 11291  000A60                     	
 11292                           l4559:
 11293  000A60                     	movlw	high(07h)
 11294  000A60  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11295  000A62  6E04               	movlw	low(07h)
 11296  000A64  0E07               	movwf	((c:temp_convert@temperature)),c
 11297  000A66  6E03               	goto	l4755
 11298  000A68  EF0A  F009         	line	352
 11299                           ;main.c: 352:         else if (x>=200 && x<225){temperature=8;}
 11300                           	
 11301                           l319:
 11302  000A6C                     	
 11303                           l4561:
 11304  000A6C                     		movf	((c:temp_convert@x+1)),c,w
 11305  000A6C  5002               	bnz	u6140
 11306  000A6E  E109               	movlw	200
 11307  000A70  0EC8               	subwf	 ((c:temp_convert@x)),c,w
 11308  000A72  5C01               	btfss	status,0
 11309  000A74  A0D8               	goto	u6141
 11310  000A76  EF3F  F005         	goto	u6140
 11311  000A7A  EF41  F005         
 11312                           u6141:
 11313  000A7E                     	goto	l4567
 11314  000A7E  EF52  F005         u6140:
 11315  000A82                     	
 11316                           l4563:
 11317  000A82                     		movf	((c:temp_convert@x+1)),c,w
 11318  000A82  5002               	bnz	u6151
 11319  000A84  E107               	movlw	225
 11320  000A86  0EE1               	subwf	 ((c:temp_convert@x)),c,w
 11321  000A88  5C01               	btfsc	status,0
 11322  000A8A  B0D8               	goto	u6151
 11323  000A8C  EF4A  F005         	goto	u6150
 11324  000A90  EF4C  F005         
 11325                           u6151:
 11326  000A94                     	goto	l4567
 11327  000A94  EF52  F005         u6150:
 11328  000A98                     	
 11329                           l4565:
 11330  000A98                     	movlw	high(08h)
 11331  000A98  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11332  000A9A  6E04               	movlw	low(08h)
 11333  000A9C  0E08               	movwf	((c:temp_convert@temperature)),c
 11334  000A9E  6E03               	goto	l4755
 11335  000AA0  EF0A  F009         	line	353
 11336                           ;main.c: 353:         else if (x>=225 && x<250){temperature=9;}
 11337                           	
 11338                           l321:
 11339  000AA4                     	
 11340                           l4567:
 11341  000AA4                     		movf	((c:temp_convert@x+1)),c,w
 11342  000AA4  5002               	bnz	u6160
 11343  000AA6  E109               	movlw	225
 11344  000AA8  0EE1               	subwf	 ((c:temp_convert@x)),c,w
 11345  000AAA  5C01               	btfss	status,0
 11346  000AAC  A0D8               	goto	u6161
 11347  000AAE  EF5B  F005         	goto	u6160
 11348  000AB2  EF5D  F005         
 11349                           u6161:
 11350  000AB6                     	goto	l4573
 11351  000AB6  EF6E  F005         u6160:
 11352  000ABA                     	
 11353                           l4569:
 11354  000ABA                     		movf	((c:temp_convert@x+1)),c,w
 11355  000ABA  5002               	bnz	u6171
 11356  000ABC  E107               	movlw	250
 11357  000ABE  0EFA               	subwf	 ((c:temp_convert@x)),c,w
 11358  000AC0  5C01               	btfsc	status,0
 11359  000AC2  B0D8               	goto	u6171
 11360  000AC4  EF66  F005         	goto	u6170
 11361  000AC8  EF68  F005         
 11362                           u6171:
 11363  000ACC                     	goto	l4573
 11364  000ACC  EF6E  F005         u6170:
 11365  000AD0                     	
 11366                           l4571:
 11367  000AD0                     	movlw	high(09h)
 11368  000AD0  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11369  000AD2  6E04               	movlw	low(09h)
 11370  000AD4  0E09               	movwf	((c:temp_convert@temperature)),c
 11371  000AD6  6E03               	goto	l4755
 11372  000AD8  EF0A  F009         	line	354
 11373                           ;main.c: 354:         else if (x>=250 && x<275){temperature=10;}
 11374                           	
 11375                           l323:
 11376  000ADC                     	
 11377                           l4573:
 11378  000ADC                     		movf	((c:temp_convert@x+1)),c,w
 11379  000ADC  5002               	bnz	u6180
 11380  000ADE  E109               	movlw	250
 11381  000AE0  0EFA               	subwf	 ((c:temp_convert@x)),c,w
 11382  000AE2  5C01               	btfss	status,0
 11383  000AE4  A0D8               	goto	u6181
 11384  000AE6  EF77  F005         	goto	u6180
 11385  000AEA  EF79  F005         
 11386                           u6181:
 11387  000AEE                     	goto	l4579
 11388  000AEE  EF8A  F005         u6180:
 11389  000AF2                     	
 11390                           l4575:
 11391  000AF2                     		movlw	19
 11392  000AF2  0E13               	subwf	 ((c:temp_convert@x)),c,w
 11393  000AF4  5C01               	movlw	1
 11394  000AF6  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11395  000AF8  5802               	btfsc	status,0
 11396  000AFA  B0D8               	goto	u6191
 11397  000AFC  EF82  F005         	goto	u6190
 11398  000B00  EF84  F005         
 11399                           u6191:
 11400  000B04                     	goto	l4579
 11401  000B04  EF8A  F005         u6190:
 11402  000B08                     	
 11403                           l4577:
 11404  000B08                     	movlw	high(0Ah)
 11405  000B08  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11406  000B0A  6E04               	movlw	low(0Ah)
 11407  000B0C  0E0A               	movwf	((c:temp_convert@temperature)),c
 11408  000B0E  6E03               	goto	l4755
 11409  000B10  EF0A  F009         	line	355
 11410                           ;main.c: 355:         else if (x>=275 && x<300){temperature=11;}
 11411                           	
 11412                           l325:
 11413  000B14                     	
 11414                           l4579:
 11415  000B14                     		movlw	19
 11416  000B14  0E13               	subwf	 ((c:temp_convert@x)),c,w
 11417  000B16  5C01               	movlw	1
 11418  000B18  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11419  000B1A  5802               	btfss	status,0
 11420  000B1C  A0D8               	goto	u6201
 11421  000B1E  EF93  F005         	goto	u6200
 11422  000B22  EF95  F005         
 11423                           u6201:
 11424  000B26                     	goto	l4585
 11425  000B26  EFA6  F005         u6200:
 11426  000B2A                     	
 11427                           l4581:
 11428  000B2A                     		movlw	44
 11429  000B2A  0E2C               	subwf	 ((c:temp_convert@x)),c,w
 11430  000B2C  5C01               	movlw	1
 11431  000B2E  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11432  000B30  5802               	btfsc	status,0
 11433  000B32  B0D8               	goto	u6211
 11434  000B34  EF9E  F005         	goto	u6210
 11435  000B38  EFA0  F005         
 11436                           u6211:
 11437  000B3C                     	goto	l4585
 11438  000B3C  EFA6  F005         u6210:
 11439  000B40                     	
 11440                           l4583:
 11441  000B40                     	movlw	high(0Bh)
 11442  000B40  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11443  000B42  6E04               	movlw	low(0Bh)
 11444  000B44  0E0B               	movwf	((c:temp_convert@temperature)),c
 11445  000B46  6E03               	goto	l4755
 11446  000B48  EF0A  F009         	line	356
 11447                           ;main.c: 356:         else if (x>=300 && x<325){temperature=12;}
 11448                           	
 11449                           l327:
 11450  000B4C                     	
 11451                           l4585:
 11452  000B4C                     		movlw	44
 11453  000B4C  0E2C               	subwf	 ((c:temp_convert@x)),c,w
 11454  000B4E  5C01               	movlw	1
 11455  000B50  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11456  000B52  5802               	btfss	status,0
 11457  000B54  A0D8               	goto	u6221
 11458  000B56  EFAF  F005         	goto	u6220
 11459  000B5A  EFB1  F005         
 11460                           u6221:
 11461  000B5E                     	goto	l4591
 11462  000B5E  EFC2  F005         u6220:
 11463  000B62                     	
 11464                           l4587:
 11465  000B62                     		movlw	69
 11466  000B62  0E45               	subwf	 ((c:temp_convert@x)),c,w
 11467  000B64  5C01               	movlw	1
 11468  000B66  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11469  000B68  5802               	btfsc	status,0
 11470  000B6A  B0D8               	goto	u6231
 11471  000B6C  EFBA  F005         	goto	u6230
 11472  000B70  EFBC  F005         
 11473                           u6231:
 11474  000B74                     	goto	l4591
 11475  000B74  EFC2  F005         u6230:
 11476  000B78                     	
 11477                           l4589:
 11478  000B78                     	movlw	high(0Ch)
 11479  000B78  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11480  000B7A  6E04               	movlw	low(0Ch)
 11481  000B7C  0E0C               	movwf	((c:temp_convert@temperature)),c
 11482  000B7E  6E03               	goto	l4755
 11483  000B80  EF0A  F009         	line	357
 11484                           ;main.c: 357:         else if (x>=325 && x<350){temperature=13;}
 11485                           	
 11486                           l329:
 11487  000B84                     	
 11488                           l4591:
 11489  000B84                     		movlw	69
 11490  000B84  0E45               	subwf	 ((c:temp_convert@x)),c,w
 11491  000B86  5C01               	movlw	1
 11492  000B88  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11493  000B8A  5802               	btfss	status,0
 11494  000B8C  A0D8               	goto	u6241
 11495  000B8E  EFCB  F005         	goto	u6240
 11496  000B92  EFCD  F005         
 11497                           u6241:
 11498  000B96                     	goto	l4597
 11499  000B96  EFDE  F005         u6240:
 11500  000B9A                     	
 11501                           l4593:
 11502  000B9A                     		movlw	94
 11503  000B9A  0E5E               	subwf	 ((c:temp_convert@x)),c,w
 11504  000B9C  5C01               	movlw	1
 11505  000B9E  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11506  000BA0  5802               	btfsc	status,0
 11507  000BA2  B0D8               	goto	u6251
 11508  000BA4  EFD6  F005         	goto	u6250
 11509  000BA8  EFD8  F005         
 11510                           u6251:
 11511  000BAC                     	goto	l4597
 11512  000BAC  EFDE  F005         u6250:
 11513  000BB0                     	
 11514                           l4595:
 11515  000BB0                     	movlw	high(0Dh)
 11516  000BB0  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11517  000BB2  6E04               	movlw	low(0Dh)
 11518  000BB4  0E0D               	movwf	((c:temp_convert@temperature)),c
 11519  000BB6  6E03               	goto	l4755
 11520  000BB8  EF0A  F009         	line	358
 11521                           ;main.c: 358:         else if (x>=350 && x<375){temperature=14;}
 11522                           	
 11523                           l331:
 11524  000BBC                     	
 11525                           l4597:
 11526  000BBC                     		movlw	94
 11527  000BBC  0E5E               	subwf	 ((c:temp_convert@x)),c,w
 11528  000BBE  5C01               	movlw	1
 11529  000BC0  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11530  000BC2  5802               	btfss	status,0
 11531  000BC4  A0D8               	goto	u6261
 11532  000BC6  EFE7  F005         	goto	u6260
 11533  000BCA  EFE9  F005         
 11534                           u6261:
 11535  000BCE                     	goto	l4603
 11536  000BCE  EFFA  F005         u6260:
 11537  000BD2                     	
 11538                           l4599:
 11539  000BD2                     		movlw	119
 11540  000BD2  0E77               	subwf	 ((c:temp_convert@x)),c,w
 11541  000BD4  5C01               	movlw	1
 11542  000BD6  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11543  000BD8  5802               	btfsc	status,0
 11544  000BDA  B0D8               	goto	u6271
 11545  000BDC  EFF2  F005         	goto	u6270
 11546  000BE0  EFF4  F005         
 11547                           u6271:
 11548  000BE4                     	goto	l4603
 11549  000BE4  EFFA  F005         u6270:
 11550  000BE8                     	
 11551                           l4601:
 11552  000BE8                     	movlw	high(0Eh)
 11553  000BE8  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11554  000BEA  6E04               	movlw	low(0Eh)
 11555  000BEC  0E0E               	movwf	((c:temp_convert@temperature)),c
 11556  000BEE  6E03               	goto	l4755
 11557  000BF0  EF0A  F009         	line	359
 11558                           ;main.c: 359:         else if (x>=375 && x<400){temperature=15;}
 11559                           	
 11560                           l333:
 11561  000BF4                     	
 11562                           l4603:
 11563  000BF4                     		movlw	119
 11564  000BF4  0E77               	subwf	 ((c:temp_convert@x)),c,w
 11565  000BF6  5C01               	movlw	1
 11566  000BF8  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11567  000BFA  5802               	btfss	status,0
 11568  000BFC  A0D8               	goto	u6281
 11569  000BFE  EF03  F006         	goto	u6280
 11570  000C02  EF05  F006         
 11571                           u6281:
 11572  000C06                     	goto	l4609
 11573  000C06  EF16  F006         u6280:
 11574  000C0A                     	
 11575                           l4605:
 11576  000C0A                     		movlw	144
 11577  000C0A  0E90               	subwf	 ((c:temp_convert@x)),c,w
 11578  000C0C  5C01               	movlw	1
 11579  000C0E  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11580  000C10  5802               	btfsc	status,0
 11581  000C12  B0D8               	goto	u6291
 11582  000C14  EF0E  F006         	goto	u6290
 11583  000C18  EF10  F006         
 11584                           u6291:
 11585  000C1C                     	goto	l4609
 11586  000C1C  EF16  F006         u6290:
 11587  000C20                     	
 11588                           l4607:
 11589  000C20                     	movlw	high(0Fh)
 11590  000C20  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11591  000C22  6E04               	movlw	low(0Fh)
 11592  000C24  0E0F               	movwf	((c:temp_convert@temperature)),c
 11593  000C26  6E03               	goto	l4755
 11594  000C28  EF0A  F009         	line	360
 11595                           ;main.c: 360:         else if (x>=400 && x<425){temperature=16;}
 11596                           	
 11597                           l335:
 11598  000C2C                     	
 11599                           l4609:
 11600  000C2C                     		movlw	144
 11601  000C2C  0E90               	subwf	 ((c:temp_convert@x)),c,w
 11602  000C2E  5C01               	movlw	1
 11603  000C30  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11604  000C32  5802               	btfss	status,0
 11605  000C34  A0D8               	goto	u6301
 11606  000C36  EF1F  F006         	goto	u6300
 11607  000C3A  EF21  F006         
 11608                           u6301:
 11609  000C3E                     	goto	l4615
 11610  000C3E  EF32  F006         u6300:
 11611  000C42                     	
 11612                           l4611:
 11613  000C42                     		movlw	169
 11614  000C42  0EA9               	subwf	 ((c:temp_convert@x)),c,w
 11615  000C44  5C01               	movlw	1
 11616  000C46  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11617  000C48  5802               	btfsc	status,0
 11618  000C4A  B0D8               	goto	u6311
 11619  000C4C  EF2A  F006         	goto	u6310
 11620  000C50  EF2C  F006         
 11621                           u6311:
 11622  000C54                     	goto	l4615
 11623  000C54  EF32  F006         u6310:
 11624  000C58                     	
 11625                           l4613:
 11626  000C58                     	movlw	high(010h)
 11627  000C58  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11628  000C5A  6E04               	movlw	low(010h)
 11629  000C5C  0E10               	movwf	((c:temp_convert@temperature)),c
 11630  000C5E  6E03               	goto	l4755
 11631  000C60  EF0A  F009         	line	361
 11632                           ;main.c: 361:         else if (x>=425 && x<450){temperature=17;}
 11633                           	
 11634                           l337:
 11635  000C64                     	
 11636                           l4615:
 11637  000C64                     		movlw	169
 11638  000C64  0EA9               	subwf	 ((c:temp_convert@x)),c,w
 11639  000C66  5C01               	movlw	1
 11640  000C68  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11641  000C6A  5802               	btfss	status,0
 11642  000C6C  A0D8               	goto	u6321
 11643  000C6E  EF3B  F006         	goto	u6320
 11644  000C72  EF3D  F006         
 11645                           u6321:
 11646  000C76                     	goto	l4621
 11647  000C76  EF4E  F006         u6320:
 11648  000C7A                     	
 11649                           l4617:
 11650  000C7A                     		movlw	194
 11651  000C7A  0EC2               	subwf	 ((c:temp_convert@x)),c,w
 11652  000C7C  5C01               	movlw	1
 11653  000C7E  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11654  000C80  5802               	btfsc	status,0
 11655  000C82  B0D8               	goto	u6331
 11656  000C84  EF46  F006         	goto	u6330
 11657  000C88  EF48  F006         
 11658                           u6331:
 11659  000C8C                     	goto	l4621
 11660  000C8C  EF4E  F006         u6330:
 11661  000C90                     	
 11662                           l4619:
 11663  000C90                     	movlw	high(011h)
 11664  000C90  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11665  000C92  6E04               	movlw	low(011h)
 11666  000C94  0E11               	movwf	((c:temp_convert@temperature)),c
 11667  000C96  6E03               	goto	l4755
 11668  000C98  EF0A  F009         	line	362
 11669                           ;main.c: 362:         else if (x>=450 && x<475){temperature=18;}
 11670                           	
 11671                           l339:
 11672  000C9C                     	
 11673                           l4621:
 11674  000C9C                     		movlw	194
 11675  000C9C  0EC2               	subwf	 ((c:temp_convert@x)),c,w
 11676  000C9E  5C01               	movlw	1
 11677  000CA0  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11678  000CA2  5802               	btfss	status,0
 11679  000CA4  A0D8               	goto	u6341
 11680  000CA6  EF57  F006         	goto	u6340
 11681  000CAA  EF59  F006         
 11682                           u6341:
 11683  000CAE                     	goto	l4627
 11684  000CAE  EF6A  F006         u6340:
 11685  000CB2                     	
 11686                           l4623:
 11687  000CB2                     		movlw	219
 11688  000CB2  0EDB               	subwf	 ((c:temp_convert@x)),c,w
 11689  000CB4  5C01               	movlw	1
 11690  000CB6  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11691  000CB8  5802               	btfsc	status,0
 11692  000CBA  B0D8               	goto	u6351
 11693  000CBC  EF62  F006         	goto	u6350
 11694  000CC0  EF64  F006         
 11695                           u6351:
 11696  000CC4                     	goto	l4627
 11697  000CC4  EF6A  F006         u6350:
 11698  000CC8                     	
 11699                           l4625:
 11700  000CC8                     	movlw	high(012h)
 11701  000CC8  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11702  000CCA  6E04               	movlw	low(012h)
 11703  000CCC  0E12               	movwf	((c:temp_convert@temperature)),c
 11704  000CCE  6E03               	goto	l4755
 11705  000CD0  EF0A  F009         	line	363
 11706                           ;main.c: 363:         else if (x>=475 && x<500){temperature=19;}
 11707                           	
 11708                           l341:
 11709  000CD4                     	
 11710                           l4627:
 11711  000CD4                     		movlw	219
 11712  000CD4  0EDB               	subwf	 ((c:temp_convert@x)),c,w
 11713  000CD6  5C01               	movlw	1
 11714  000CD8  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11715  000CDA  5802               	btfss	status,0
 11716  000CDC  A0D8               	goto	u6361
 11717  000CDE  EF73  F006         	goto	u6360
 11718  000CE2  EF75  F006         
 11719                           u6361:
 11720  000CE6                     	goto	l4633
 11721  000CE6  EF86  F006         u6360:
 11722  000CEA                     	
 11723                           l4629:
 11724  000CEA                     		movlw	244
 11725  000CEA  0EF4               	subwf	 ((c:temp_convert@x)),c,w
 11726  000CEC  5C01               	movlw	1
 11727  000CEE  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11728  000CF0  5802               	btfsc	status,0
 11729  000CF2  B0D8               	goto	u6371
 11730  000CF4  EF7E  F006         	goto	u6370
 11731  000CF8  EF80  F006         
 11732                           u6371:
 11733  000CFC                     	goto	l4633
 11734  000CFC  EF86  F006         u6370:
 11735  000D00                     	
 11736                           l4631:
 11737  000D00                     	movlw	high(013h)
 11738  000D00  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11739  000D02  6E04               	movlw	low(013h)
 11740  000D04  0E13               	movwf	((c:temp_convert@temperature)),c
 11741  000D06  6E03               	goto	l4755
 11742  000D08  EF0A  F009         	line	364
 11743                           ;main.c: 364:         else if (x>=500 && x<525){temperature=20;}
 11744                           	
 11745                           l343:
 11746  000D0C                     	
 11747                           l4633:
 11748  000D0C                     		movlw	244
 11749  000D0C  0EF4               	subwf	 ((c:temp_convert@x)),c,w
 11750  000D0E  5C01               	movlw	1
 11751  000D10  0E01               	subwfb	((c:temp_convert@x+1)),c,w
 11752  000D12  5802               	btfss	status,0
 11753  000D14  A0D8               	goto	u6381
 11754  000D16  EF8F  F006         	goto	u6380
 11755  000D1A  EF91  F006         
 11756                           u6381:
 11757  000D1E                     	goto	l4639
 11758  000D1E  EFA2  F006         u6380:
 11759  000D22                     	
 11760                           l4635:
 11761  000D22                     		movlw	13
 11762  000D22  0E0D               	subwf	 ((c:temp_convert@x)),c,w
 11763  000D24  5C01               	movlw	2
 11764  000D26  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11765  000D28  5802               	btfsc	status,0
 11766  000D2A  B0D8               	goto	u6391
 11767  000D2C  EF9A  F006         	goto	u6390
 11768  000D30  EF9C  F006         
 11769                           u6391:
 11770  000D34                     	goto	l4639
 11771  000D34  EFA2  F006         u6390:
 11772  000D38                     	
 11773                           l4637:
 11774  000D38                     	movlw	high(014h)
 11775  000D38  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11776  000D3A  6E04               	movlw	low(014h)
 11777  000D3C  0E14               	movwf	((c:temp_convert@temperature)),c
 11778  000D3E  6E03               	goto	l4755
 11779  000D40  EF0A  F009         	line	365
 11780                           ;main.c: 365:         else if (x>=525 && x<550){temperature=21;}
 11781                           	
 11782                           l345:
 11783  000D44                     	
 11784                           l4639:
 11785  000D44                     		movlw	13
 11786  000D44  0E0D               	subwf	 ((c:temp_convert@x)),c,w
 11787  000D46  5C01               	movlw	2
 11788  000D48  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11789  000D4A  5802               	btfss	status,0
 11790  000D4C  A0D8               	goto	u6401
 11791  000D4E  EFAB  F006         	goto	u6400
 11792  000D52  EFAD  F006         
 11793                           u6401:
 11794  000D56                     	goto	l4645
 11795  000D56  EFBE  F006         u6400:
 11796  000D5A                     	
 11797                           l4641:
 11798  000D5A                     		movlw	38
 11799  000D5A  0E26               	subwf	 ((c:temp_convert@x)),c,w
 11800  000D5C  5C01               	movlw	2
 11801  000D5E  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11802  000D60  5802               	btfsc	status,0
 11803  000D62  B0D8               	goto	u6411
 11804  000D64  EFB6  F006         	goto	u6410
 11805  000D68  EFB8  F006         
 11806                           u6411:
 11807  000D6C                     	goto	l4645
 11808  000D6C  EFBE  F006         u6410:
 11809  000D70                     	
 11810                           l4643:
 11811  000D70                     	movlw	high(015h)
 11812  000D70  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11813  000D72  6E04               	movlw	low(015h)
 11814  000D74  0E15               	movwf	((c:temp_convert@temperature)),c
 11815  000D76  6E03               	goto	l4755
 11816  000D78  EF0A  F009         	line	366
 11817                           ;main.c: 366:         else if (x>=550 && x<575){temperature=22;}
 11818                           	
 11819                           l347:
 11820  000D7C                     	
 11821                           l4645:
 11822  000D7C                     		movlw	38
 11823  000D7C  0E26               	subwf	 ((c:temp_convert@x)),c,w
 11824  000D7E  5C01               	movlw	2
 11825  000D80  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11826  000D82  5802               	btfss	status,0
 11827  000D84  A0D8               	goto	u6421
 11828  000D86  EFC7  F006         	goto	u6420
 11829  000D8A  EFC9  F006         
 11830                           u6421:
 11831  000D8E                     	goto	l4651
 11832  000D8E  EFDA  F006         u6420:
 11833  000D92                     	
 11834                           l4647:
 11835  000D92                     		movlw	63
 11836  000D92  0E3F               	subwf	 ((c:temp_convert@x)),c,w
 11837  000D94  5C01               	movlw	2
 11838  000D96  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11839  000D98  5802               	btfsc	status,0
 11840  000D9A  B0D8               	goto	u6431
 11841  000D9C  EFD2  F006         	goto	u6430
 11842  000DA0  EFD4  F006         
 11843                           u6431:
 11844  000DA4                     	goto	l4651
 11845  000DA4  EFDA  F006         u6430:
 11846  000DA8                     	
 11847                           l4649:
 11848  000DA8                     	movlw	high(016h)
 11849  000DA8  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11850  000DAA  6E04               	movlw	low(016h)
 11851  000DAC  0E16               	movwf	((c:temp_convert@temperature)),c
 11852  000DAE  6E03               	goto	l4755
 11853  000DB0  EF0A  F009         	line	367
 11854                           ;main.c: 367:         else if (x>=575 && x<600){temperature=23;}
 11855                           	
 11856                           l349:
 11857  000DB4                     	
 11858                           l4651:
 11859  000DB4                     		movlw	63
 11860  000DB4  0E3F               	subwf	 ((c:temp_convert@x)),c,w
 11861  000DB6  5C01               	movlw	2
 11862  000DB8  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11863  000DBA  5802               	btfss	status,0
 11864  000DBC  A0D8               	goto	u6441
 11865  000DBE  EFE3  F006         	goto	u6440
 11866  000DC2  EFE5  F006         
 11867                           u6441:
 11868  000DC6                     	goto	l4657
 11869  000DC6  EFF6  F006         u6440:
 11870  000DCA                     	
 11871                           l4653:
 11872  000DCA                     		movlw	88
 11873  000DCA  0E58               	subwf	 ((c:temp_convert@x)),c,w
 11874  000DCC  5C01               	movlw	2
 11875  000DCE  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11876  000DD0  5802               	btfsc	status,0
 11877  000DD2  B0D8               	goto	u6451
 11878  000DD4  EFEE  F006         	goto	u6450
 11879  000DD8  EFF0  F006         
 11880                           u6451:
 11881  000DDC                     	goto	l4657
 11882  000DDC  EFF6  F006         u6450:
 11883  000DE0                     	
 11884                           l4655:
 11885  000DE0                     	movlw	high(017h)
 11886  000DE0  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11887  000DE2  6E04               	movlw	low(017h)
 11888  000DE4  0E17               	movwf	((c:temp_convert@temperature)),c
 11889  000DE6  6E03               	goto	l4755
 11890  000DE8  EF0A  F009         	line	368
 11891                           ;main.c: 368:         else if (x>=600 && x<625){temperature=24;}
 11892                           	
 11893                           l351:
 11894  000DEC                     	
 11895                           l4657:
 11896  000DEC                     		movlw	88
 11897  000DEC  0E58               	subwf	 ((c:temp_convert@x)),c,w
 11898  000DEE  5C01               	movlw	2
 11899  000DF0  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11900  000DF2  5802               	btfss	status,0
 11901  000DF4  A0D8               	goto	u6461
 11902  000DF6  EFFF  F006         	goto	u6460
 11903  000DFA  EF01  F007         
 11904                           u6461:
 11905  000DFE                     	goto	l4663
 11906  000DFE  EF12  F007         u6460:
 11907  000E02                     	
 11908                           l4659:
 11909  000E02                     		movlw	113
 11910  000E02  0E71               	subwf	 ((c:temp_convert@x)),c,w
 11911  000E04  5C01               	movlw	2
 11912  000E06  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11913  000E08  5802               	btfsc	status,0
 11914  000E0A  B0D8               	goto	u6471
 11915  000E0C  EF0A  F007         	goto	u6470
 11916  000E10  EF0C  F007         
 11917                           u6471:
 11918  000E14                     	goto	l4663
 11919  000E14  EF12  F007         u6470:
 11920  000E18                     	
 11921                           l4661:
 11922  000E18                     	movlw	high(018h)
 11923  000E18  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11924  000E1A  6E04               	movlw	low(018h)
 11925  000E1C  0E18               	movwf	((c:temp_convert@temperature)),c
 11926  000E1E  6E03               	goto	l4755
 11927  000E20  EF0A  F009         	line	369
 11928                           ;main.c: 369:         else if (x>=625 && x<650){temperature=25;}
 11929                           	
 11930                           l353:
 11931  000E24                     	
 11932                           l4663:
 11933  000E24                     		movlw	113
 11934  000E24  0E71               	subwf	 ((c:temp_convert@x)),c,w
 11935  000E26  5C01               	movlw	2
 11936  000E28  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11937  000E2A  5802               	btfss	status,0
 11938  000E2C  A0D8               	goto	u6481
 11939  000E2E  EF1B  F007         	goto	u6480
 11940  000E32  EF1D  F007         
 11941                           u6481:
 11942  000E36                     	goto	l4669
 11943  000E36  EF2E  F007         u6480:
 11944  000E3A                     	
 11945                           l4665:
 11946  000E3A                     		movlw	138
 11947  000E3A  0E8A               	subwf	 ((c:temp_convert@x)),c,w
 11948  000E3C  5C01               	movlw	2
 11949  000E3E  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11950  000E40  5802               	btfsc	status,0
 11951  000E42  B0D8               	goto	u6491
 11952  000E44  EF26  F007         	goto	u6490
 11953  000E48  EF28  F007         
 11954                           u6491:
 11955  000E4C                     	goto	l4669
 11956  000E4C  EF2E  F007         u6490:
 11957  000E50                     	
 11958                           l4667:
 11959  000E50                     	movlw	high(019h)
 11960  000E50  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11961  000E52  6E04               	movlw	low(019h)
 11962  000E54  0E19               	movwf	((c:temp_convert@temperature)),c
 11963  000E56  6E03               	goto	l4755
 11964  000E58  EF0A  F009         	line	370
 11965                           ;main.c: 370:         else if (x>=650 && x<675){temperature=26;}
 11966                           	
 11967                           l355:
 11968  000E5C                     	
 11969                           l4669:
 11970  000E5C                     		movlw	138
 11971  000E5C  0E8A               	subwf	 ((c:temp_convert@x)),c,w
 11972  000E5E  5C01               	movlw	2
 11973  000E60  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11974  000E62  5802               	btfss	status,0
 11975  000E64  A0D8               	goto	u6501
 11976  000E66  EF37  F007         	goto	u6500
 11977  000E6A  EF39  F007         
 11978                           u6501:
 11979  000E6E                     	goto	l4675
 11980  000E6E  EF4A  F007         u6500:
 11981  000E72                     	
 11982                           l4671:
 11983  000E72                     		movlw	163
 11984  000E72  0EA3               	subwf	 ((c:temp_convert@x)),c,w
 11985  000E74  5C01               	movlw	2
 11986  000E76  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 11987  000E78  5802               	btfsc	status,0
 11988  000E7A  B0D8               	goto	u6511
 11989  000E7C  EF42  F007         	goto	u6510
 11990  000E80  EF44  F007         
 11991                           u6511:
 11992  000E84                     	goto	l4675
 11993  000E84  EF4A  F007         u6510:
 11994  000E88                     	
 11995                           l4673:
 11996  000E88                     	movlw	high(01Ah)
 11997  000E88  0E00               	movwf	((c:temp_convert@temperature+1)),c
 11998  000E8A  6E04               	movlw	low(01Ah)
 11999  000E8C  0E1A               	movwf	((c:temp_convert@temperature)),c
 12000  000E8E  6E03               	goto	l4755
 12001  000E90  EF0A  F009         	line	371
 12002                           ;main.c: 371:         else if (x>=675 && x<700){temperature=27;}
 12003                           	
 12004                           l357:
 12005  000E94                     	
 12006                           l4675:
 12007  000E94                     		movlw	163
 12008  000E94  0EA3               	subwf	 ((c:temp_convert@x)),c,w
 12009  000E96  5C01               	movlw	2
 12010  000E98  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 12011  000E9A  5802               	btfss	status,0
 12012  000E9C  A0D8               	goto	u6521
 12013  000E9E  EF53  F007         	goto	u6520
 12014  000EA2  EF55  F007         
 12015                           u6521:
 12016  000EA6                     	goto	l4681
 12017  000EA6  EF66  F007         u6520:
 12018  000EAA                     	
 12019                           l4677:
 12020  000EAA                     		movlw	188
 12021  000EAA  0EBC               	subwf	 ((c:temp_convert@x)),c,w
 12022  000EAC  5C01               	movlw	2
 12023  000EAE  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 12024  000EB0  5802               	btfsc	status,0
 12025  000EB2  B0D8               	goto	u6531
 12026  000EB4  EF5E  F007         	goto	u6530
 12027  000EB8  EF60  F007         
 12028                           u6531:
 12029  000EBC                     	goto	l4681
 12030  000EBC  EF66  F007         u6530:
 12031  000EC0                     	
 12032                           l4679:
 12033  000EC0                     	movlw	high(01Bh)
 12034  000EC0  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12035  000EC2  6E04               	movlw	low(01Bh)
 12036  000EC4  0E1B               	movwf	((c:temp_convert@temperature)),c
 12037  000EC6  6E03               	goto	l4755
 12038  000EC8  EF0A  F009         	line	372
 12039                           ;main.c: 372:         else if (x>=700 && x<725){temperature=28;}
 12040                           	
 12041                           l359:
 12042  000ECC                     	
 12043                           l4681:
 12044  000ECC                     		movlw	188
 12045  000ECC  0EBC               	subwf	 ((c:temp_convert@x)),c,w
 12046  000ECE  5C01               	movlw	2
 12047  000ED0  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 12048  000ED2  5802               	btfss	status,0
 12049  000ED4  A0D8               	goto	u6541
 12050  000ED6  EF6F  F007         	goto	u6540
 12051  000EDA  EF71  F007         
 12052                           u6541:
 12053  000EDE                     	goto	l4687
 12054  000EDE  EF82  F007         u6540:
 12055  000EE2                     	
 12056                           l4683:
 12057  000EE2                     		movlw	213
 12058  000EE2  0ED5               	subwf	 ((c:temp_convert@x)),c,w
 12059  000EE4  5C01               	movlw	2
 12060  000EE6  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 12061  000EE8  5802               	btfsc	status,0
 12062  000EEA  B0D8               	goto	u6551
 12063  000EEC  EF7A  F007         	goto	u6550
 12064  000EF0  EF7C  F007         
 12065                           u6551:
 12066  000EF4                     	goto	l4687
 12067  000EF4  EF82  F007         u6550:
 12068  000EF8                     	
 12069                           l4685:
 12070  000EF8                     	movlw	high(01Ch)
 12071  000EF8  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12072  000EFA  6E04               	movlw	low(01Ch)
 12073  000EFC  0E1C               	movwf	((c:temp_convert@temperature)),c
 12074  000EFE  6E03               	goto	l4755
 12075  000F00  EF0A  F009         	line	373
 12076                           ;main.c: 373:         else if (x>=725 && x<750){temperature=29;}
 12077                           	
 12078                           l361:
 12079  000F04                     	
 12080                           l4687:
 12081  000F04                     		movlw	213
 12082  000F04  0ED5               	subwf	 ((c:temp_convert@x)),c,w
 12083  000F06  5C01               	movlw	2
 12084  000F08  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 12085  000F0A  5802               	btfss	status,0
 12086  000F0C  A0D8               	goto	u6561
 12087  000F0E  EF8B  F007         	goto	u6560
 12088  000F12  EF8D  F007         
 12089                           u6561:
 12090  000F16                     	goto	l4693
 12091  000F16  EF9E  F007         u6560:
 12092  000F1A                     	
 12093                           l4689:
 12094  000F1A                     		movlw	238
 12095  000F1A  0EEE               	subwf	 ((c:temp_convert@x)),c,w
 12096  000F1C  5C01               	movlw	2
 12097  000F1E  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 12098  000F20  5802               	btfsc	status,0
 12099  000F22  B0D8               	goto	u6571
 12100  000F24  EF96  F007         	goto	u6570
 12101  000F28  EF98  F007         
 12102                           u6571:
 12103  000F2C                     	goto	l4693
 12104  000F2C  EF9E  F007         u6570:
 12105  000F30                     	
 12106                           l4691:
 12107  000F30                     	movlw	high(01Dh)
 12108  000F30  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12109  000F32  6E04               	movlw	low(01Dh)
 12110  000F34  0E1D               	movwf	((c:temp_convert@temperature)),c
 12111  000F36  6E03               	goto	l4755
 12112  000F38  EF0A  F009         	line	374
 12113                           ;main.c: 374:         else if (x>=750 && x<775){temperature=30;}
 12114                           	
 12115                           l363:
 12116  000F3C                     	
 12117                           l4693:
 12118  000F3C                     		movlw	238
 12119  000F3C  0EEE               	subwf	 ((c:temp_convert@x)),c,w
 12120  000F3E  5C01               	movlw	2
 12121  000F40  0E02               	subwfb	((c:temp_convert@x+1)),c,w
 12122  000F42  5802               	btfss	status,0
 12123  000F44  A0D8               	goto	u6581
 12124  000F46  EFA7  F007         	goto	u6580
 12125  000F4A  EFA9  F007         
 12126                           u6581:
 12127  000F4E                     	goto	l4699
 12128  000F4E  EFBA  F007         u6580:
 12129  000F52                     	
 12130                           l4695:
 12131  000F52                     		movlw	7
 12132  000F52  0E07               	subwf	 ((c:temp_convert@x)),c,w
 12133  000F54  5C01               	movlw	3
 12134  000F56  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12135  000F58  5802               	btfsc	status,0
 12136  000F5A  B0D8               	goto	u6591
 12137  000F5C  EFB2  F007         	goto	u6590
 12138  000F60  EFB4  F007         
 12139                           u6591:
 12140  000F64                     	goto	l4699
 12141  000F64  EFBA  F007         u6590:
 12142  000F68                     	
 12143                           l4697:
 12144  000F68                     	movlw	high(01Eh)
 12145  000F68  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12146  000F6A  6E04               	movlw	low(01Eh)
 12147  000F6C  0E1E               	movwf	((c:temp_convert@temperature)),c
 12148  000F6E  6E03               	goto	l4755
 12149  000F70  EF0A  F009         	line	375
 12150                           ;main.c: 375:         else if (x>=775 && x<800){temperature=31;}
 12151                           	
 12152                           l365:
 12153  000F74                     	
 12154                           l4699:
 12155  000F74                     		movlw	7
 12156  000F74  0E07               	subwf	 ((c:temp_convert@x)),c,w
 12157  000F76  5C01               	movlw	3
 12158  000F78  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12159  000F7A  5802               	btfss	status,0
 12160  000F7C  A0D8               	goto	u6601
 12161  000F7E  EFC3  F007         	goto	u6600
 12162  000F82  EFC5  F007         
 12163                           u6601:
 12164  000F86                     	goto	l4705
 12165  000F86  EFD6  F007         u6600:
 12166  000F8A                     	
 12167                           l4701:
 12168  000F8A                     		movlw	32
 12169  000F8A  0E20               	subwf	 ((c:temp_convert@x)),c,w
 12170  000F8C  5C01               	movlw	3
 12171  000F8E  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12172  000F90  5802               	btfsc	status,0
 12173  000F92  B0D8               	goto	u6611
 12174  000F94  EFCE  F007         	goto	u6610
 12175  000F98  EFD0  F007         
 12176                           u6611:
 12177  000F9C                     	goto	l4705
 12178  000F9C  EFD6  F007         u6610:
 12179  000FA0                     	
 12180                           l4703:
 12181  000FA0                     	movlw	high(01Fh)
 12182  000FA0  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12183  000FA2  6E04               	movlw	low(01Fh)
 12184  000FA4  0E1F               	movwf	((c:temp_convert@temperature)),c
 12185  000FA6  6E03               	goto	l4755
 12186  000FA8  EF0A  F009         	line	376
 12187                           ;main.c: 376:         else if (x>=800 && x<825){temperature=32;}
 12188                           	
 12189                           l367:
 12190  000FAC                     	
 12191                           l4705:
 12192  000FAC                     		movlw	32
 12193  000FAC  0E20               	subwf	 ((c:temp_convert@x)),c,w
 12194  000FAE  5C01               	movlw	3
 12195  000FB0  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12196  000FB2  5802               	btfss	status,0
 12197  000FB4  A0D8               	goto	u6621
 12198  000FB6  EFDF  F007         	goto	u6620
 12199  000FBA  EFE1  F007         
 12200                           u6621:
 12201  000FBE                     	goto	l4711
 12202  000FBE  EFF2  F007         u6620:
 12203  000FC2                     	
 12204                           l4707:
 12205  000FC2                     		movlw	57
 12206  000FC2  0E39               	subwf	 ((c:temp_convert@x)),c,w
 12207  000FC4  5C01               	movlw	3
 12208  000FC6  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12209  000FC8  5802               	btfsc	status,0
 12210  000FCA  B0D8               	goto	u6631
 12211  000FCC  EFEA  F007         	goto	u6630
 12212  000FD0  EFEC  F007         
 12213                           u6631:
 12214  000FD4                     	goto	l4711
 12215  000FD4  EFF2  F007         u6630:
 12216  000FD8                     	
 12217                           l4709:
 12218  000FD8                     	movlw	high(020h)
 12219  000FD8  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12220  000FDA  6E04               	movlw	low(020h)
 12221  000FDC  0E20               	movwf	((c:temp_convert@temperature)),c
 12222  000FDE  6E03               	goto	l4755
 12223  000FE0  EF0A  F009         	line	377
 12224                           ;main.c: 377:         else if (x>=825 && x<850){temperature=33;}
 12225                           	
 12226                           l369:
 12227  000FE4                     	
 12228                           l4711:
 12229  000FE4                     		movlw	57
 12230  000FE4  0E39               	subwf	 ((c:temp_convert@x)),c,w
 12231  000FE6  5C01               	movlw	3
 12232  000FE8  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12233  000FEA  5802               	btfss	status,0
 12234  000FEC  A0D8               	goto	u6641
 12235  000FEE  EFFB  F007         	goto	u6640
 12236  000FF2  EFFD  F007         
 12237                           u6641:
 12238  000FF6                     	goto	l4717
 12239  000FF6  EF0E  F008         u6640:
 12240  000FFA                     	
 12241                           l4713:
 12242  000FFA                     		movlw	82
 12243  000FFA  0E52               	subwf	 ((c:temp_convert@x)),c,w
 12244  000FFC  5C01               	movlw	3
 12245  000FFE  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12246  001000  5802               	btfsc	status,0
 12247  001002  B0D8               	goto	u6651
 12248  001004  EF06  F008         	goto	u6650
 12249  001008  EF08  F008         
 12250                           u6651:
 12251  00100C                     	goto	l4717
 12252  00100C  EF0E  F008         u6650:
 12253  001010                     	
 12254                           l4715:
 12255  001010                     	movlw	high(021h)
 12256  001010  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12257  001012  6E04               	movlw	low(021h)
 12258  001014  0E21               	movwf	((c:temp_convert@temperature)),c
 12259  001016  6E03               	goto	l4755
 12260  001018  EF0A  F009         	line	378
 12261                           ;main.c: 378:         else if (x>=850 && x<875){temperature=34;}
 12262                           	
 12263                           l371:
 12264  00101C                     	
 12265                           l4717:
 12266  00101C                     		movlw	82
 12267  00101C  0E52               	subwf	 ((c:temp_convert@x)),c,w
 12268  00101E  5C01               	movlw	3
 12269  001020  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12270  001022  5802               	btfss	status,0
 12271  001024  A0D8               	goto	u6661
 12272  001026  EF17  F008         	goto	u6660
 12273  00102A  EF19  F008         
 12274                           u6661:
 12275  00102E                     	goto	l4723
 12276  00102E  EF2A  F008         u6660:
 12277  001032                     	
 12278                           l4719:
 12279  001032                     		movlw	107
 12280  001032  0E6B               	subwf	 ((c:temp_convert@x)),c,w
 12281  001034  5C01               	movlw	3
 12282  001036  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12283  001038  5802               	btfsc	status,0
 12284  00103A  B0D8               	goto	u6671
 12285  00103C  EF22  F008         	goto	u6670
 12286  001040  EF24  F008         
 12287                           u6671:
 12288  001044                     	goto	l4723
 12289  001044  EF2A  F008         u6670:
 12290  001048                     	
 12291                           l4721:
 12292  001048                     	movlw	high(022h)
 12293  001048  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12294  00104A  6E04               	movlw	low(022h)
 12295  00104C  0E22               	movwf	((c:temp_convert@temperature)),c
 12296  00104E  6E03               	goto	l4755
 12297  001050  EF0A  F009         	line	379
 12298                           ;main.c: 379:         else if (x>=875 && x<900){temperature=35;}
 12299                           	
 12300                           l373:
 12301  001054                     	
 12302                           l4723:
 12303  001054                     		movlw	107
 12304  001054  0E6B               	subwf	 ((c:temp_convert@x)),c,w
 12305  001056  5C01               	movlw	3
 12306  001058  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12307  00105A  5802               	btfss	status,0
 12308  00105C  A0D8               	goto	u6681
 12309  00105E  EF33  F008         	goto	u6680
 12310  001062  EF35  F008         
 12311                           u6681:
 12312  001066                     	goto	l4729
 12313  001066  EF46  F008         u6680:
 12314  00106A                     	
 12315                           l4725:
 12316  00106A                     		movlw	132
 12317  00106A  0E84               	subwf	 ((c:temp_convert@x)),c,w
 12318  00106C  5C01               	movlw	3
 12319  00106E  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12320  001070  5802               	btfsc	status,0
 12321  001072  B0D8               	goto	u6691
 12322  001074  EF3E  F008         	goto	u6690
 12323  001078  EF40  F008         
 12324                           u6691:
 12325  00107C                     	goto	l4729
 12326  00107C  EF46  F008         u6690:
 12327  001080                     	
 12328                           l4727:
 12329  001080                     	movlw	high(023h)
 12330  001080  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12331  001082  6E04               	movlw	low(023h)
 12332  001084  0E23               	movwf	((c:temp_convert@temperature)),c
 12333  001086  6E03               	goto	l4755
 12334  001088  EF0A  F009         	line	380
 12335                           ;main.c: 380:         else if (x>=900 && x<925){temperature=36;}
 12336                           	
 12337                           l375:
 12338  00108C                     	
 12339                           l4729:
 12340  00108C                     		movlw	132
 12341  00108C  0E84               	subwf	 ((c:temp_convert@x)),c,w
 12342  00108E  5C01               	movlw	3
 12343  001090  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12344  001092  5802               	btfss	status,0
 12345  001094  A0D8               	goto	u6701
 12346  001096  EF4F  F008         	goto	u6700
 12347  00109A  EF51  F008         
 12348                           u6701:
 12349  00109E                     	goto	l4735
 12350  00109E  EF62  F008         u6700:
 12351  0010A2                     	
 12352                           l4731:
 12353  0010A2                     		movlw	157
 12354  0010A2  0E9D               	subwf	 ((c:temp_convert@x)),c,w
 12355  0010A4  5C01               	movlw	3
 12356  0010A6  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12357  0010A8  5802               	btfsc	status,0
 12358  0010AA  B0D8               	goto	u6711
 12359  0010AC  EF5A  F008         	goto	u6710
 12360  0010B0  EF5C  F008         
 12361                           u6711:
 12362  0010B4                     	goto	l4735
 12363  0010B4  EF62  F008         u6710:
 12364  0010B8                     	
 12365                           l4733:
 12366  0010B8                     	movlw	high(024h)
 12367  0010B8  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12368  0010BA  6E04               	movlw	low(024h)
 12369  0010BC  0E24               	movwf	((c:temp_convert@temperature)),c
 12370  0010BE  6E03               	goto	l4755
 12371  0010C0  EF0A  F009         	line	381
 12372                           ;main.c: 381:         else if (x>=925 && x<950){temperature=37;}
 12373                           	
 12374                           l377:
 12375  0010C4                     	
 12376                           l4735:
 12377  0010C4                     		movlw	157
 12378  0010C4  0E9D               	subwf	 ((c:temp_convert@x)),c,w
 12379  0010C6  5C01               	movlw	3
 12380  0010C8  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12381  0010CA  5802               	btfss	status,0
 12382  0010CC  A0D8               	goto	u6721
 12383  0010CE  EF6B  F008         	goto	u6720
 12384  0010D2  EF6D  F008         
 12385                           u6721:
 12386  0010D6                     	goto	l4741
 12387  0010D6  EF7E  F008         u6720:
 12388  0010DA                     	
 12389                           l4737:
 12390  0010DA                     		movlw	182
 12391  0010DA  0EB6               	subwf	 ((c:temp_convert@x)),c,w
 12392  0010DC  5C01               	movlw	3
 12393  0010DE  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12394  0010E0  5802               	btfsc	status,0
 12395  0010E2  B0D8               	goto	u6731
 12396  0010E4  EF76  F008         	goto	u6730
 12397  0010E8  EF78  F008         
 12398                           u6731:
 12399  0010EC                     	goto	l4741
 12400  0010EC  EF7E  F008         u6730:
 12401  0010F0                     	
 12402                           l4739:
 12403  0010F0                     	movlw	high(025h)
 12404  0010F0  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12405  0010F2  6E04               	movlw	low(025h)
 12406  0010F4  0E25               	movwf	((c:temp_convert@temperature)),c
 12407  0010F6  6E03               	goto	l4755
 12408  0010F8  EF0A  F009         	line	382
 12409                           ;main.c: 382:         else if (x>=950 && x<975){temperature=38;}
 12410                           	
 12411                           l379:
 12412  0010FC                     	
 12413                           l4741:
 12414  0010FC                     		movlw	182
 12415  0010FC  0EB6               	subwf	 ((c:temp_convert@x)),c,w
 12416  0010FE  5C01               	movlw	3
 12417  001100  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12418  001102  5802               	btfss	status,0
 12419  001104  A0D8               	goto	u6741
 12420  001106  EF87  F008         	goto	u6740
 12421  00110A  EF89  F008         
 12422                           u6741:
 12423  00110E                     	goto	l4747
 12424  00110E  EF9A  F008         u6740:
 12425  001112                     	
 12426                           l4743:
 12427  001112                     		movlw	207
 12428  001112  0ECF               	subwf	 ((c:temp_convert@x)),c,w
 12429  001114  5C01               	movlw	3
 12430  001116  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12431  001118  5802               	btfsc	status,0
 12432  00111A  B0D8               	goto	u6751
 12433  00111C  EF92  F008         	goto	u6750
 12434  001120  EF94  F008         
 12435                           u6751:
 12436  001124                     	goto	l4747
 12437  001124  EF9A  F008         u6750:
 12438  001128                     	
 12439                           l4745:
 12440  001128                     	movlw	high(026h)
 12441  001128  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12442  00112A  6E04               	movlw	low(026h)
 12443  00112C  0E26               	movwf	((c:temp_convert@temperature)),c
 12444  00112E  6E03               	goto	l4755
 12445  001130  EF0A  F009         	line	383
 12446                           ;main.c: 383:         else if (x>=975 && x<1000){temperature=39;}
 12447                           	
 12448                           l381:
 12449  001134                     	
 12450                           l4747:
 12451  001134                     		movlw	207
 12452  001134  0ECF               	subwf	 ((c:temp_convert@x)),c,w
 12453  001136  5C01               	movlw	3
 12454  001138  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12455  00113A  5802               	btfss	status,0
 12456  00113C  A0D8               	goto	u6761
 12457  00113E  EFA3  F008         	goto	u6760
 12458  001142  EFA5  F008         
 12459                           u6761:
 12460  001146                     	goto	l4753
 12461  001146  EFB6  F008         u6760:
 12462  00114A                     	
 12463                           l4749:
 12464  00114A                     		movlw	232
 12465  00114A  0EE8               	subwf	 ((c:temp_convert@x)),c,w
 12466  00114C  5C01               	movlw	3
 12467  00114E  0E03               	subwfb	((c:temp_convert@x+1)),c,w
 12468  001150  5802               	btfsc	status,0
 12469  001152  B0D8               	goto	u6771
 12470  001154  EFAE  F008         	goto	u6770
 12471  001158  EFB0  F008         
 12472                           u6771:
 12473  00115C                     	goto	l4753
 12474  00115C  EFB6  F008         u6770:
 12475  001160                     	
 12476                           l4751:
 12477  001160                     	movlw	high(027h)
 12478  001160  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12479  001162  6E04               	movlw	low(027h)
 12480  001164  0E27               	movwf	((c:temp_convert@temperature)),c
 12481  001166  6E03               	goto	l4755
 12482  001168  EF0A  F009         	line	384
 12483                           ;main.c: 384:         else {temperature=40;}
 12484                           	
 12485                           l383:
 12486  00116C                     	
 12487                           l4753:
 12488  00116C                     	movlw	high(028h)
 12489  00116C  0E00               	movwf	((c:temp_convert@temperature+1)),c
 12490  00116E  6E04               	movlw	low(028h)
 12491  001170  0E28               	movwf	((c:temp_convert@temperature)),c
 12492  001172  6E03               	goto	l4755
 12493  001174  EF0A  F009         	
 12494                           l384:
 12495  001178                     	goto	l4755
 12496  001178  EF0A  F009         	
 12497                           l382:
 12498  00117C                     	goto	l4755
 12499  00117C  EF0A  F009         	
 12500                           l380:
 12501  001180                     	goto	l4755
 12502  001180  EF0A  F009         	
 12503                           l378:
 12504  001184                     	goto	l4755
 12505  001184  EF0A  F009         	
 12506                           l376:
 12507  001188                     	goto	l4755
 12508  001188  EF0A  F009         	
 12509                           l374:
 12510  00118C                     	goto	l4755
 12511  00118C  EF0A  F009         	
 12512                           l372:
 12513  001190                     	goto	l4755
 12514  001190  EF0A  F009         	
 12515                           l370:
 12516  001194                     	goto	l4755
 12517  001194  EF0A  F009         	
 12518                           l368:
 12519  001198                     	goto	l4755
 12520  001198  EF0A  F009         	
 12521                           l366:
 12522  00119C                     	goto	l4755
 12523  00119C  EF0A  F009         	
 12524                           l364:
 12525  0011A0                     	goto	l4755
 12526  0011A0  EF0A  F009         	
 12527                           l362:
 12528  0011A4                     	goto	l4755
 12529  0011A4  EF0A  F009         	
 12530                           l360:
 12531  0011A8                     	goto	l4755
 12532  0011A8  EF0A  F009         	
 12533                           l358:
 12534  0011AC                     	goto	l4755
 12535  0011AC  EF0A  F009         	
 12536                           l356:
 12537  0011B0                     	goto	l4755
 12538  0011B0  EF0A  F009         	
 12539                           l354:
 12540  0011B4                     	goto	l4755
 12541  0011B4  EF0A  F009         	
 12542                           l352:
 12543  0011B8                     	goto	l4755
 12544  0011B8  EF0A  F009         	
 12545                           l350:
 12546  0011BC                     	goto	l4755
 12547  0011BC  EF0A  F009         	
 12548                           l348:
 12549  0011C0                     	goto	l4755
 12550  0011C0  EF0A  F009         	
 12551                           l346:
 12552  0011C4                     	goto	l4755
 12553  0011C4  EF0A  F009         	
 12554                           l344:
 12555  0011C8                     	goto	l4755
 12556  0011C8  EF0A  F009         	
 12557                           l342:
 12558  0011CC                     	goto	l4755
 12559  0011CC  EF0A  F009         	
 12560                           l340:
 12561  0011D0                     	goto	l4755
 12562  0011D0  EF0A  F009         	
 12563                           l338:
 12564  0011D4                     	goto	l4755
 12565  0011D4  EF0A  F009         	
 12566                           l336:
 12567  0011D8                     	goto	l4755
 12568  0011D8  EF0A  F009         	
 12569                           l334:
 12570  0011DC                     	goto	l4755
 12571  0011DC  EF0A  F009         	
 12572                           l332:
 12573  0011E0                     	goto	l4755
 12574  0011E0  EF0A  F009         	
 12575                           l330:
 12576  0011E4                     	goto	l4755
 12577  0011E4  EF0A  F009         	
 12578                           l328:
 12579  0011E8                     	goto	l4755
 12580  0011E8  EF0A  F009         	
 12581                           l326:
 12582  0011EC                     	goto	l4755
 12583  0011EC  EF0A  F009         	
 12584                           l324:
 12585  0011F0                     	goto	l4755
 12586  0011F0  EF0A  F009         	
 12587                           l322:
 12588  0011F4                     	goto	l4755
 12589  0011F4  EF0A  F009         	
 12590                           l320:
 12591  0011F8                     	goto	l4755
 12592  0011F8  EF0A  F009         	
 12593                           l318:
 12594  0011FC                     	goto	l4755
 12595  0011FC  EF0A  F009         	
 12596                           l316:
 12597  001200                     	goto	l4755
 12598  001200  EF0A  F009         	
 12599                           l314:
 12600  001204                     	goto	l4755
 12601  001204  EF0A  F009         	
 12602                           l312:
 12603  001208                     	goto	l4755
 12604  001208  EF0A  F009         	
 12605                           l310:
 12606  00120C                     	goto	l4755
 12607  00120C  EF0A  F009         	
 12608                           l308:
 12609  001210                     	goto	l4755
 12610  001210  EF0A  F009         	
 12611                           l306:
 12612  001214                     	line	386
 12613                           	
 12614                           l4755:
 12615  001214                     ;main.c: 386:         return temperature;
 12616                           	movff	(c:temp_convert@temperature),(c:?_temp_convert)
 12617  001214  C003  F001         	movff	(c:temp_convert@temperature+1),(c:?_temp_convert+1)
 12618  001218  C004  F002         	goto	l385
 12619  00121C  EF10  F009         	
 12620                           l4757:
 12621  001220                     	line	389
 12622                           	
 12623                           l385:
 12624  001220                     	return	;funcret
 12625  001220  0012               	opt stack 0
 12626                           GLOBAL	__end_of_temp_convert
 12627                           	__end_of_temp_convert:
 12628  001222                     	signat	_temp_convert,4218
 12629                           	global	_lcd_sol
 12630                           
 12631 ;; *************** function _lcd_sol *****************
 12632 ;; Defined at:
 12633 ;;		line 113 in file "main.c"
 12634 ;; Parameters:    Size  Location     Type
 12635 ;;  s               2   93[COMRAM] unsigned int 
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;  sol_info       16   10[BANK0 ] unsigned char [16]
 12638 ;;  value           3   26[BANK0 ] unsigned char [3]
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  1    wreg      void 
 12641 ;; Registers used:
 12642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12648 ;;      Params:         2       0       0       0       0       0       0       0       0
 12649 ;;      Locals:         0      19       0       0       0       0       0       0       0
 12650 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12651 ;;      Totals:         2      19       0       0       0       0       0       0       0
 12652 ;;Total ram usage:       21 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:    8
 12655 ;; This function calls:
 12656 ;;		_LCD_String_xy
 12657 ;;		_MSdelay
 12658 ;;		_sprintf
 12659 ;;		_strcat
 12660 ;; This function is called by:
 12661 ;;		_main
 12662 ;; This function uses a non-reentrant model
 12663 ;;
 12664                           psect	text19,class=CODE,space=0,reloc=2,group=0
 12665                           	line	113
 12666                           global __ptext19
 12667                           __ptext19:
 12668  004734                     psect	text19
 12669                           	file	"main.c"
 12670                           	line	113
 12671                           	global	__size_of_lcd_sol
 12672                           	__size_of_lcd_sol	equ	__end_of_lcd_sol-_lcd_sol
 12673  0000                     	
 12674                           _lcd_sol:
 12675  004734                     ;incstack = 0
 12676                           	opt	stack 22
 12677                           	line	116
 12678                           	
 12679                           l4969:
 12680  004734                     ;main.c: 113: void lcd_sol(unsigned int s);main.c: 115: {;main.c: 116:     char value[3]
                                 ="0000";
 12681                           	movff	(lcd_sol@F4230),(lcd_sol@value)
 12682  004734  C0E8  F07A         	movff	(lcd_sol@F4230+1),(lcd_sol@value+1)
 12683  004738  C0E9  F07B         	movff	(lcd_sol@F4230+2),(lcd_sol@value+2)
 12684  00473C  C0EA  F07C         	line	117
 12685                           	
 12686                           l4971:
 12687  004740                     ;main.c: 117:     sprintf(value,"%d",s);
 12688                           		movlw	low(lcd_sol@value)
 12689  004740  0E7A               	movwf	((c:sprintf@s)),c
 12690  004742  6E58               	movlw	high(lcd_sol@value)
 12691  004744  0E00               	movwf	((c:sprintf@s+1)),c
 12692  004746  6E59               
 12693                           		movlw	low(STR_11)
 12694  004748  0EBD               	movwf	((c:sprintf@fmt)),c
 12695  00474A  6E5A               	movlw	high(STR_11)
 12696  00474C  0E08               	movwf	((c:sprintf@fmt+1)),c
 12697  00474E  6E5B               
 12698                           	movff	(c:lcd_sol@s),0+((c:?_sprintf)+04h)
 12699  004750  C05E  F05C         	movff	(c:lcd_sol@s+1),1+((c:?_sprintf)+04h)
 12700  004754  C05F  F05D         	call	_sprintf	;wreg free
 12701  004758  EC0C  F029         	line	118
 12702                           	
 12703                           l4973:
 12704  00475C                     ;main.c: 118:     char sol_info[16]="Soil State: ";
 12705                           	lfsr	2,(lcd_sol@F4232)
 12706  00475C  EE20  F0AC         	lfsr	1,(lcd_sol@sol_info)
 12707  004760  EE10  F06A         	movlw	16-1
 12708  004764  0E0F               u7121:
 12709  004766                     	movff	plusw2,plusw1
 12710  004766  CFDB FFE3          	decf	wreg
 12711  00476A  06E8               	bc	u7121
 12712  00476C  E2FC               
 12713                           	line	119
 12714                           	
 12715                           l4975:
 12716  00476E                     ;main.c: 119:     strcat(sol_info,value);
 12717                           		movlw	low(lcd_sol@sol_info)
 12718  00476E  0E6A               	movwf	((c:strcat@dest)),c
 12719  004770  6E11               	movlw	high(lcd_sol@sol_info)
 12720  004772  0E00               	movwf	((c:strcat@dest+1)),c
 12721  004774  6E12               
 12722                           		movlw	low(lcd_sol@value)
 12723  004776  0E7A               	movwf	((c:strcat@src)),c
 12724  004778  6E13               	movlw	high(lcd_sol@value)
 12725  00477A  0E00               	movwf	((c:strcat@src+1)),c
 12726  00477C  6E14               
 12727                           	call	_strcat	;wreg free
 12728  00477E  EC89  F02B         	line	120
 12729                           	
 12730                           l4977:
 12731  004782                     ;main.c: 120:     LCD_String_xy(1,1,sol_info);
 12732                           	movlw	low(01h)
 12733  004782  0E01               	movwf	((c:LCD_String_xy@pos)),c
 12734  004784  6E0B               		movlw	low(lcd_sol@sol_info)
 12735  004786  0E6A               	movwf	((c:LCD_String_xy@msg)),c
 12736  004788  6E0C               	movlw	high(lcd_sol@sol_info)
 12737  00478A  0E00               	movwf	((c:LCD_String_xy@msg+1)),c
 12738  00478C  6E0D               
 12739                           	movlw	(01h)&0ffh
 12740  00478E  0E01               	
 12741                           	call	_LCD_String_xy
 12742  004790  ECB7  F02A         	line	122
 12743                           	
 12744                           l4979:
 12745  004794                     ;main.c: 122:     if(s<300)
 12746                           		movlw	44
 12747  004794  0E2C               	subwf	 ((c:lcd_sol@s)),c,w
 12748  004796  5C5E               	movlw	1
 12749  004798  0E01               	subwfb	((c:lcd_sol@s+1)),c,w
 12750  00479A  585F               	btfsc	status,0
 12751  00479C  B0D8               	goto	u7131
 12752  00479E  EFD3  F023         	goto	u7130
 12753  0047A2  EFD5  F023         
 12754                           u7131:
 12755  0047A6                     	goto	l4983
 12756  0047A6  EFE0  F023         u7130:
 12757  0047AA                     	line	124
 12758                           	
 12759                           l4981:
 12760  0047AA                     ;main.c: 123:     {;main.c: 124:         LCD_String_xy(2,1,"Soil is dry");
 12761                           	movlw	low(01h)
 12762  0047AA  0E01               	movwf	((c:LCD_String_xy@pos)),c
 12763  0047AC  6E0B               		movlw	low(STR_12)
 12764  0047AE  0EA3               	movwf	((c:LCD_String_xy@msg)),c
 12765  0047B0  6E0C               	movlw	high(STR_12)
 12766  0047B2  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
 12767  0047B4  6E0D               
 12768                           	movlw	(02h)&0ffh
 12769  0047B6  0E02               	
 12770                           	call	_LCD_String_xy
 12771  0047B8  ECB7  F02A         	line	125
 12772                           ;main.c: 125:     }
 12773                           	goto	l4991
 12774  0047BC  EF0E  F024         	line	126
 12775                           ;main.c: 126:     else if (s>=300 && s<700)
 12776                           	
 12777                           l211:
 12778  0047C0                     	
 12779                           l4983:
 12780  0047C0                     		movlw	44
 12781  0047C0  0E2C               	subwf	 ((c:lcd_sol@s)),c,w
 12782  0047C2  5C5E               	movlw	1
 12783  0047C4  0E01               	subwfb	((c:lcd_sol@s+1)),c,w
 12784  0047C6  585F               	btfss	status,0
 12785  0047C8  A0D8               	goto	u7141
 12786  0047CA  EFE9  F023         	goto	u7140
 12787  0047CE  EFEB  F023         
 12788                           u7141:
 12789  0047D2                     	goto	l4989
 12790  0047D2  EF01  F024         u7140:
 12791  0047D6                     	
 12792                           l4985:
 12793  0047D6                     		movlw	188
 12794  0047D6  0EBC               	subwf	 ((c:lcd_sol@s)),c,w
 12795  0047D8  5C5E               	movlw	2
 12796  0047DA  0E02               	subwfb	((c:lcd_sol@s+1)),c,w
 12797  0047DC  585F               	btfsc	status,0
 12798  0047DE  B0D8               	goto	u7151
 12799  0047E0  EFF4  F023         	goto	u7150
 12800  0047E4  EFF6  F023         
 12801                           u7151:
 12802  0047E8                     	goto	l4989
 12803  0047E8  EF01  F024         u7150:
 12804  0047EC                     	line	128
 12805                           	
 12806                           l4987:
 12807  0047EC                     ;main.c: 127:     {;main.c: 128:         LCD_String_xy(2,1,"Soil is wet");
 12808                           	movlw	low(01h)
 12809  0047EC  0E01               	movwf	((c:LCD_String_xy@pos)),c
 12810  0047EE  6E0B               		movlw	low(STR_13)
 12811  0047F0  0E97               	movwf	((c:LCD_String_xy@msg)),c
 12812  0047F2  6E0C               	movlw	high(STR_13)
 12813  0047F4  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
 12814  0047F6  6E0D               
 12815                           	movlw	(02h)&0ffh
 12816  0047F8  0E02               	
 12817                           	call	_LCD_String_xy
 12818  0047FA  ECB7  F02A         	line	129
 12819                           ;main.c: 129:     }
 12820                           	goto	l4991
 12821  0047FE  EF0E  F024         	line	131
 12822                           ;main.c: 131:     else
 12823                           	
 12824                           l213:
 12825  004802                     	line	133
 12826                           	
 12827                           l4989:
 12828  004802                     ;main.c: 132:     {;main.c: 133:         LCD_String_xy(2,1,"Soil is soaked");
 12829                           	movlw	low(01h)
 12830  004802  0E01               	movwf	((c:LCD_String_xy@pos)),c
 12831  004804  6E0B               		movlw	low(STR_14)
 12832  004806  0E1D               	movwf	((c:LCD_String_xy@msg)),c
 12833  004808  6E0C               	movlw	high(STR_14)
 12834  00480A  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
 12835  00480C  6E0D               
 12836                           	movlw	(02h)&0ffh
 12837  00480E  0E02               	
 12838                           	call	_LCD_String_xy
 12839  004810  ECB7  F02A         	goto	l4991
 12840  004814  EF0E  F024         	line	134
 12841                           ;main.c: 134:     }
 12842                           	
 12843                           l214:
 12844  004818                     	goto	l4991
 12845  004818  EF0E  F024         	
 12846                           l212:
 12847  00481C                     	line	136
 12848                           	
 12849                           l4991:
 12850  00481C                     ;main.c: 136:     MSdelay(1000);
 12851                           	movlw	high(03E8h)
 12852  00481C  0E03               	movwf	((c:MSdelay@val+1)),c
 12853  00481E  6E02               	movlw	low(03E8h)
 12854  004820  0EE8               	movwf	((c:MSdelay@val)),c
 12855  004822  6E01               	call	_MSdelay	;wreg free
 12856  004824  EC07  F028         	line	138
 12857                           	
 12858                           l215:
 12859  004828                     	return	;funcret
 12860  004828  0012               	opt stack 0
 12861                           GLOBAL	__end_of_lcd_sol
 12862                           	__end_of_lcd_sol:
 12863  00482A                     	signat	_lcd_sol,4217
 12864                           	global	_lcd_lum
 12865                           
 12866 ;; *************** function _lcd_lum *****************
 12867 ;; Defined at:
 12868 ;;		line 90 in file "main.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;  l               2   93[COMRAM] unsigned int 
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;  lum_info       16   10[BANK0 ] unsigned char [16]
 12873 ;;  value           3   26[BANK0 ] unsigned char [3]
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  1    wreg      void 
 12876 ;; Registers used:
 12877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/0
 12880 ;;		On exit  : 0/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12883 ;;      Params:         2       0       0       0       0       0       0       0       0
 12884 ;;      Locals:         0      19       0       0       0       0       0       0       0
 12885 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12886 ;;      Totals:         2      19       0       0       0       0       0       0       0
 12887 ;;Total ram usage:       21 bytes
 12888 ;; Hardware stack levels used:    1
 12889 ;; Hardware stack levels required when called:    8
 12890 ;; This function calls:
 12891 ;;		_LCD_String_xy
 12892 ;;		_MSdelay
 12893 ;;		_sprintf
 12894 ;;		_strcat
 12895 ;; This function is called by:
 12896 ;;		_main
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           psect	text20,class=CODE,space=0,reloc=2,group=0
 12900                           	line	90
 12901                           global __ptext20
 12902                           __ptext20:
 12903  004DEA                     psect	text20
 12904                           	file	"main.c"
 12905                           	line	90
 12906                           	global	__size_of_lcd_lum
 12907                           	__size_of_lcd_lum	equ	__end_of_lcd_lum-_lcd_lum
 12908  0000                     	
 12909                           _lcd_lum:
 12910  004DEA                     ;incstack = 0
 12911                           	opt	stack 22
 12912                           	line	93
 12913                           	
 12914                           l4931:
 12915  004DEA                     ;main.c: 90: void lcd_lum(unsigned int l);main.c: 91: {;main.c: 93:     char value[3]="0
                                 000";
 12916                           	movff	(lcd_lum@F4224),(lcd_lum@value)
 12917  004DEA  C0EB  F07A         	movff	(lcd_lum@F4224+1),(lcd_lum@value+1)
 12918  004DEE  C0EC  F07B         	movff	(lcd_lum@F4224+2),(lcd_lum@value+2)
 12919  004DF2  C0ED  F07C         	line	94
 12920                           	
 12921                           l4933:
 12922  004DF6                     ;main.c: 94:     sprintf(value,"%d",l);
 12923                           		movlw	low(lcd_lum@value)
 12924  004DF6  0E7A               	movwf	((c:sprintf@s)),c
 12925  004DF8  6E58               	movlw	high(lcd_lum@value)
 12926  004DFA  0E00               	movwf	((c:sprintf@s+1)),c
 12927  004DFC  6E59               
 12928                           		movlw	low(STR_8)
 12929  004DFE  0EBD               	movwf	((c:sprintf@fmt)),c
 12930  004E00  6E5A               	movlw	high(STR_8)
 12931  004E02  0E08               	movwf	((c:sprintf@fmt+1)),c
 12932  004E04  6E5B               
 12933                           	movff	(c:lcd_lum@l),0+((c:?_sprintf)+04h)
 12934  004E06  C05E  F05C         	movff	(c:lcd_lum@l+1),1+((c:?_sprintf)+04h)
 12935  004E0A  C05F  F05D         	call	_sprintf	;wreg free
 12936  004E0E  EC0C  F029         	line	95
 12937                           	
 12938                           l4935:
 12939  004E12                     ;main.c: 95:     char lum_info[16]="NightNDay: ";
 12940                           	lfsr	2,(lcd_lum@F4226)
 12941  004E12  EE20  F0BC         	lfsr	1,(lcd_lum@lum_info)
 12942  004E16  EE10  F06A         	movlw	16-1
 12943  004E1A  0E0F               u7091:
 12944  004E1C                     	movff	plusw2,plusw1
 12945  004E1C  CFDB FFE3          	decf	wreg
 12946  004E20  06E8               	bc	u7091
 12947  004E22  E2FC               
 12948                           	line	96
 12949                           	
 12950                           l4937:
 12951  004E24                     ;main.c: 96:     strcat(lum_info, value);
 12952                           		movlw	low(lcd_lum@lum_info)
 12953  004E24  0E6A               	movwf	((c:strcat@dest)),c
 12954  004E26  6E11               	movlw	high(lcd_lum@lum_info)
 12955  004E28  0E00               	movwf	((c:strcat@dest+1)),c
 12956  004E2A  6E12               
 12957                           		movlw	low(lcd_lum@value)
 12958  004E2C  0E7A               	movwf	((c:strcat@src)),c
 12959  004E2E  6E13               	movlw	high(lcd_lum@value)
 12960  004E30  0E00               	movwf	((c:strcat@src+1)),c
 12961  004E32  6E14               
 12962                           	call	_strcat	;wreg free
 12963  004E34  EC89  F02B         	line	97
 12964                           	
 12965                           l4939:
 12966  004E38                     ;main.c: 97:     LCD_String_xy(1,1,lum_info);
 12967                           	movlw	low(01h)
 12968  004E38  0E01               	movwf	((c:LCD_String_xy@pos)),c
 12969  004E3A  6E0B               		movlw	low(lcd_lum@lum_info)
 12970  004E3C  0E6A               	movwf	((c:LCD_String_xy@msg)),c
 12971  004E3E  6E0C               	movlw	high(lcd_lum@lum_info)
 12972  004E40  0E00               	movwf	((c:LCD_String_xy@msg+1)),c
 12973  004E42  6E0D               
 12974                           	movlw	(01h)&0ffh
 12975  004E44  0E01               	
 12976                           	call	_LCD_String_xy
 12977  004E46  ECB7  F02A         	line	99
 12978                           	
 12979                           l4941:
 12980  004E4A                     ;main.c: 99:     if(l<300)
 12981                           		movlw	44
 12982  004E4A  0E2C               	subwf	 ((c:lcd_lum@l)),c,w
 12983  004E4C  5C5E               	movlw	1
 12984  004E4E  0E01               	subwfb	((c:lcd_lum@l+1)),c,w
 12985  004E50  585F               	btfsc	status,0
 12986  004E52  B0D8               	goto	u7101
 12987  004E54  EF2E  F027         	goto	u7100
 12988  004E58  EF30  F027         
 12989                           u7101:
 12990  004E5C                     	goto	l4945
 12991  004E5C  EF3B  F027         u7100:
 12992  004E60                     	line	101
 12993                           	
 12994                           l4943:
 12995  004E60                     ;main.c: 100:     {;main.c: 101:         LCD_String_xy(2,1,"Il fait nuit");
 12996                           	movlw	low(01h)
 12997  004E60  0E01               	movwf	((c:LCD_String_xy@pos)),c
 12998  004E62  6E0B               		movlw	low(STR_9)
 12999  004E64  0E7E               	movwf	((c:LCD_String_xy@msg)),c
 13000  004E66  6E0C               	movlw	high(STR_9)
 13001  004E68  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
 13002  004E6A  6E0D               
 13003                           	movlw	(02h)&0ffh
 13004  004E6C  0E02               	
 13005                           	call	_LCD_String_xy
 13006  004E6E  ECB7  F02A         	line	102
 13007                           ;main.c: 102:     }
 13008                           	goto	l4947
 13009  004E72  EF46  F027         	line	103
 13010                           ;main.c: 103:     else
 13011                           	
 13012                           l202:
 13013  004E76                     	line	105
 13014                           	
 13015                           l4945:
 13016  004E76                     ;main.c: 104:     {;main.c: 105:         LCD_String_xy(2,1,"Il fait jour");
 13017                           	movlw	low(01h)
 13018  004E76  0E01               	movwf	((c:LCD_String_xy@pos)),c
 13019  004E78  6E0B               		movlw	low(STR_10)
 13020  004E7A  0E64               	movwf	((c:LCD_String_xy@msg)),c
 13021  004E7C  6E0C               	movlw	high(STR_10)
 13022  004E7E  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
 13023  004E80  6E0D               
 13024                           	movlw	(02h)&0ffh
 13025  004E82  0E02               	
 13026                           	call	_LCD_String_xy
 13027  004E84  ECB7  F02A         	goto	l4947
 13028  004E88  EF46  F027         	line	106
 13029                           ;main.c: 106:     }
 13030                           	
 13031                           l203:
 13032  004E8C                     	line	108
 13033                           	
 13034                           l4947:
 13035  004E8C                     ;main.c: 108:     MSdelay(1000);
 13036                           	movlw	high(03E8h)
 13037  004E8C  0E03               	movwf	((c:MSdelay@val+1)),c
 13038  004E8E  6E02               	movlw	low(03E8h)
 13039  004E90  0EE8               	movwf	((c:MSdelay@val)),c
 13040  004E92  6E01               	call	_MSdelay	;wreg free
 13041  004E94  EC07  F028         	line	110
 13042                           	
 13043                           l204:
 13044  004E98                     	return	;funcret
 13045  004E98  0012               	opt stack 0
 13046                           GLOBAL	__end_of_lcd_lum
 13047                           	__end_of_lcd_lum:
 13048  004E9A                     	signat	_lcd_lum,4217
 13049                           	global	_lcd_humid
 13050                           
 13051 ;; *************** function _lcd_humid *****************
 13052 ;; Defined at:
 13053 ;;		line 141 in file "main.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  h               2   93[COMRAM] unsigned int 
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;  humid_info     16   10[BANK0 ] unsigned char [16]
 13058 ;;  humidity        3   29[BANK0 ] unsigned char [3]
 13059 ;;  value           3   26[BANK0 ] unsigned char [3]
 13060 ;;  humid           2   32[BANK0 ] int 
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13070 ;;      Params:         2       0       0       0       0       0       0       0       0
 13071 ;;      Locals:         0      24       0       0       0       0       0       0       0
 13072 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13073 ;;      Totals:         2      24       0       0       0       0       0       0       0
 13074 ;;Total ram usage:       26 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; Hardware stack levels required when called:    8
 13077 ;; This function calls:
 13078 ;;		_LCD_String_xy
 13079 ;;		_MSdelay
 13080 ;;		_humid_convert
 13081 ;;		_sprintf
 13082 ;;		_strcat
 13083 ;; This function is called by:
 13084 ;;		_main
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           psect	text21,class=CODE,space=0,reloc=2,group=0
 13088                           	line	141
 13089                           global __ptext21
 13090                           __ptext21:
 13091  004B9A                     psect	text21
 13092                           	file	"main.c"
 13093                           	line	141
 13094                           	global	__size_of_lcd_humid
 13095                           	__size_of_lcd_humid	equ	__end_of_lcd_humid-_lcd_humid
 13096  0000                     	
 13097                           _lcd_humid:
 13098  004B9A                     ;incstack = 0
 13099                           	opt	stack 22
 13100                           	line	143
 13101                           	
 13102                           l5013:
 13103  004B9A                     ;main.c: 141: void lcd_humid(unsigned int h);main.c: 142: {;main.c: 143:     char value[
                                 3]="0000";
 13104                           	movff	(lcd_humid@F4236),(lcd_humid@value)
 13105  004B9A  C0E5  F07A         	movff	(lcd_humid@F4236+1),(lcd_humid@value+1)
 13106  004B9E  C0E6  F07B         	movff	(lcd_humid@F4236+2),(lcd_humid@value+2)
 13107  004BA2  C0E7  F07C         	line	153
 13108                           	
 13109                           l5015:
 13110  004BA6                     ;main.c: 153:     int humid=humid_convert(h);
 13111                           	movff	(c:lcd_humid@h),(c:humid_convert@x)
 13112  004BA6  C05E  F001         	movff	(c:lcd_humid@h+1),(c:humid_convert@x+1)
 13113  004BAA  C05F  F002         	call	_humid_convert	;wreg free
 13114  004BAE  ECEF  F00F         	movff	0+?_humid_convert,(lcd_humid@humid)
 13115  004BB2  C001  F080         	movff	1+?_humid_convert,(lcd_humid@humid+1)
 13116  004BB6  C002  F081         	line	154
 13117                           	
 13118                           l5017:
 13119  004BBA                     ;main.c: 154:     char humidity[3]="000";
 13120                           	movff	(lcd_humid@F4239),(lcd_humid@humidity)
 13121  004BBA  C0E2  F07D         	movff	(lcd_humid@F4239+1),(lcd_humid@humidity+1)
 13122  004BBE  C0E3  F07E         	movff	(lcd_humid@F4239+2),(lcd_humid@humidity+2)
 13123  004BC2  C0E4  F07F         	line	155
 13124                           	
 13125                           l5019:
 13126  004BC6                     ;main.c: 155:     sprintf(humidity,"%d",humid);
 13127                           		movlw	low(lcd_humid@humidity)
 13128  004BC6  0E7D               	movwf	((c:sprintf@s)),c
 13129  004BC8  6E58               	movlw	high(lcd_humid@humidity)
 13130  004BCA  0E00               	movwf	((c:sprintf@s+1)),c
 13131  004BCC  6E59               
 13132                           		movlw	low(STR_15)
 13133  004BCE  0EBD               	movwf	((c:sprintf@fmt)),c
 13134  004BD0  6E5A               	movlw	high(STR_15)
 13135  004BD2  0E08               	movwf	((c:sprintf@fmt+1)),c
 13136  004BD4  6E5B               
 13137                           	movff	(lcd_humid@humid),0+((c:?_sprintf)+04h)
 13138  004BD6  C080  F05C         	movff	(lcd_humid@humid+1),1+((c:?_sprintf)+04h)
 13139  004BDA  C081  F05D         	call	_sprintf	;wreg free
 13140  004BDE  EC0C  F029         	line	156
 13141                           	
 13142                           l5021:
 13143  004BE2                     ;main.c: 156:     char humid_info[16]="Humidity %: ";
 13144                           	lfsr	2,(lcd_humid@F4241)
 13145  004BE2  EE21  F030         	lfsr	1,(lcd_humid@humid_info)
 13146  004BE6  EE10  F06A         	movlw	16-1
 13147  004BEA  0E0F               u7171:
 13148  004BEC                     	movff	plusw2,plusw1
 13149  004BEC  CFDB FFE3          	decf	wreg
 13150  004BF0  06E8               	bc	u7171
 13151  004BF2  E2FC               
 13152                           	line	157
 13153                           	
 13154                           l5023:
 13155  004BF4                     ;main.c: 157:     strcat(humid_info,humidity);
 13156                           		movlw	low(lcd_humid@humid_info)
 13157  004BF4  0E6A               	movwf	((c:strcat@dest)),c
 13158  004BF6  6E11               	movlw	high(lcd_humid@humid_info)
 13159  004BF8  0E00               	movwf	((c:strcat@dest+1)),c
 13160  004BFA  6E12               
 13161                           		movlw	low(lcd_humid@humidity)
 13162  004BFC  0E7D               	movwf	((c:strcat@src)),c
 13163  004BFE  6E13               	movlw	high(lcd_humid@humidity)
 13164  004C00  0E00               	movwf	((c:strcat@src+1)),c
 13165  004C02  6E14               
 13166                           	call	_strcat	;wreg free
 13167  004C04  EC89  F02B         	line	159
 13168                           	
 13169                           l5025:
 13170  004C08                     ;main.c: 159:     LCD_String_xy(1,1,humid_info);
 13171                           	movlw	low(01h)
 13172  004C08  0E01               	movwf	((c:LCD_String_xy@pos)),c
 13173  004C0A  6E0B               		movlw	low(lcd_humid@humid_info)
 13174  004C0C  0E6A               	movwf	((c:LCD_String_xy@msg)),c
 13175  004C0E  6E0C               	movlw	high(lcd_humid@humid_info)
 13176  004C10  0E00               	movwf	((c:LCD_String_xy@msg+1)),c
 13177  004C12  6E0D               
 13178                           	movlw	(01h)&0ffh
 13179  004C14  0E01               	
 13180                           	call	_LCD_String_xy
 13181  004C16  ECB7  F02A         	line	161
 13182                           	
 13183                           l5027:
 13184  004C1A                     ;main.c: 161:     if(h<500)
 13185                           		movlw	244
 13186  004C1A  0EF4               	subwf	 ((c:lcd_humid@h)),c,w
 13187  004C1C  5C5E               	movlw	1
 13188  004C1E  0E01               	subwfb	((c:lcd_humid@h+1)),c,w
 13189  004C20  585F               	btfsc	status,0
 13190  004C22  B0D8               	goto	u7181
 13191  004C24  EF16  F026         	goto	u7180
 13192  004C28  EF18  F026         
 13193                           u7181:
 13194  004C2C                     	goto	l5031
 13195  004C2C  EF23  F026         u7180:
 13196  004C30                     	line	163
 13197                           	
 13198                           l5029:
 13199  004C30                     ;main.c: 162:     {;main.c: 163:         LCD_String_xy(2,1,"Il fait sec");
 13200                           	movlw	low(01h)
 13201  004C30  0E01               	movwf	((c:LCD_String_xy@pos)),c
 13202  004C32  6E0B               		movlw	low(STR_16)
 13203  004C34  0E8B               	movwf	((c:LCD_String_xy@msg)),c
 13204  004C36  6E0C               	movlw	high(STR_16)
 13205  004C38  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
 13206  004C3A  6E0D               
 13207                           	movlw	(02h)&0ffh
 13208  004C3C  0E02               	
 13209                           	call	_LCD_String_xy
 13210  004C3E  ECB7  F02A         	line	164
 13211                           ;main.c: 164:     }
 13212                           	goto	l5033
 13213  004C42  EF2E  F026         	line	165
 13214                           ;main.c: 165:     else
 13215                           	
 13216                           l224:
 13217  004C46                     	line	167
 13218                           	
 13219                           l5031:
 13220  004C46                     ;main.c: 166:     {;main.c: 167:         LCD_String_xy(2,1,"Il fait humide");
 13221                           	movlw	low(01h)
 13222  004C46  0E01               	movwf	((c:LCD_String_xy@pos)),c
 13223  004C48  6E0B               		movlw	low(STR_17)
 13224  004C4A  0E2C               	movwf	((c:LCD_String_xy@msg)),c
 13225  004C4C  6E0C               	movlw	high(STR_17)
 13226  004C4E  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
 13227  004C50  6E0D               
 13228                           	movlw	(02h)&0ffh
 13229  004C52  0E02               	
 13230                           	call	_LCD_String_xy
 13231  004C54  ECB7  F02A         	goto	l5033
 13232  004C58  EF2E  F026         	line	168
 13233                           ;main.c: 168:     }
 13234                           	
 13235                           l225:
 13236  004C5C                     	line	170
 13237                           	
 13238                           l5033:
 13239  004C5C                     ;main.c: 170:     MSdelay(1000);
 13240                           	movlw	high(03E8h)
 13241  004C5C  0E03               	movwf	((c:MSdelay@val+1)),c
 13242  004C5E  6E02               	movlw	low(03E8h)
 13243  004C60  0EE8               	movwf	((c:MSdelay@val)),c
 13244  004C62  6E01               	call	_MSdelay	;wreg free
 13245  004C64  EC07  F028         	line	172
 13246                           	
 13247                           l226:
 13248  004C68                     	return	;funcret
 13249  004C68  0012               	opt stack 0
 13250                           GLOBAL	__end_of_lcd_humid
 13251                           	__end_of_lcd_humid:
 13252  004C6A                     	signat	_lcd_humid,4217
 13253                           	global	_strcat
 13254                           
 13255 ;; *************** function _strcat *****************
 13256 ;; Defined at:
 13257 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  dest            2   16[COMRAM] PTR unsigned char 
 13260 ;;		 -> lcd_temp@temp_info(16), lcd_humid@humid_info(16), lcd_sol@sol_info(16), lcd_lum@lum_info(16), 
 13261 ;;		 -> lcd_arrosage@data(16), 
 13262 ;;  src             2   18[COMRAM] PTR const unsigned char 
 13263 ;;		 -> lcd_temp@temperature(3), lcd_humid@humidity(3), lcd_sol@value(3), lcd_lum@value(3), 
 13264 ;;		 -> STR_5(2), lcd_arrosage@time2(2), STR_3(7), STR_2(4), 
 13265 ;;		 -> STR_1(3), 
 13266 ;; Auto vars:     Size  Location     Type
 13267 ;;		None
 13268 ;; Return value:  Size  Location     Type
 13269 ;;                  2   16[COMRAM] PTR unsigned char 
 13270 ;; Registers used:
 13271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13272 ;; Tracked objects:
 13273 ;;		On entry : 0/0
 13274 ;;		On exit  : 0/0
 13275 ;;		Unchanged: 0/0
 13276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13277 ;;      Params:         4       0       0       0       0       0       0       0       0
 13278 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13280 ;;      Totals:         4       0       0       0       0       0       0       0       0
 13281 ;;Total ram usage:        4 bytes
 13282 ;; Hardware stack levels used:    1
 13283 ;; Hardware stack levels required when called:    1
 13284 ;; This function calls:
 13285 ;;		_strcpy
 13286 ;;		_strlen
 13287 ;; This function is called by:
 13288 ;;		_lcd_arrosage
 13289 ;;		_lcd_lum
 13290 ;;		_lcd_sol
 13291 ;;		_lcd_humid
 13292 ;;		_lcd_temp
 13293 ;; This function uses a non-reentrant model
 13294 ;;
 13295                           psect	text22,class=CODE,space=0,reloc=2,group=2
 13296                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 13297                           	line	3
 13298                           global __ptext22
 13299                           __ptext22:
 13300  005712                     psect	text22
 13301                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 13302                           	line	3
 13303                           	global	__size_of_strcat
 13304                           	__size_of_strcat	equ	__end_of_strcat-_strcat
 13305  0000                     	
 13306                           _strcat:
 13307  005712                     ;incstack = 0
 13308                           	opt	stack 27
 13309                           	line	5
 13310                           	
 13311                           l4181:
 13312  005712                     		movff	(c:strcat@dest),(c:strlen@s)
 13313  005712  C011  F001         	movff	(c:strcat@dest+1),(c:strlen@s+1)
 13314  005716  C012  F002         
 13315                           	call	_strlen	;wreg free
 13316  00571A  EC1C  F02A         	movf	(0+?_strlen),c,w
 13317  00571E  5001               	addwf	((c:strcat@dest)),c,w
 13318  005720  2411               	movwf	((c:strcpy@dest)),c
 13319  005722  6E07               	movf	(1+?_strlen),c,w
 13320  005724  5002               	addwfc	((c:strcat@dest+1)),c,w
 13321  005726  2012               	movwf	1+((c:strcpy@dest)),c
 13322  005728  6E08               		movff	(c:strcat@src),(c:strcpy@src)
 13323  00572A  C013  F009         	movff	(c:strcat@src+1),(c:strcpy@src+1)
 13324  00572E  C014  F00A         
 13325                           	call	_strcpy	;wreg free
 13326  005732  EC41  F028         	goto	l1235
 13327  005736  EF9D  F02B         	line	6
 13328                           	
 13329                           l4183:
 13330  00573A                     	line	7
 13331                           ;	Return value of _strcat is never used
 13332                           	
 13333                           l1235:
 13334  00573A                     	return	;funcret
 13335  00573A  0012               	opt stack 0
 13336                           GLOBAL	__end_of_strcat
 13337                           	__end_of_strcat:
 13338  00573C                     	signat	_strcat,8314
 13339                           	global	_strcpy
 13340                           
 13341 ;; *************** function _strcpy *****************
 13342 ;; Defined at:
 13343 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;  dest            2    6[COMRAM] PTR unsigned char 
 13346 ;;		 -> lcd_temp@temp_info(16), lcd_humid@humid_info(16), lcd_sol@sol_info(16), lcd_lum@lum_info(16), 
 13347 ;;		 -> lcd_arrosage@data(16), 
 13348 ;;  src             2    8[COMRAM] PTR const unsigned char 
 13349 ;;		 -> lcd_temp@temperature(3), lcd_humid@humidity(3), lcd_sol@value(3), lcd_lum@value(3), 
 13350 ;;		 -> STR_5(2), lcd_arrosage@time2(2), STR_3(7), STR_2(4), 
 13351 ;;		 -> STR_1(3), 
 13352 ;; Auto vars:     Size  Location     Type
 13353 ;;  d               2   14[COMRAM] PTR unsigned char 
 13354 ;;		 -> lcd_temp@temp_info(16), lcd_humid@humid_info(16), lcd_sol@sol_info(16), lcd_lum@lum_info(16), 
 13355 ;;		 -> lcd_arrosage@data(16), 
 13356 ;;  s               2   12[COMRAM] PTR const unsigned char 
 13357 ;;		 -> lcd_temp@temperature(3), lcd_humid@humidity(3), lcd_sol@value(3), lcd_lum@value(3), 
 13358 ;;		 -> STR_5(2), lcd_arrosage@time2(2), STR_3(7), STR_2(4), 
 13359 ;;		 -> STR_1(3), 
 13360 ;; Return value:  Size  Location     Type
 13361 ;;                  2    6[COMRAM] PTR unsigned char 
 13362 ;; Registers used:
 13363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13364 ;; Tracked objects:
 13365 ;;		On entry : 0/0
 13366 ;;		On exit  : 0/0
 13367 ;;		Unchanged: 0/0
 13368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13369 ;;      Params:         4       0       0       0       0       0       0       0       0
 13370 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13371 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13372 ;;      Totals:        10       0       0       0       0       0       0       0       0
 13373 ;;Total ram usage:       10 bytes
 13374 ;; Hardware stack levels used:    1
 13375 ;; This function calls:
 13376 ;;		Nothing
 13377 ;; This function is called by:
 13378 ;;		_strcat
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           psect	text23,class=CODE,space=0,reloc=2,group=2
 13382                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 13383                           	line	7
 13384                           global __ptext23
 13385                           __ptext23:
 13386  005082                     psect	text23
 13387                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 13388                           	line	7
 13389                           	global	__size_of_strcpy
 13390                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
 13391  0000                     	
 13392                           _strcpy:
 13393  005082                     ;incstack = 0
 13394                           	opt	stack 27
 13395                           	line	13
 13396                           	
 13397                           l4103:
 13398  005082                     		movff	(c:strcpy@src),(c:strcpy@s)
 13399  005082  C009  F00D         	movff	(c:strcpy@src+1),(c:strcpy@s+1)
 13400  005086  C00A  F00E         
 13401                           	line	14
 13402                           		movff	(c:strcpy@dest),(c:strcpy@d)
 13403  00508A  C007  F00F         	movff	(c:strcpy@dest+1),(c:strcpy@d+1)
 13404  00508E  C008  F010         
 13405                           	line	15
 13406                           	goto	l4105
 13407  005092  EF4D  F028         	
 13408                           l1239:
 13409  005096                     	goto	l4105
 13410  005096  EF4D  F028         	
 13411                           l1238:
 13412  00509A                     	
 13413                           l4105:
 13414  00509A                     	movf	((c:strcpy@s)),c,w
 13415  00509A  500D               	movwf	(??_strcpy+0+0)&0ffh,c
 13416  00509C  6E0B               	movf	((c:strcpy@s+1)),c,w
 13417  00509E  500E               	movwf	1+(??_strcpy+0+0)&0ffh,c
 13418  0050A0  6E0C               	infsnz	((c:strcpy@s)),c
 13419  0050A2  4A0D               	incf	((c:strcpy@s+1)),c
 13420  0050A4  2A0E               	movff	??_strcpy+0+0,tblptrl
 13421  0050A6  C00B  FFF6         	movff	??_strcpy+0+1,tblptrh
 13422  0050AA  C00C  FFF7         	clrf	tblptru
 13423  0050AE  6AF8               	
 13424                           	movff	(c:strcpy@d),fsr2l
 13425  0050B0  C00F  FFD9         	movff	(c:strcpy@d+1),fsr2h
 13426  0050B4  C010  FFDA         	infsnz	((c:strcpy@d)),c
 13427  0050B8  4A0F               	incf	((c:strcpy@d+1)),c
 13428  0050BA  2A10               	movlw	high __ramtop-1
 13429  0050BC  0E07               	cpfsgt	tblptrh
 13430  0050BE  64F7               	bra	u5167
 13431  0050C0  D003               	tblrd	*
 13432  0050C2  0008               	
 13433                           	movf	tablat,w
 13434  0050C4  50F5               	bra	u5160
 13435  0050C6  D005               u5167:
 13436  0050C8                     	movff	tblptrl,fsr1l
 13437  0050C8  CFF6 FFE1          	movff	tblptrh,fsr1h
 13438  0050CC  CFF7 FFE2          	movf	indf1,w
 13439  0050D0  50E7               u5160:
 13440  0050D2                     	movwf	indf2
 13441  0050D2  6EDF               	movf	indf2,w
 13442  0050D4  50DF               	btfss	status,2
 13443  0050D6  A4D8               	goto	u5171
 13444  0050D8  EF70  F028         	goto	u5170
 13445  0050DC  EF72  F028         u5171:
 13446  0050E0                     	goto	l4105
 13447  0050E0  EF4D  F028         u5170:
 13448  0050E4                     	goto	l1241
 13449  0050E4  EF74  F028         	
 13450                           l1240:
 13451  0050E8                     	line	18
 13452                           ;	Return value of _strcpy is never used
 13453                           	
 13454                           l1241:
 13455  0050E8                     	return	;funcret
 13456  0050E8  0012               	opt stack 0
 13457                           GLOBAL	__end_of_strcpy
 13458                           	__end_of_strcpy:
 13459  0050EA                     	signat	_strcpy,8314
 13460                           	global	_sprintf
 13461                           
 13462 ;; *************** function _sprintf *****************
 13463 ;; Defined at:
 13464 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  s               2   87[COMRAM] PTR unsigned char 
 13467 ;;		 -> lcd_temp@temperature(3), lcd_humid@humidity(3), lcd_sol@value(3), lcd_lum@value(3), 
 13468 ;;		 -> lcd_arrosage@time2(2), 
 13469 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
 13470 ;;		 -> STR_18(3), STR_15(3), STR_11(3), STR_8(3), 
 13471 ;;		 -> STR_4(3), 
 13472 ;; Auto vars:     Size  Location     Type
 13473 ;;  f               6    4[BANK0 ] struct _IO_FILE
 13474 ;;  ap              2    2[BANK0 ] PTR void [1]
 13475 ;;		 -> ?_sprintf(2), 
 13476 ;;  ret             2    0[BANK0 ] int 
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  2   87[COMRAM] int 
 13479 ;; Registers used:
 13480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13486 ;;      Params:         6       0       0       0       0       0       0       0       0
 13487 ;;      Locals:         0      10       0       0       0       0       0       0       0
 13488 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13489 ;;      Totals:         6      10       0       0       0       0       0       0       0
 13490 ;;Total ram usage:       16 bytes
 13491 ;; Hardware stack levels used:    1
 13492 ;; Hardware stack levels required when called:    7
 13493 ;; This function calls:
 13494 ;;		_vfprintf
 13495 ;; This function is called by:
 13496 ;;		_lcd_arrosage
 13497 ;;		_lcd_lum
 13498 ;;		_lcd_sol
 13499 ;;		_lcd_humid
 13500 ;;		_lcd_temp
 13501 ;; This function uses a non-reentrant model
 13502 ;;
 13503                           psect	text24,class=CODE,space=0,reloc=2,group=2
 13504                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
 13505                           	line	9
 13506                           global __ptext24
 13507                           __ptext24:
 13508  005218                     psect	text24
 13509                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
 13510                           	line	9
 13511                           	global	__size_of_sprintf
 13512                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
 13513  0000                     	
 13514                           _sprintf:
 13515  005218                     ;incstack = 0
 13516                           	opt	stack 21
 13517                           	line	15
 13518                           	
 13519                           l4185:
 13520  005218                     		movlw	low(?_sprintf+04h)
 13521  005218  0E5C               	movlb	0	; () banked
 13522  00521A  0100               	movwf	((sprintf@ap))&0ffh
 13523  00521C  6F62               	movlw	high(?_sprintf+04h)
 13524  00521E  0E00               	movwf	((sprintf@ap+1))&0ffh
 13525  005220  6F63               
 13526                           	line	16
 13527                           		movff	(c:sprintf@s),(sprintf@f)
 13528  005222  C058  F064         	movff	(c:sprintf@s+1),(sprintf@f+1)
 13529  005226  C059  F065         
 13530                           	line	17
 13531                           	
 13532                           l4187:; BSR set to: 0
 13533  00522A                     
 13534                           	movlw	high(0)
 13535  00522A  0E00               	movwf	(1+(sprintf@f+02h))&0ffh
 13536  00522C  6F67               	movlw	low(0)
 13537  00522E  0E00               	movwf	(0+(sprintf@f+02h))&0ffh
 13538  005230  6F66               	line	18
 13539                           	
 13540                           l4189:; BSR set to: 0
 13541  005232                     
 13542                           	movlw	high(0)
 13543  005232  0E00               	movwf	(1+(sprintf@f+04h))&0ffh
 13544  005234  6F69               	movlw	low(0)
 13545  005236  0E00               	movwf	(0+(sprintf@f+04h))&0ffh
 13546  005238  6F68               	line	19
 13547                           	
 13548                           l4191:; BSR set to: 0
 13549  00523A                     
 13550                           		movlw	low(sprintf@f)
 13551  00523A  0E64               	movwf	((c:vfprintf@fp)),c
 13552  00523C  6E50               	movlw	high(sprintf@f)
 13553  00523E  0E00               	movwf	((c:vfprintf@fp+1)),c
 13554  005240  6E51               
 13555                           		movff	(c:sprintf@fmt),(c:vfprintf@fmt)
 13556  005242  C05A  F052         	movff	(c:sprintf@fmt+1),(c:vfprintf@fmt+1)
 13557  005246  C05B  F053         
 13558                           		movlw	low(sprintf@ap)
 13559  00524A  0E62               	movwf	((c:vfprintf@ap)),c
 13560  00524C  6E54               	movlw	high(sprintf@ap)
 13561  00524E  0E00               	movwf	((c:vfprintf@ap+1)),c
 13562  005250  6E55               
 13563                           	call	_vfprintf	;wreg free
 13564  005252  EC75  F028         	movff	0+?_vfprintf,(sprintf@ret)
 13565  005256  C050  F060         	movff	1+?_vfprintf,(sprintf@ret+1)
 13566  00525A  C051  F061         	line	20
 13567                           	
 13568                           l4193:
 13569  00525E                     	movlb	0	; () banked
 13570  00525E  0100               	movf	(0+(sprintf@f+02h))&0ffh,w
 13571  005260  5166               	addwf	((c:sprintf@s)),c,w
 13572  005262  2458               	movwf	c:fsr2l
 13573  005264  6ED9               	movf	(1+(sprintf@f+02h))&0ffh,w
 13574  005266  5167               	addwfc	((c:sprintf@s+1)),c,w
 13575  005268  2059               	movwf	1+c:fsr2l
 13576  00526A  6EDA               	movlw	low(0)
 13577  00526C  0E00               	movwf	indf2
 13578  00526E  6EDF               	goto	l1210
 13579  005270  EF3A  F029         	line	22
 13580                           	
 13581                           l4195:; BSR set to: 0
 13582  005274                     
 13583                           	line	23
 13584                           ;	Return value of _sprintf is never used
 13585                           	
 13586                           l1210:; BSR set to: 0
 13587  005274                     
 13588                           	return	;funcret
 13589  005274  0012               	opt stack 0
 13590                           GLOBAL	__end_of_sprintf
 13591                           	__end_of_sprintf:
 13592  005276                     	signat	_sprintf,4698
 13593                           	global	_vfprintf
 13594                           
 13595 ;; *************** function _vfprintf *****************
 13596 ;; Defined at:
 13597 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 13598 ;; Parameters:    Size  Location     Type
 13599 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 13600 ;;		 -> sprintf@f(6), 
 13601 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 13602 ;;		 -> STR_18(3), STR_15(3), STR_11(3), STR_8(3), 
 13603 ;;		 -> STR_4(3), 
 13604 ;;  ap              2   83[COMRAM] PTR PTR void 
 13605 ;;		 -> sprintf@ap(2), 
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 13608 ;;		 -> STR_18(3), STR_15(3), STR_11(3), STR_8(3), 
 13609 ;;		 -> STR_4(3), 
 13610 ;; Return value:  Size  Location     Type
 13611 ;;                  2   79[COMRAM] int 
 13612 ;; Registers used:
 13613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13619 ;;      Params:         6       0       0       0       0       0       0       0       0
 13620 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13621 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13622 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13623 ;;Total ram usage:        8 bytes
 13624 ;; Hardware stack levels used:    1
 13625 ;; Hardware stack levels required when called:    6
 13626 ;; This function calls:
 13627 ;;		_vfpfcnvrt
 13628 ;; This function is called by:
 13629 ;;		_sprintf
 13630 ;; This function uses a non-reentrant model
 13631 ;;
 13632                           psect	text25,class=CODE,space=0,reloc=2,group=0
 13633                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 13634                           	line	1368
 13635                           global __ptext25
 13636                           __ptext25:
 13637  0050EA                     psect	text25
 13638                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 13639                           	line	1368
 13640                           	global	__size_of_vfprintf
 13641                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
 13642  0000                     	
 13643                           _vfprintf:; BSR set to: 0
 13644  0050EA                     
 13645                           ;incstack = 0
 13646                           	opt	stack 21
 13647                           	line	1373
 13648                           	
 13649                           l3505:
 13650  0050EA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 13651                           		movff	(c:vfprintf@fmt),(c:vfprintf@cfmt)
 13652  0050EA  C052  F056         	movff	(c:vfprintf@fmt+1),(c:vfprintf@cfmt+1)
 13653  0050EE  C053  F057         
 13654                           	line	1374
 13655                           	
 13656                           l3507:
 13657  0050F2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
 13658                           	movlw	high(0)
 13659  0050F2  0E00               	movlb	0	; () banked
 13660  0050F4  0100               	movwf	((_nout+1))&0ffh
 13661  0050F6  6FF3               	movlw	low(0)
 13662  0050F8  0E00               	movwf	((_nout))&0ffh
 13663  0050FA  6FF2               	line	1375
 13664                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
 13665                           	goto	l3511
 13666  0050FC  EF95  F028         	
 13667                           l455:; BSR set to: 0
 13668  005100                     
 13669                           	line	1376
 13670                           	
 13671                           l3509:; BSR set to: 0
 13672  005100                     
 13673                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
 13674                           		movff	(c:vfprintf@fp),(c:vfpfcnvrt@fp)
 13675  005100  C050  F040         	movff	(c:vfprintf@fp+1),(c:vfpfcnvrt@fp+1)
 13676  005104  C051  F041         
 13677                           		movlw	low(vfprintf@cfmt)
 13678  005108  0E56               	movwf	((c:vfpfcnvrt@fmt)),c
 13679  00510A  6E42               	movlw	high(vfprintf@cfmt)
 13680  00510C  0E00               	movwf	((c:vfpfcnvrt@fmt+1)),c
 13681  00510E  6E43               
 13682                           		movff	(c:vfprintf@ap),(c:vfpfcnvrt@ap)
 13683  005110  C054  F044         	movff	(c:vfprintf@ap+1),(c:vfpfcnvrt@ap+1)
 13684  005114  C055  F045         
 13685                           	call	_vfpfcnvrt	;wreg free
 13686  005118  ECDE  F01D         	movf	(0+?_vfpfcnvrt),c,w
 13687  00511C  5040               	movlb	0	; () banked
 13688  00511E  0100               	addwf	((_nout))&0ffh
 13689  005120  27F2               	movf	(1+?_vfpfcnvrt),c,w
 13690  005122  5041               	addwfc	((_nout+1))&0ffh
 13691  005124  23F3               
 13692                           	goto	l3511
 13693  005126  EF95  F028         	line	1377
 13694                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
 13695                           	
 13696                           l454:; BSR set to: 0
 13697  00512A                     
 13698                           	line	1375
 13699                           	
 13700                           l3511:; BSR set to: 0
 13701  00512A                     
 13702                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
 13703                           	movff	(c:vfprintf@cfmt),tblptrl
 13704  00512A  C056  FFF6         	movff	(c:vfprintf@cfmt+1),tblptrh
 13705  00512E  C057  FFF7         	if	0	;tblptru may be non-zero
 13706  005132                     	clrf	tblptru
 13708  005132                     	if	0	;tblptru may be non-zero
 13709  005132                     	global __mediumconst
 13710                           movlw	low highword(__mediumconst)
 13713  005132                     	tblrd	*
 13714  005132  0008               	
 13715                           	movf	tablat,w
 13716  005134  50F5               	iorlw	0
 13717  005136  0900               	btfss	status,2
 13718  005138  A4D8               	goto	u4111
 13719  00513A  EFA1  F028         	goto	u4110
 13720  00513E  EFA3  F028         u4111:
 13721  005142                     	goto	l3509
 13722  005142  EF80  F028         u4110:
 13723  005146                     	
 13724                           l456:; BSR set to: 0
 13725  005146                     
 13726                           	line	1378
 13727                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
 13728                           	movff	(_nout),(c:?_vfprintf)
 13729  005146  C0F2  F050         	movff	(_nout+1),(c:?_vfprintf+1)
 13730  00514A  C0F3  F051         	line	1382
 13731                           	
 13732                           l457:; BSR set to: 0
 13733  00514E                     
 13734                           	return	;funcret
 13735  00514E  0012               	opt stack 0
 13736                           GLOBAL	__end_of_vfprintf
 13737                           	__end_of_vfprintf:
 13738  005150                     	signat	_vfprintf,12410
 13739                           	global	_vfpfcnvrt
 13740                           
 13741 ;; *************** function _vfpfcnvrt *****************
 13742 ;; Defined at:
 13743 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 13744 ;; Parameters:    Size  Location     Type
 13745 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 13746 ;;		 -> sprintf@f(6), 
 13747 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 13748 ;;		 -> vfprintf@cfmt(2), 
 13749 ;;  ap              2   67[COMRAM] PTR PTR void 
 13750 ;;		 -> sprintf@ap(2), 
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;  ll              8   71[COMRAM] long long 
 13753 ;;  llu             8    0        unsigned long long 
 13754 ;;  f               4    0        unsigned long long 
 13755 ;;  vp              3    0        PTR void 
 13756 ;;  ct              3    0        unsigned char [3]
 13757 ;;  cp              3    0        PTR unsigned char 
 13758 ;;  i               2    0        int 
 13759 ;;  done            2    0        int 
 13760 ;;  c               1    0        unsigned char 
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  2   63[COMRAM] int 
 13763 ;; Registers used:
 13764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13765 ;; Tracked objects:
 13766 ;;		On entry : 0/0
 13767 ;;		On exit  : 0/0
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13770 ;;      Params:         6       0       0       0       0       0       0       0       0
 13771 ;;      Locals:         8       0       0       0       0       0       0       0       0
 13772 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13773 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13774 ;;Total ram usage:       16 bytes
 13775 ;; Hardware stack levels used:    1
 13776 ;; Hardware stack levels required when called:    5
 13777 ;; This function calls:
 13778 ;;		_dtoa
 13779 ;;		_fputc
 13780 ;; This function is called by:
 13781 ;;		_vfprintf
 13782 ;; This function uses a non-reentrant model
 13783 ;;
 13784                           psect	text26,class=CODE,space=0,reloc=2,group=0
 13785                           	line	670
 13786                           global __ptext26
 13787                           __ptext26:
 13788  003BBC                     psect	text26
 13789                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 13790                           	line	670
 13791                           	global	__size_of_vfpfcnvrt
 13792                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
 13793  0000                     	
 13794                           _vfpfcnvrt:; BSR set to: 0
 13795  003BBC                     
 13796                           ;incstack = 0
 13797                           	opt	stack 21
 13798                           	line	680
 13799                           	
 13800                           l3435:
 13801  003BBC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 13802                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 13803  003BBC  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 13804  003BC0  C043  FFDA         	movff	postinc2,tblptrl
 13805  003BC4  CFDE FFF6          	movff	postdec2,tblptrh
 13806  003BC8  CFDD FFF7          	if	0	;tblptru may be non-zero
 13807  003BCC                     	clrf	tblptru
 13809  003BCC                     	if	0	;tblptru may be non-zero
 13810  003BCC                     	global __mediumconst
 13811                           movlw	low highword(__mediumconst)
 13814  003BCC                     	tblrd	*
 13815  003BCC  0008               	
 13816                           	movf	tablat,w
 13817  003BCE  50F5               	xorlw	025h
 13818  003BD0  0A25               	btfss	status,2
 13819  003BD2  A4D8               	goto	u4041
 13820  003BD4  EFEE  F01D         	goto	u4040
 13821  003BD8  EFF0  F01D         u4041:
 13822  003BDC                     	goto	l3469
 13823  003BDC  EFA4  F01E         u4040:
 13824  003BE0                     	line	681
 13825                           	
 13826                           l3437:
 13827  003BE0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
 13828                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 13829  003BE0  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 13830  003BE4  C043  FFDA         	incf	postinc2
 13831  003BE8  2ADE               	movlw	0
 13832  003BEA  0E00               	addwfc	postdec2
 13833  003BEC  22DD               	line	683
 13834                           	
 13835                           l3439:
 13836  003BEE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
 13837                           	movlw	high(0)
 13838  003BEE  0E00               	movlb	0	; () banked
 13839  003BF0  0100               	movwf	((_width+1))&0ffh
 13840  003BF2  6FF5               	movlw	low(0)
 13841  003BF4  0E00               	movwf	((_width))&0ffh
 13842  003BF6  6FF4               	movff	(_width),(_flags)
 13843  003BF8  C0F4  F0F8         	movff	(_width+1),(_flags+1)
 13844  003BFC  C0F5  F0F9         	line	684
 13845                           	
 13846                           l3441:; BSR set to: 0
 13847  003C00                     
 13848                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
 13849                           	setf	((_prec))&0ffh
 13850  003C00  69F6               	setf	((_prec+1))&0ffh
 13851  003C02  69F7               	line	825
 13852                           	
 13853                           l3443:; BSR set to: 0
 13854  003C04                     
 13855                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 825:       
                                   if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 13856                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 13857  003C04  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 13858  003C08  C043  FFDA         	movff	postinc2,tblptrl
 13859  003C0C  CFDE FFF6          	movff	postdec2,tblptrh
 13860  003C10  CFDD FFF7          	if	0	;tblptru may be non-zero
 13861  003C14                     	clrf	tblptru
 13863  003C14                     	if	0	;tblptru may be non-zero
 13864  003C14                     	global __mediumconst
 13865                           movlw	low highword(__mediumconst)
 13868  003C14                     	tblrd	*
 13869  003C14  0008               	
 13870                           	movf	tablat,w
 13871  003C16  50F5               	xorlw	064h
 13872  003C18  0A64               	btfsc	status,2
 13873  003C1A  B4D8               	goto	u4051
 13874  003C1C  EF12  F01E         	goto	u4050
 13875  003C20  EF14  F01E         u4051:
 13876  003C24                     	goto	l3447
 13877  003C24  EF28  F01E         u4050:
 13878  003C28                     	
 13879                           l3445:; BSR set to: 0
 13880  003C28                     
 13881                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 13882  003C28  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 13883  003C2C  C043  FFDA         	movff	postinc2,tblptrl
 13884  003C30  CFDE FFF6          	movff	postdec2,tblptrh
 13885  003C34  CFDD FFF7          	if	0	;tblptru may be non-zero
 13886  003C38                     	clrf	tblptru
 13888  003C38                     	if	0	;tblptru may be non-zero
 13889  003C38                     	global __mediumconst
 13890                           movlw	low highword(__mediumconst)
 13893  003C38                     	tblrd	*
 13894  003C38  0008               	
 13895                           	movf	tablat,w
 13896  003C3A  50F5               	xorlw	069h
 13897  003C3C  0A69               	btfss	status,2
 13898  003C3E  A4D8               	goto	u4061
 13899  003C40  EF24  F01E         	goto	u4060
 13900  003C44  EF26  F01E         u4061:
 13901  003C48                     	goto	l3453
 13902  003C48  EF6A  F01E         u4060:
 13903  003C4C                     	goto	l3447
 13904  003C4C  EF28  F01E         	
 13905                           l449:; BSR set to: 0
 13906  003C50                     
 13907                           	line	827
 13908                           	
 13909                           l3447:; BSR set to: 0
 13910  003C50                     
 13911                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 827:       
                                       ++*fmt;
 13912                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 13913  003C50  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 13914  003C54  C043  FFDA         	incf	postinc2
 13915  003C58  2ADE               	movlw	0
 13916  003C5A  0E00               	addwfc	postdec2
 13917  003C5C  22DD               	line	828
 13918                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 828:       
                                       ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 13919                           	movff	(c:vfpfcnvrt@ap),fsr2l
 13920  003C5E  C044  FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
 13921  003C62  C045  FFDA         	movff	indf2,??_vfpfcnvrt+0+0
 13922  003C66  CFDF F046          	movlw	low(02h)
 13923  003C6A  0E02               	addwf	postinc2
 13924  003C6C  26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
 13925  003C6E  CFDF F047          	movlw	high(02h)
 13926  003C72  0E00               	addwfc	postdec2
 13927  003C74  22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
 13928  003C76  C046  FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
 13929  003C7A  C047  FFDA         	movff	postinc2,(c:vfpfcnvrt@ll)
 13930  003C7E  CFDE F048          	movff	postdec2,(c:vfpfcnvrt@ll+1)
 13931  003C82  CFDD F049          	movlw	0
 13932  003C86  0E00               	btfsc	((c:vfpfcnvrt@ll+1)),c,7
 13933  003C88  BE49               	movlw	-1
 13934  003C8A  0EFF               	movwf	((c:vfpfcnvrt@ll+2)),c
 13935  003C8C  6E4A               	movwf	((c:vfpfcnvrt@ll+3)),c
 13936  003C8E  6E4B               	movwf	((c:vfpfcnvrt@ll+4)),c
 13937  003C90  6E4C               	movwf	((c:vfpfcnvrt@ll+5)),c
 13938  003C92  6E4D               	movwf	((c:vfpfcnvrt@ll+6)),c
 13939  003C94  6E4E               	movwf	((c:vfpfcnvrt@ll+7)),c
 13940  003C96  6E4F               	line	830
 13941                           	
 13942                           l3449:; BSR set to: 0
 13943  003C98                     
 13944                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 830:       
                                       return dtoa(fp, ll);
 13945                           		movff	(c:vfpfcnvrt@fp),(c:dtoa@fp)
 13946  003C98  C040  F01C         	movff	(c:vfpfcnvrt@fp+1),(c:dtoa@fp+1)
 13947  003C9C  C041  F01D         
 13948                           	movff	(c:vfpfcnvrt@ll),(c:dtoa@d)
 13949  003CA0  C048  F01E         	movff	(c:vfpfcnvrt@ll+1),(c:dtoa@d+1)
 13950  003CA4  C049  F01F         	movff	(c:vfpfcnvrt@ll+2),(c:dtoa@d+2)
 13951  003CA8  C04A  F020         	movff	(c:vfpfcnvrt@ll+3),(c:dtoa@d+3)
 13952  003CAC  C04B  F021         	movff	(c:vfpfcnvrt@ll+4),(c:dtoa@d+4)
 13953  003CB0  C04C  F022         	movff	(c:vfpfcnvrt@ll+5),(c:dtoa@d+5)
 13954  003CB4  C04D  F023         	movff	(c:vfpfcnvrt@ll+6),(c:dtoa@d+6)
 13955  003CB8  C04E  F024         	movff	(c:vfpfcnvrt@ll+7),(c:dtoa@d+7)
 13956  003CBC  C04F  F025         	call	_dtoa	;wreg free
 13957  003CC0  EC5D  F01A         	movff	0+?_dtoa,(c:?_vfpfcnvrt)
 13958  003CC4  C01C  F040         	movff	1+?_dtoa,(c:?_vfpfcnvrt+1)
 13959  003CC8  C01D  F041         	goto	l450
 13960  003CCC  EFC3  F01E         	
 13961                           l3451:
 13962  003CD0                     	goto	l450
 13963  003CD0  EFC3  F01E         	line	831
 13964                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 831:       
                                   }
 13965                           	
 13966                           l447:
 13967  003CD4                     	line	1350
 13968                           	
 13969                           l3453:
 13970  003CD4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
 13971                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 13972  003CD4  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 13973  003CD8  C043  FFDA         	movff	postinc2,tblptrl
 13974  003CDC  CFDE FFF6          	movff	postdec2,tblptrh
 13975  003CE0  CFDD FFF7          	if	0	;tblptru may be non-zero
 13976  003CE4                     	clrf	tblptru
 13978  003CE4                     	if	0	;tblptru may be non-zero
 13979  003CE4                     	global __mediumconst
 13980                           movlw	low highword(__mediumconst)
 13983  003CE4                     	tblrd	*
 13984  003CE4  0008               	
 13985                           	movf	tablat,w
 13986  003CE6  50F5               	xorlw	025h
 13987  003CE8  0A25               	btfss	status,2
 13988  003CEA  A4D8               	goto	u4071
 13989  003CEC  EF7A  F01E         	goto	u4070
 13990  003CF0  EF7C  F01E         u4071:
 13991  003CF4                     	goto	l3463
 13992  003CF4  EF95  F01E         u4070:
 13993  003CF8                     	line	1351
 13994                           	
 13995                           l3455:
 13996  003CF8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
 13997                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 13998  003CF8  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 13999  003CFC  C043  FFDA         	incf	postinc2
 14000  003D00  2ADE               	movlw	0
 14001  003D02  0E00               	addwfc	postdec2
 14002  003D04  22DD               	line	1352
 14003                           	
 14004                           l3457:
 14005  003D06                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
 14006                           	movlw	high(025h)
 14007  003D06  0E00               	movwf	((c:fputc@c+1)),c
 14008  003D08  6E02               	movlw	low(025h)
 14009  003D0A  0E25               	movwf	((c:fputc@c)),c
 14010  003D0C  6E01               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
 14011  003D0E  C040  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
 14012  003D12  C041  F004         
 14013                           	call	_fputc	;wreg free
 14014  003D16  EC8B  F024         	line	1353
 14015                           	
 14016                           l3459:
 14017  003D1A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
 14018                           	movlw	high(01h)
 14019  003D1A  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
 14020  003D1C  6E41               	movlw	low(01h)
 14021  003D1E  0E01               	movwf	((c:?_vfpfcnvrt)),c
 14022  003D20  6E40               	goto	l450
 14023  003D22  EFC3  F01E         	
 14024                           l3461:
 14025  003D26                     	goto	l450
 14026  003D26  EFC3  F01E         	line	1354
 14027                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
 14028                           	
 14029                           l451:
 14030  003D2A                     	line	1357
 14031                           	
 14032                           l3463:
 14033  003D2A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
 14034                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 14035  003D2A  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 14036  003D2E  C043  FFDA         	incf	postinc2
 14037  003D32  2ADE               	movlw	0
 14038  003D34  0E00               	addwfc	postdec2
 14039  003D36  22DD               	line	1358
 14040                           	
 14041                           l3465:
 14042  003D38                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
 14043                           	movlw	high(0)
 14044  003D38  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
 14045  003D3A  6E41               	movlw	low(0)
 14046  003D3C  0E00               	movwf	((c:?_vfpfcnvrt)),c
 14047  003D3E  6E40               	goto	l450
 14048  003D40  EFC3  F01E         	
 14049                           l3467:
 14050  003D44                     	goto	l450
 14051  003D44  EFC3  F01E         	line	1359
 14052                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
 14053                           	
 14054                           l446:
 14055  003D48                     	line	1362
 14056                           	
 14057                           l3469:
 14058  003D48                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
 14059                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 14060  003D48  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 14061  003D4C  C043  FFDA         	movff	postinc2,tblptrl
 14062  003D50  CFDE FFF6          	movff	postdec2,tblptrh
 14063  003D54  CFDD FFF7          	if	0	;tblptru may be non-zero
 14064  003D58                     	clrf	tblptru
 14066  003D58                     	if	0	;tblptru may be non-zero
 14067  003D58                     	global __mediumconst
 14068                           movlw	low highword(__mediumconst)
 14071  003D58                     	tblrd	*
 14072  003D58  0008               	
 14073                           	movf	tablat,w
 14074  003D5A  50F5               
 14075                           	movwf	((c:fputc@c)),c
 14076  003D5C  6E01               	clrf	((c:fputc@c+1)),c
 14077  003D5E  6A02               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
 14078  003D60  C040  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
 14079  003D64  C041  F004         
 14080                           	call	_fputc	;wreg free
 14081  003D68  EC8B  F024         	line	1363
 14082                           	
 14083                           l3471:
 14084  003D6C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
 14085                           	movff	(c:vfpfcnvrt@fmt),fsr2l
 14086  003D6C  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
 14087  003D70  C043  FFDA         	incf	postinc2
 14088  003D74  2ADE               	movlw	0
 14089  003D76  0E00               	addwfc	postdec2
 14090  003D78  22DD               	line	1364
 14091                           	
 14092                           l3473:
 14093  003D7A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
 14094                           	movlw	high(01h)
 14095  003D7A  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
 14096  003D7C  6E41               	movlw	low(01h)
 14097  003D7E  0E01               	movwf	((c:?_vfpfcnvrt)),c
 14098  003D80  6E40               	goto	l450
 14099  003D82  EFC3  F01E         	
 14100                           l3475:
 14101  003D86                     	line	1365
 14102                           	
 14103                           l450:
 14104  003D86                     	return	;funcret
 14105  003D86  0012               	opt stack 0
 14106                           GLOBAL	__end_of_vfpfcnvrt
 14107                           	__end_of_vfpfcnvrt:
 14108  003D88                     	signat	_vfpfcnvrt,12410
 14109                           	global	_dtoa
 14110                           
 14111 ;; *************** function _dtoa *****************
 14112 ;; Defined at:
 14113 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 14114 ;; Parameters:    Size  Location     Type
 14115 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 14116 ;;		 -> sprintf@f(6), 
 14117 ;;  d               8   29[COMRAM] long long 
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;  n               8   53[COMRAM] long long 
 14120 ;;  i               2   61[COMRAM] int 
 14121 ;;  s               2   51[COMRAM] int 
 14122 ;;  w               2   49[COMRAM] int 
 14123 ;;  p               2   47[COMRAM] int 
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  2   27[COMRAM] int 
 14126 ;; Registers used:
 14127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14128 ;; Tracked objects:
 14129 ;;		On entry : 0/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14133 ;;      Params:        10       0       0       0       0       0       0       0       0
 14134 ;;      Locals:        18       0       0       0       0       0       0       0       0
 14135 ;;      Temps:          8       0       0       0       0       0       0       0       0
 14136 ;;      Totals:        36       0       0       0       0       0       0       0       0
 14137 ;;Total ram usage:       36 bytes
 14138 ;; Hardware stack levels used:    1
 14139 ;; Hardware stack levels required when called:    4
 14140 ;; This function calls:
 14141 ;;		___aodiv
 14142 ;;		___aomod
 14143 ;;		_abs
 14144 ;;		_pad
 14145 ;; This function is called by:
 14146 ;;		_vfpfcnvrt
 14147 ;; This function uses a non-reentrant model
 14148 ;;
 14149                           psect	text27,class=CODE,space=0,reloc=2,group=0
 14150                           	line	274
 14151                           global __ptext27
 14152                           __ptext27:
 14153  0034BA                     psect	text27
 14154                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 14155                           	line	274
 14156                           	global	__size_of_dtoa
 14157                           	__size_of_dtoa	equ	__end_of_dtoa-_dtoa
 14158  0000                     	
 14159                           _dtoa:
 14160  0034BA                     ;incstack = 0
 14161                           	opt	stack 21
 14162                           	line	280
 14163                           	
 14164                           l3353:
 14165  0034BA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 274: static
                                  int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\
                                 c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\c
                                 ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\
                                 sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
                                 v2.00\pic\sources\c99\common\doprnt.c: 280:     n = d;
 14166                           	movff	(c:dtoa@d),(c:dtoa@n)
 14167  0034BA  C01E  F036         	movff	(c:dtoa@d+1),(c:dtoa@n+1)
 14168  0034BE  C01F  F037         	movff	(c:dtoa@d+2),(c:dtoa@n+2)
 14169  0034C2  C020  F038         	movff	(c:dtoa@d+3),(c:dtoa@n+3)
 14170  0034C6  C021  F039         	movff	(c:dtoa@d+4),(c:dtoa@n+4)
 14171  0034CA  C022  F03A         	movff	(c:dtoa@d+5),(c:dtoa@n+5)
 14172  0034CE  C023  F03B         	movff	(c:dtoa@d+6),(c:dtoa@n+6)
 14173  0034D2  C024  F03C         	movff	(c:dtoa@d+7),(c:dtoa@n+7)
 14174  0034D6  C025  F03D         	line	281
 14175                           	
 14176                           l3355:
 14177  0034DA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 281:     s 
                                 = n < 0 ? 1 : 0;
 14178                           	btfsc	((c:dtoa@n+7)),c,7
 14179  0034DA  BE3D               	goto	u3891
 14180  0034DC  EF72  F01A         	goto	u3890
 14181  0034E0  EF75  F01A         
 14182                           u3891:
 14183  0034E4                     	movlw	1
 14184  0034E4  0E01               	goto	u3900
 14185  0034E6  EF76  F01A         u3890:
 14186  0034EA                     	movlw	0
 14187  0034EA  0E00               u3900:
 14188  0034EC                     	movwf	((c:dtoa@s)),c
 14189  0034EC  6E34               	clrf	((c:dtoa@s+1)),c
 14190  0034EE  6A35               	line	282
 14191                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 282:     if
                                  (s) {
 14192                           	movf	((c:dtoa@s)),c,w
 14193  0034F0  5034               iorwf	((c:dtoa@s+1)),c,w
 14194  0034F2  1035               	btfsc	status,2
 14195  0034F4  B4D8               	goto	u3911
 14196  0034F6  EF7F  F01A         	goto	u3910
 14197  0034FA  EF81  F01A         
 14198                           u3911:
 14199  0034FE                     	goto	l3359
 14200  0034FE  EF93  F01A         u3910:
 14201  003502                     	line	283
 14202                           	
 14203                           l3357:
 14204  003502                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 283:       
                                   n = -n;
 14205                           	comf	((c:dtoa@n+7)),c
 14206  003502  1E3D               	comf	((c:dtoa@n+6)),c
 14207  003504  1E3C               	comf	((c:dtoa@n+5)),c
 14208  003506  1E3B               	comf	((c:dtoa@n+4)),c
 14209  003508  1E3A               	comf	((c:dtoa@n+3)),c
 14210  00350A  1E39               	comf	((c:dtoa@n+2)),c
 14211  00350C  1E38               	comf	((c:dtoa@n+1)),c
 14212  00350E  1E37               	negf	((c:dtoa@n)),c
 14213  003510  6C36               	movlw	0
 14214  003512  0E00               	addwfc	((c:dtoa@n+1)),c
 14215  003514  2237               	addwfc	((c:dtoa@n+2)),c
 14216  003516  2238               	addwfc	((c:dtoa@n+3)),c
 14217  003518  2239               	addwfc	((c:dtoa@n+4)),c
 14218  00351A  223A               	addwfc	((c:dtoa@n+5)),c
 14219  00351C  223B               	addwfc	((c:dtoa@n+6)),c
 14220  00351E  223C               	addwfc	((c:dtoa@n+7)),c
 14221  003520  223D               	goto	l3359
 14222  003522  EF93  F01A         	line	284
 14223                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 284:     }

 14224                           	
 14225                           l420:
 14226  003526                     	line	287
 14227                           	
 14228                           l3359:
 14229  003526                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 287:     if
                                  (!(prec < 0)) {
 14230                           	movlb	0	; () banked
 14231  003526  0100               	btfsc	((_prec+1))&0ffh,7
 14232  003528  BFF7               	goto	u3921
 14233  00352A  EF99  F01A         	goto	u3920
 14234  00352E  EF9B  F01A         
 14235                           u3921:
 14236  003532                     	goto	l3363
 14237  003532  EF9E  F01A         u3920:
 14238  003536                     	line	288
 14239                           	
 14240                           l3361:; BSR set to: 0
 14241  003536                     
 14242                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 288:       
                                   flags &= ~(1 << 1);
 14243                           	bcf	(0+(1/8)+(_flags))&0ffh,(1)&7
 14244  003536  93F8               	goto	l3363
 14245  003538  EF9E  F01A         	line	289
 14246                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 289:     }

 14247                           	
 14248                           l421:; BSR set to: 0
 14249  00353C                     
 14250                           	line	290
 14251                           	
 14252                           l3363:; BSR set to: 0
 14253  00353C                     
 14254                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 290:     p 
                                 = (0 < prec) ? prec : 1;
 14255                           	btfsc	((_prec+1))&0ffh,7
 14256  00353C  BFF7               	goto	u3930
 14257  00353E  EFAB  F01A         	movf	((_prec+1))&0ffh,w
 14258  003542  51F7               	bnz	u3931
 14259  003544  E106               	decf	((_prec))&0ffh,w
 14260  003546  05F6               	btfsc	status,0
 14261  003548  B0D8               	goto	u3931
 14262  00354A  EFA9  F01A         	goto	u3930
 14263  00354E  EFAB  F01A         
 14264                           u3931:
 14265  003552                     	goto	l423
 14266  003552  EFB1  F01A         u3930:
 14267  003556                     	
 14268                           l3365:; BSR set to: 0
 14269  003556                     
 14270                           	movlw	high(01h)
 14271  003556  0E00               	movwf	((c:dtoa@p+1)),c
 14272  003558  6E31               	movlw	low(01h)
 14273  00355A  0E01               	movwf	((c:dtoa@p)),c
 14274  00355C  6E30               	goto	l425
 14275  00355E  EFB5  F01A         	
 14276                           l423:; BSR set to: 0
 14277  003562                     
 14278                           	movff	(_prec),(c:dtoa@p)
 14279  003562  C0F6  F030         	movff	(_prec+1),(c:dtoa@p+1)
 14280  003566  C0F7  F031         	
 14281                           l425:; BSR set to: 0
 14282  00356A                     
 14283                           	line	291
 14284                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 291:     w 
                                 = width;
 14285                           	movff	(_width),(c:dtoa@w)
 14286  00356A  C0F4  F032         	movff	(_width+1),(c:dtoa@w+1)
 14287  00356E  C0F5  F033         	line	292
 14288                           	
 14289                           l3367:; BSR set to: 0
 14290  003572                     
 14291                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 292:     if
                                  (s || (flags & (1 << 2))) {
 14292                           	movf	((c:dtoa@s)),c,w
 14293  003572  5034               iorwf	((c:dtoa@s+1)),c,w
 14294  003574  1035               	btfss	status,2
 14295  003576  A4D8               	goto	u3941
 14296  003578  EFC0  F01A         	goto	u3940
 14297  00357C  EFC2  F01A         
 14298                           u3941:
 14299  003580                     	goto	l3371
 14300  003580  EFCB  F01A         u3940:
 14301  003584                     	
 14302                           l3369:; BSR set to: 0
 14303  003584                     
 14304                           	
 14305                           	btfss	((_flags))&0ffh,(2)&7
 14306  003584  A5F8               	goto	u3951
 14307  003586  EFC7  F01A         	goto	u3950
 14308  00358A  EFC9  F01A         u3951:
 14309  00358E                     	goto	l3373
 14310  00358E  EFD0  F01A         u3950:
 14311  003592                     	goto	l3371
 14312  003592  EFCB  F01A         	
 14313                           l428:; BSR set to: 0
 14314  003596                     
 14315                           	line	293
 14316                           	
 14317                           l3371:; BSR set to: 0
 14318  003596                     
 14319                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 293:       
                                   --w;
 14320                           	decf	((c:dtoa@w)),c
 14321  003596  0632               	btfss	status,0
 14322  003598  A0D8               	decf	((c:dtoa@w+1)),c
 14323  00359A  0633               	goto	l3373
 14324  00359C  EFD0  F01A         	line	294
 14325                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 294:     }

 14326                           	
 14327                           l426:; BSR set to: 0
 14328  0035A0                     
 14329                           	line	297
 14330                           	
 14331                           l3373:; BSR set to: 0
 14332  0035A0                     
 14333                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 297:     i 
                                 = sizeof(dbuf) - 1;
 14334                           	movlw	high(01Fh)
 14335  0035A0  0E00               	movwf	((c:dtoa@i+1)),c
 14336  0035A2  6E3F               	movlw	low(01Fh)
 14337  0035A4  0E1F               	movwf	((c:dtoa@i)),c
 14338  0035A6  6E3E               	line	298
 14339                           	
 14340                           l3375:; BSR set to: 0
 14341  0035A8                     
 14342                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 298:     db
                                 uf[i] = '\0';
 14343                           	movlw	low(_dbuf)
 14344  0035A8  0E00               	addwf	((c:dtoa@i)),c,w
 14345  0035AA  243E               	movwf	c:fsr2l
 14346  0035AC  6ED9               	movlw	high(_dbuf)
 14347  0035AE  0E01               	addwfc	((c:dtoa@i+1)),c,w
 14348  0035B0  203F               	movwf	1+c:fsr2l
 14349  0035B2  6EDA               	movlw	low(0)
 14350  0035B4  0E00               	movwf	indf2
 14351  0035B6  6EDF               	line	299
 14352                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14353                           	goto	l3387
 14354  0035B8  EF5C  F01B         	
 14355                           l430:; BSR set to: 0
 14356  0035BC                     
 14357                           	line	300
 14358                           	
 14359                           l3377:
 14360  0035BC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 300:       
                                   --i;
 14361                           	decf	((c:dtoa@i)),c
 14362  0035BC  063E               	btfss	status,0
 14363  0035BE  A0D8               	decf	((c:dtoa@i+1)),c
 14364  0035C0  063F               	line	301
 14365                           	
 14366                           l3379:
 14367  0035C2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 301:       
                                   dbuf[i] = '0' + abs(n % 10);
 14368                           	movlw	low(_dbuf)
 14369  0035C2  0E00               	addwf	((c:dtoa@i)),c,w
 14370  0035C4  243E               	movwf	c:fsr2l
 14371  0035C6  6ED9               	movlw	high(_dbuf)
 14372  0035C8  0E01               	addwfc	((c:dtoa@i+1)),c,w
 14373  0035CA  203F               	movwf	1+c:fsr2l
 14374  0035CC  6EDA               	movff	(c:dtoa@n),(c:___aomod@dividend)
 14375  0035CE  C036  F001         	movff	(c:dtoa@n+1),(c:___aomod@dividend+1)
 14376  0035D2  C037  F002         	movff	(c:dtoa@n+2),(c:___aomod@dividend+2)
 14377  0035D6  C038  F003         	movff	(c:dtoa@n+3),(c:___aomod@dividend+3)
 14378  0035DA  C039  F004         	movff	(c:dtoa@n+4),(c:___aomod@dividend+4)
 14379  0035DE  C03A  F005         	movff	(c:dtoa@n+5),(c:___aomod@dividend+5)
 14380  0035E2  C03B  F006         	movff	(c:dtoa@n+6),(c:___aomod@dividend+6)
 14381  0035E6  C03C  F007         	movff	(c:dtoa@n+7),(c:___aomod@dividend+7)
 14382  0035EA  C03D  F008         	movlw	byte0(0Ah)
 14383  0035EE  0E0A               	movwf	((c:___aomod@divisor)),c
 14384  0035F0  6E09               	movlw	byte1(0Ah)
 14385  0035F2  0E00               	movwf	((c:___aomod@divisor+1)),c
 14386  0035F4  6E0A               	movlw	byte2(0Ah)
 14387  0035F6  0E00               	movwf	((c:___aomod@divisor+2)),c
 14388  0035F8  6E0B               	movlw	byte3(0Ah)
 14389  0035FA  0E00               	movwf	((c:___aomod@divisor+3)),c
 14390  0035FC  6E0C               	movlw	byte4(0Ah)
 14391  0035FE  0E00               	movwf	((c:___aomod@divisor+4)),c
 14392  003600  6E0D               	movlw	byte5(0Ah)
 14393  003602  0E00               	movwf	((c:___aomod@divisor+5)),c
 14394  003604  6E0E               	movlw	byte6(0Ah)
 14395  003606  0E00               	movwf	((c:___aomod@divisor+6)),c
 14396  003608  6E0F               	movlw	byte7(0Ah)
 14397  00360A  0E00               	movwf	((c:___aomod@divisor+7)),c
 14398  00360C  6E10               	call	___aomod	;wreg free
 14399  00360E  EC9C  F01F         	movff	0+?___aomod,??_dtoa+0+0
 14400  003612  C001  F026         	movff	1+?___aomod,??_dtoa+0+0+1
 14401  003616  C002  F027         	movff	2+?___aomod,??_dtoa+0+0+2
 14402  00361A  C003  F028         	movff	3+?___aomod,??_dtoa+0+0+3
 14403  00361E  C004  F029         	movff	4+?___aomod,??_dtoa+0+0+4
 14404  003622  C005  F02A         	movff	5+?___aomod,??_dtoa+0+0+5
 14405  003626  C006  F02B         	movff	6+?___aomod,??_dtoa+0+0+6
 14406  00362A  C007  F02C         	movff	7+?___aomod,??_dtoa+0+0+7
 14407  00362E  C008  F02D         	
 14408                           	movff	??_dtoa+0+0,(c:abs@a)
 14409  003632  C026  F013         	movff	??_dtoa+0+2,(c:abs@a+1)
 14410  003636  C028  F014         	call	_abs	;wreg free
 14411  00363A  ECDB  F02A         	movf	(0+?_abs),c,w
 14412  00363E  5013               	addlw	low(030h)
 14413  003640  0F30               	movwf	indf2,c
 14414  003642  6EDF               
 14415                           	line	302
 14416                           	
 14417                           l3381:
 14418  003644                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 302:       
                                   --p;
 14419                           	decf	((c:dtoa@p)),c
 14420  003644  0630               	btfss	status,0
 14421  003646  A0D8               	decf	((c:dtoa@p+1)),c
 14422  003648  0631               	line	303
 14423                           	
 14424                           l3383:
 14425  00364A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 303:       
                                   --w;
 14426                           	decf	((c:dtoa@w)),c
 14427  00364A  0632               	btfss	status,0
 14428  00364C  A0D8               	decf	((c:dtoa@w+1)),c
 14429  00364E  0633               	line	304
 14430                           	
 14431                           l3385:
 14432  003650                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 304:       
                                   n = n / 10;
 14433                           	movff	(c:dtoa@n),(c:___aodiv@dividend)
 14434  003650  C036  F001         	movff	(c:dtoa@n+1),(c:___aodiv@dividend+1)
 14435  003654  C037  F002         	movff	(c:dtoa@n+2),(c:___aodiv@dividend+2)
 14436  003658  C038  F003         	movff	(c:dtoa@n+3),(c:___aodiv@dividend+3)
 14437  00365C  C039  F004         	movff	(c:dtoa@n+4),(c:___aodiv@dividend+4)
 14438  003660  C03A  F005         	movff	(c:dtoa@n+5),(c:___aodiv@dividend+5)
 14439  003664  C03B  F006         	movff	(c:dtoa@n+6),(c:___aodiv@dividend+6)
 14440  003668  C03C  F007         	movff	(c:dtoa@n+7),(c:___aodiv@dividend+7)
 14441  00366C  C03D  F008         	movlw	byte0(0Ah)
 14442  003670  0E0A               	movwf	((c:___aodiv@divisor)),c
 14443  003672  6E09               	movlw	byte1(0Ah)
 14444  003674  0E00               	movwf	((c:___aodiv@divisor+1)),c
 14445  003676  6E0A               	movlw	byte2(0Ah)
 14446  003678  0E00               	movwf	((c:___aodiv@divisor+2)),c
 14447  00367A  6E0B               	movlw	byte3(0Ah)
 14448  00367C  0E00               	movwf	((c:___aodiv@divisor+3)),c
 14449  00367E  6E0C               	movlw	byte4(0Ah)
 14450  003680  0E00               	movwf	((c:___aodiv@divisor+4)),c
 14451  003682  6E0D               	movlw	byte5(0Ah)
 14452  003684  0E00               	movwf	((c:___aodiv@divisor+5)),c
 14453  003686  6E0E               	movlw	byte6(0Ah)
 14454  003688  0E00               	movwf	((c:___aodiv@divisor+6)),c
 14455  00368A  6E0F               	movlw	byte7(0Ah)
 14456  00368C  0E00               	movwf	((c:___aodiv@divisor+7)),c
 14457  00368E  6E10               	call	___aodiv	;wreg free
 14458  003690  ECC4  F01E         	movff	0+?___aodiv,(c:dtoa@n)
 14459  003694  C001  F036         	movff	1+?___aodiv,(c:dtoa@n+1)
 14460  003698  C002  F037         	movff	2+?___aodiv,(c:dtoa@n+2)
 14461  00369C  C003  F038         	movff	3+?___aodiv,(c:dtoa@n+3)
 14462  0036A0  C004  F039         	movff	4+?___aodiv,(c:dtoa@n+4)
 14463  0036A4  C005  F03A         	movff	5+?___aodiv,(c:dtoa@n+5)
 14464  0036A8  C006  F03B         	movff	6+?___aodiv,(c:dtoa@n+6)
 14465  0036AC  C007  F03C         	movff	7+?___aodiv,(c:dtoa@n+7)
 14466  0036B0  C008  F03D         	
 14467                           	goto	l3387
 14468  0036B4  EF5C  F01B         	line	305
 14469                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 305:     }

 14470                           	
 14471                           l429:
 14472  0036B8                     	line	299
 14473                           	
 14474                           l3387:
 14475  0036B8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14476                           	btfsc	((c:dtoa@i+1)),c,7
 14477  0036B8  BE3F               	goto	u3961
 14478  0036BA  EF67  F01B         	movf	((c:dtoa@i+1)),c,w
 14479  0036BE  503F               	bnz	u3960
 14480  0036C0  E108               	decf	((c:dtoa@i)),c,w
 14481  0036C2  043E               	btfss	status,0
 14482  0036C4  A0D8               	goto	u3961
 14483  0036C6  EF67  F01B         	goto	u3960
 14484  0036CA  EF69  F01B         
 14485                           u3961:
 14486  0036CE                     	goto	l3397
 14487  0036CE  EFA0  F01B         u3960:
 14488  0036D2                     	
 14489                           l3389:
 14490  0036D2                     	movf	((c:dtoa@n)),c,w
 14491  0036D2  5036               iorwf	((c:dtoa@n+1)),c,w
 14492  0036D4  1037               iorwf	((c:dtoa@n+2)),c,w
 14493  0036D6  1038               iorwf	((c:dtoa@n+3)),c,w
 14494  0036D8  1039               iorwf	((c:dtoa@n+4)),c,w
 14495  0036DA  103A               iorwf	((c:dtoa@n+5)),c,w
 14496  0036DC  103B               iorwf	((c:dtoa@n+6)),c,w
 14497  0036DE  103C               iorwf	((c:dtoa@n+7)),c,w
 14498  0036E0  103D               	btfss	status,2
 14499  0036E2  A4D8               	goto	u3971
 14500  0036E4  EF76  F01B         	goto	u3970
 14501  0036E8  EF78  F01B         
 14502                           u3971:
 14503  0036EC                     	goto	l3377
 14504  0036EC  EFDE  F01A         u3970:
 14505  0036F0                     	
 14506                           l3391:
 14507  0036F0                     	btfsc	((c:dtoa@p+1)),c,7
 14508  0036F0  BE31               	goto	u3980
 14509  0036F2  EF85  F01B         	movf	((c:dtoa@p+1)),c,w
 14510  0036F6  5031               	bnz	u3981
 14511  0036F8  E106               	decf	((c:dtoa@p)),c,w
 14512  0036FA  0430               	btfsc	status,0
 14513  0036FC  B0D8               	goto	u3981
 14514  0036FE  EF83  F01B         	goto	u3980
 14515  003702  EF85  F01B         
 14516                           u3981:
 14517  003706                     	goto	l3377
 14518  003706  EFDE  F01A         u3980:
 14519  00370A                     	
 14520                           l3393:
 14521  00370A                     	btfsc	((c:dtoa@w+1)),c,7
 14522  00370A  BE33               	goto	u3991
 14523  00370C  EF90  F01B         	movf	((c:dtoa@w+1)),c,w
 14524  003710  5033               	bnz	u3990
 14525  003712  E108               	decf	((c:dtoa@w)),c,w
 14526  003714  0432               	btfss	status,0
 14527  003716  A0D8               	goto	u3991
 14528  003718  EF90  F01B         	goto	u3990
 14529  00371C  EF92  F01B         
 14530                           u3991:
 14531  003720                     	goto	l3397
 14532  003720  EFA0  F01B         u3990:
 14533  003724                     	
 14534                           l3395:
 14535  003724                     	movlb	0	; () banked
 14536  003724  0100               	
 14537                           	btfsc	((_flags))&0ffh,(1)&7
 14538  003726  B3F8               	goto	u4001
 14539  003728  EF98  F01B         	goto	u4000
 14540  00372C  EF9A  F01B         u4001:
 14541  003730                     	goto	l3377
 14542  003730  EFDE  F01A         u4000:
 14543  003734                     	goto	l3397
 14544  003734  EFA0  F01B         	
 14545                           l434:; BSR set to: 0
 14546  003738                     
 14547                           	goto	l3397
 14548  003738  EFA0  F01B         	
 14549                           l432:; BSR set to: 0
 14550  00373C                     
 14551                           	goto	l3397
 14552  00373C  EFA0  F01B         	
 14553                           l435:; BSR set to: 0
 14554  003740                     
 14555                           	line	308
 14556                           	
 14557                           l3397:
 14558  003740                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 308:     if
                                  (s || (flags & (1 << 2))) {
 14559                           	movf	((c:dtoa@s)),c,w
 14560  003740  5034               iorwf	((c:dtoa@s+1)),c,w
 14561  003742  1035               	btfss	status,2
 14562  003744  A4D8               	goto	u4011
 14563  003746  EFA7  F01B         	goto	u4010
 14564  00374A  EFA9  F01B         
 14565                           u4011:
 14566  00374E                     	goto	l3401
 14567  00374E  EFB3  F01B         u4010:
 14568  003752                     	
 14569                           l3399:
 14570  003752                     	movlb	0	; () banked
 14571  003752  0100               	
 14572                           	btfss	((_flags))&0ffh,(2)&7
 14573  003754  A5F8               	goto	u4021
 14574  003756  EFAF  F01B         	goto	u4020
 14575  00375A  EFB1  F01B         u4021:
 14576  00375E                     	goto	l3411
 14577  00375E  EFD5  F01B         u4020:
 14578  003762                     	goto	l3401
 14579  003762  EFB3  F01B         	
 14580                           l438:; BSR set to: 0
 14581  003766                     
 14582                           	line	309
 14583                           	
 14584                           l3401:
 14585  003766                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 309:       
                                   --i;
 14586                           	decf	((c:dtoa@i)),c
 14587  003766  063E               	btfss	status,0
 14588  003768  A0D8               	decf	((c:dtoa@i+1)),c
 14589  00376A  063F               	line	310
 14590                           	
 14591                           l3403:
 14592  00376C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 310:       
                                   dbuf[i] = s ? '-' : '+';
 14593                           	movf	((c:dtoa@s)),c,w
 14594  00376C  5034               iorwf	((c:dtoa@s+1)),c,w
 14595  00376E  1035               	btfss	status,2
 14596  003770  A4D8               	goto	u4031
 14597  003772  EFBD  F01B         	goto	u4030
 14598  003776  EFBF  F01B         
 14599                           u4031:
 14600  00377A                     	goto	l3407
 14601  00377A  EFC5  F01B         u4030:
 14602  00377E                     	
 14603                           l3405:
 14604  00377E                     	movlw	high(02Bh)
 14605  00377E  0E00               	movwf	((c:_dtoa$487+1)),c
 14606  003780  6E2F               	movlw	low(02Bh)
 14607  003782  0E2B               	movwf	((c:_dtoa$487)),c
 14608  003784  6E2E               	goto	l3409
 14609  003786  EFCB  F01B         	
 14610                           l440:
 14611  00378A                     	
 14612                           l3407:
 14613  00378A                     	movlw	high(02Dh)
 14614  00378A  0E00               	movwf	((c:_dtoa$487+1)),c
 14615  00378C  6E2F               	movlw	low(02Dh)
 14616  00378E  0E2D               	movwf	((c:_dtoa$487)),c
 14617  003790  6E2E               	goto	l3409
 14618  003792  EFCB  F01B         	
 14619                           l442:
 14620  003796                     	
 14621                           l3409:
 14622  003796                     	movlw	low(_dbuf)
 14623  003796  0E00               	addwf	((c:dtoa@i)),c,w
 14624  003798  243E               	movwf	c:fsr2l
 14625  00379A  6ED9               	movlw	high(_dbuf)
 14626  00379C  0E01               	addwfc	((c:dtoa@i+1)),c,w
 14627  00379E  203F               	movwf	1+c:fsr2l
 14628  0037A0  6EDA               	movff	(c:_dtoa$487),indf2
 14629  0037A2  C02E  FFDF         
 14630                           	goto	l3411
 14631  0037A6  EFD5  F01B         	line	311
 14632                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 311:     }

 14633                           	
 14634                           l436:
 14635  0037AA                     	line	314
 14636                           	
 14637                           l3411:
 14638  0037AA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 314:     re
                                 turn pad(fp, &dbuf[i], w);
 14639                           		movff	(c:dtoa@fp),(c:pad@fp)
 14640  0037AA  C01C  F011         	movff	(c:dtoa@fp+1),(c:pad@fp+1)
 14641  0037AE  C01D  F012         
 14642                           	movlw	low(_dbuf)
 14643  0037B2  0E00               	addwf	((c:dtoa@i)),c,w
 14644  0037B4  243E               	movwf	((c:pad@buf)),c
 14645  0037B6  6E13               	movlw	high(_dbuf)
 14646  0037B8  0E01               	addwfc	((c:dtoa@i+1)),c,w
 14647  0037BA  203F               	movwf	1+((c:pad@buf)),c
 14648  0037BC  6E14               	movff	(c:dtoa@w),(c:pad@p)
 14649  0037BE  C032  F015         	movff	(c:dtoa@w+1),(c:pad@p+1)
 14650  0037C2  C033  F016         	call	_pad	;wreg free
 14651  0037C6  ECFA  F024         	movff	0+?_pad,(c:?_dtoa)
 14652  0037CA  C011  F01C         	movff	1+?_pad,(c:?_dtoa+1)
 14653  0037CE  C012  F01D         	goto	l443
 14654  0037D2  EFEB  F01B         	
 14655                           l3413:
 14656  0037D6                     	line	315
 14657                           	
 14658                           l443:
 14659  0037D6                     	return	;funcret
 14660  0037D6  0012               	opt stack 0
 14661                           GLOBAL	__end_of_dtoa
 14662                           	__end_of_dtoa:
 14663  0037D8                     	signat	_dtoa,8314
 14664                           	global	_pad
 14665                           
 14666 ;; *************** function _pad *****************
 14667 ;; Defined at:
 14668 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 14669 ;; Parameters:    Size  Location     Type
 14670 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 14671 ;;		 -> sprintf@f(6), 
 14672 ;;  buf             2   18[COMRAM] PTR unsigned char 
 14673 ;;		 -> dbuf(32), 
 14674 ;;  p               2   20[COMRAM] int 
 14675 ;; Auto vars:     Size  Location     Type
 14676 ;;  w               2   25[COMRAM] int 
 14677 ;;  i               2   23[COMRAM] int 
 14678 ;; Return value:  Size  Location     Type
 14679 ;;                  2   16[COMRAM] int 
 14680 ;; Registers used:
 14681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14682 ;; Tracked objects:
 14683 ;;		On entry : 0/0
 14684 ;;		On exit  : 0/0
 14685 ;;		Unchanged: 0/0
 14686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14687 ;;      Params:         6       0       0       0       0       0       0       0       0
 14688 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14689 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14690 ;;      Totals:        11       0       0       0       0       0       0       0       0
 14691 ;;Total ram usage:       11 bytes
 14692 ;; Hardware stack levels used:    1
 14693 ;; Hardware stack levels required when called:    3
 14694 ;; This function calls:
 14695 ;;		_fputc
 14696 ;;		_fputs
 14697 ;;		_strlen
 14698 ;; This function is called by:
 14699 ;;		_dtoa
 14700 ;; This function uses a non-reentrant model
 14701 ;;
 14702                           psect	text28,class=CODE,space=0,reloc=2,group=0
 14703                           	line	72
 14704                           global __ptext28
 14705                           __ptext28:
 14706  0049F4                     psect	text28
 14707                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 14708                           	line	72
 14709                           	global	__size_of_pad
 14710                           	__size_of_pad	equ	__end_of_pad-_pad
 14711  0000                     	
 14712                           _pad:
 14713  0049F4                     ;incstack = 0
 14714                           	opt	stack 21
 14715                           	line	77
 14716                           	
 14717                           l3231:
 14718  0049F4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14719                           	movlb	0	; () banked
 14720  0049F4  0100               	
 14721                           	btfss	((_flags))&0ffh,(0)&7
 14722  0049F6  A1F8               	goto	u3681
 14723  0049F8  EF00  F025         	goto	u3680
 14724  0049FC  EF02  F025         u3681:
 14725  004A00                     	goto	l3235
 14726  004A00  EF0E  F025         u3680:
 14727  004A04                     	line	78
 14728                           	
 14729                           l3233:; BSR set to: 0
 14730  004A04                     
 14731                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
 14732                           		movff	(c:pad@buf),(c:fputs@s)
 14733  004A04  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
 14734  004A08  C014  F00B         
 14735                           		movff	(c:pad@fp),(c:fputs@fp)
 14736  004A0C  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
 14737  004A10  C012  F00D         
 14738                           	call	_fputs	;wreg free
 14739  004A14  EC45  F02A         	goto	l3235
 14740  004A18  EF0E  F025         	line	79
 14741                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
 14742                           	
 14743                           l408:
 14744  004A1C                     	line	82
 14745                           	
 14746                           l3235:
 14747  004A1C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
 14748                           	btfsc	((c:pad@p+1)),c,7
 14749  004A1C  BE16               	goto	u3691
 14750  004A1E  EF13  F025         	goto	u3690
 14751  004A22  EF15  F025         
 14752                           u3691:
 14753  004A26                     	goto	l3239
 14754  004A26  EF1B  F025         u3690:
 14755  004A2A                     	
 14756                           l3237:
 14757  004A2A                     	movff	(c:pad@p),(c:pad@w)
 14758  004A2A  C015  F01A         	movff	(c:pad@p+1),(c:pad@w+1)
 14759  004A2E  C016  F01B         	goto	l412
 14760  004A32  EF1F  F025         	
 14761                           l410:
 14762  004A36                     	
 14763                           l3239:
 14764  004A36                     	movlw	high(0)
 14765  004A36  0E00               	movwf	((c:pad@w+1)),c
 14766  004A38  6E1B               	movlw	low(0)
 14767  004A3A  0E00               	movwf	((c:pad@w)),c
 14768  004A3C  6E1A               	
 14769                           l412:
 14770  004A3E                     	line	83
 14771                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
 14772                           	movlw	high(0)
 14773  004A3E  0E00               	movwf	((c:pad@i+1)),c
 14774  004A40  6E19               	movlw	low(0)
 14775  004A42  0E00               	movwf	((c:pad@i)),c
 14776  004A44  6E18               	line	84
 14777                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
 14778                           	goto	l3245
 14779  004A46  EF33  F025         	
 14780                           l414:
 14781  004A4A                     	line	85
 14782                           	
 14783                           l3241:
 14784  004A4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
 14785                           	movlw	high(020h)
 14786  004A4A  0E00               	movwf	((c:fputc@c+1)),c
 14787  004A4C  6E02               	movlw	low(020h)
 14788  004A4E  0E20               	movwf	((c:fputc@c)),c
 14789  004A50  6E01               		movff	(c:pad@fp),(c:fputc@fp)
 14790  004A52  C011  F003         	movff	(c:pad@fp+1),(c:fputc@fp+1)
 14791  004A56  C012  F004         
 14792                           	call	_fputc	;wreg free
 14793  004A5A  EC8B  F024         	line	86
 14794                           	
 14795                           l3243:
 14796  004A5E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
 14797                           	infsnz	((c:pad@i)),c
 14798  004A5E  4A18               	incf	((c:pad@i+1)),c
 14799  004A60  2A19               	goto	l3245
 14800  004A62  EF33  F025         	line	87
 14801                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
 14802                           	
 14803                           l413:
 14804  004A66                     	line	84
 14805                           	
 14806                           l3245:
 14807  004A66                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
 14808                           		movf	((c:pad@w)),c,w
 14809  004A66  501A               	subwf	((c:pad@i)),c,w
 14810  004A68  5C18               	movf	((c:pad@i+1)),c,w
 14811  004A6A  5019               	xorlw	80h
 14812  004A6C  0A80               	movwf	(??_pad+0+0)&0ffh,c
 14813  004A6E  6E17               	movf	((c:pad@w+1)),c,w
 14814  004A70  501B               	xorlw	80h
 14815  004A72  0A80               	subwfb	(??_pad+0+0)&0ffh,c,w
 14816  004A74  5817               	btfss	status,0
 14817  004A76  A0D8               	goto	u3701
 14818  004A78  EF40  F025         	goto	u3700
 14819  004A7C  EF42  F025         
 14820                           u3701:
 14821  004A80                     	goto	l3241
 14822  004A80  EF25  F025         u3700:
 14823  004A84                     	
 14824                           l415:
 14825  004A84                     	line	90
 14826                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
 14827                           	movlb	0	; () banked
 14828  004A84  0100               	
 14829                           	btfsc	((_flags))&0ffh,(0)&7
 14830  004A86  B1F8               	goto	u3711
 14831  004A88  EF48  F025         	goto	u3710
 14832  004A8C  EF4A  F025         u3711:
 14833  004A90                     	goto	l3249
 14834  004A90  EF56  F025         u3710:
 14835  004A94                     	line	91
 14836                           	
 14837                           l3247:; BSR set to: 0
 14838  004A94                     
 14839                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
 14840                           		movff	(c:pad@buf),(c:fputs@s)
 14841  004A94  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
 14842  004A98  C014  F00B         
 14843                           		movff	(c:pad@fp),(c:fputs@fp)
 14844  004A9C  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
 14845  004AA0  C012  F00D         
 14846                           	call	_fputs	;wreg free
 14847  004AA4  EC45  F02A         	goto	l3249
 14848  004AA8  EF56  F025         	line	92
 14849                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
 14850                           	
 14851                           l416:
 14852  004AAC                     	line	94
 14853                           	
 14854                           l3249:
 14855  004AAC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
 14856                           		movff	(c:pad@buf),(c:strlen@s)
 14857  004AAC  C013  F001         	movff	(c:pad@buf+1),(c:strlen@s+1)
 14858  004AB0  C014  F002         
 14859                           	call	_strlen	;wreg free
 14860  004AB4  EC1C  F02A         	movf	((c:pad@w)),c,w
 14861  004AB8  501A               	addwf	(0+?_strlen),c,w
 14862  004ABA  2401               	movwf	((c:?_pad)),c
 14863  004ABC  6E11               	movf	((c:pad@w+1)),c,w
 14864  004ABE  501B               	addwfc	(1+?_strlen),c,w
 14865  004AC0  2002               	movwf	1+((c:?_pad)),c
 14866  004AC2  6E12               	goto	l417
 14867  004AC4  EF64  F025         	
 14868                           l3251:
 14869  004AC8                     	line	95
 14870                           	
 14871                           l417:
 14872  004AC8                     	return	;funcret
 14873  004AC8  0012               	opt stack 0
 14874                           GLOBAL	__end_of_pad
 14875                           	__end_of_pad:
 14876  004ACA                     	signat	_pad,12410
 14877                           	global	_strlen
 14878                           
 14879 ;; *************** function _strlen *****************
 14880 ;; Defined at:
 14881 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 14882 ;; Parameters:    Size  Location     Type
 14883 ;;  s               2    0[COMRAM] PTR const unsigned char 
 14884 ;;		 -> dbuf(32), lcd_temp@temp_info(16), lcd_humid@humid_info(16), lcd_sol@sol_info(16), 
 14885 ;;		 -> lcd_lum@lum_info(16), lcd_arrosage@data(16), 
 14886 ;; Auto vars:     Size  Location     Type
 14887 ;;  a               2    4[COMRAM] PTR const unsigned char 
 14888 ;;		 -> dbuf(32), lcd_temp@temp_info(16), lcd_humid@humid_info(16), lcd_sol@sol_info(16), 
 14889 ;;		 -> lcd_lum@lum_info(16), lcd_arrosage@data(16), 
 14890 ;; Return value:  Size  Location     Type
 14891 ;;                  2    0[COMRAM] unsigned int 
 14892 ;; Registers used:
 14893 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14894 ;; Tracked objects:
 14895 ;;		On entry : 0/0
 14896 ;;		On exit  : 0/0
 14897 ;;		Unchanged: 0/0
 14898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14899 ;;      Params:         2       0       0       0       0       0       0       0       0
 14900 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14901 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14902 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14903 ;;Total ram usage:        6 bytes
 14904 ;; Hardware stack levels used:    1
 14905 ;; This function calls:
 14906 ;;		Nothing
 14907 ;; This function is called by:
 14908 ;;		_pad
 14909 ;;		_strcat
 14910 ;; This function uses a non-reentrant model
 14911 ;;
 14912                           psect	text29,class=CODE,space=0,reloc=2,group=2
 14913                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 14914                           	line	12
 14915                           global __ptext29
 14916                           __ptext29:
 14917  005438                     psect	text29
 14918                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 14919                           	line	12
 14920                           	global	__size_of_strlen
 14921                           	__size_of_strlen	equ	__end_of_strlen-_strlen
 14922  0000                     	
 14923                           _strlen:
 14924  005438                     ;incstack = 0
 14925                           	opt	stack 27
 14926                           	line	14
 14927                           	
 14928                           l3221:
 14929  005438                     		movff	(c:strlen@s),(c:strlen@a)
 14930  005438  C001  F005         	movff	(c:strlen@s+1),(c:strlen@a+1)
 14931  00543C  C002  F006         
 14932                           	line	16
 14933                           	goto	l3225
 14934  005440  EF26  F02A         	
 14935                           l1245:
 14936  005444                     	line	17
 14937                           	
 14938                           l3223:
 14939  005444                     	infsnz	((c:strlen@s)),c
 14940  005444  4A01               	incf	((c:strlen@s+1)),c
 14941  005446  2A02               	goto	l3225
 14942  005448  EF26  F02A         	line	18
 14943                           	
 14944                           l1244:
 14945  00544C                     	line	16
 14946                           	
 14947                           l3225:
 14948  00544C                     	movff	(c:strlen@s),fsr2l
 14949  00544C  C001  FFD9         	movff	(c:strlen@s+1),fsr2h
 14950  005450  C002  FFDA         	movf	indf2,w
 14951  005454  50DF               	btfss	status,2
 14952  005456  A4D8               	goto	u3671
 14953  005458  EF30  F02A         	goto	u3670
 14954  00545C  EF32  F02A         u3671:
 14955  005460                     	goto	l3223
 14956  005460  EF22  F02A         u3670:
 14957  005464                     	goto	l3227
 14958  005464  EF34  F02A         	
 14959                           l1246:
 14960  005468                     	line	25
 14961                           	
 14962                           l3227:
 14963  005468                     	movff	(c:strlen@a),??_strlen+0+0
 14964  005468  C005  F003         	movff	(c:strlen@a+1),??_strlen+0+0+1
 14965  00546C  C006  F004         	comf	(??_strlen+0+0),c
 14966  005470  1E03               	comf	(??_strlen+0+1),c
 14967  005472  1E04               	infsnz	(??_strlen+0+0),c
 14968  005474  4A03               	incf	(??_strlen+0+1),c
 14969  005476  2A04               	movf	((c:strlen@s)),c,w
 14970  005478  5001               	addwf	(??_strlen+0+0),c,w
 14971  00547A  2403               	movwf	((c:?_strlen)),c
 14972  00547C  6E01               	movf	((c:strlen@s+1)),c,w
 14973  00547E  5002               	addwfc	(??_strlen+0+1),c,w
 14974  005480  2004               	movwf	1+((c:?_strlen)),c
 14975  005482  6E02               	goto	l1247
 14976  005484  EF44  F02A         	
 14977                           l3229:
 14978  005488                     	line	26
 14979                           	
 14980                           l1247:
 14981  005488                     	return	;funcret
 14982  005488  0012               	opt stack 0
 14983                           GLOBAL	__end_of_strlen
 14984                           	__end_of_strlen:
 14985  00548A                     	signat	_strlen,4218
 14986                           	global	_fputs
 14987                           
 14988 ;; *************** function _fputs *****************
 14989 ;; Defined at:
 14990 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 14991 ;; Parameters:    Size  Location     Type
 14992 ;;  s               2    9[COMRAM] PTR const unsigned char 
 14993 ;;		 -> dbuf(32), 
 14994 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 14995 ;;		 -> sprintf@f(6), 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  i               2   14[COMRAM] int 
 14998 ;;  c               1   13[COMRAM] unsigned char 
 14999 ;; Return value:  Size  Location     Type
 15000 ;;                  2    9[COMRAM] int 
 15001 ;; Registers used:
 15002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15003 ;; Tracked objects:
 15004 ;;		On entry : 0/0
 15005 ;;		On exit  : 0/0
 15006 ;;		Unchanged: 0/0
 15007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15008 ;;      Params:         4       0       0       0       0       0       0       0       0
 15009 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15010 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15011 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15012 ;;Total ram usage:        7 bytes
 15013 ;; Hardware stack levels used:    1
 15014 ;; Hardware stack levels required when called:    2
 15015 ;; This function calls:
 15016 ;;		_fputc
 15017 ;; This function is called by:
 15018 ;;		_pad
 15019 ;; This function uses a non-reentrant model
 15020 ;;
 15021                           psect	text30,class=CODE,space=0,reloc=2,group=2
 15022                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 15023                           	line	8
 15024                           global __ptext30
 15025                           __ptext30:
 15026  00548A                     psect	text30
 15027                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 15028                           	line	8
 15029                           	global	__size_of_fputs
 15030                           	__size_of_fputs	equ	__end_of_fputs-_fputs
 15031  0000                     	
 15032                           _fputs:
 15033  00548A                     ;incstack = 0
 15034                           	opt	stack 21
 15035                           	line	13
 15036                           	
 15037                           l3213:
 15038  00548A                     	movlw	high(0)
 15039  00548A  0E00               	movwf	((c:fputs@i+1)),c
 15040  00548C  6E10               	movlw	low(0)
 15041  00548E  0E00               	movwf	((c:fputs@i)),c
 15042  005490  6E0F               	line	14
 15043                           	goto	l3219
 15044  005492  EF58  F02A         	
 15045                           l1201:
 15046  005496                     	line	15
 15047                           	
 15048                           l3215:
 15049  005496                     	movff	(c:fputs@c),(c:fputc@c)
 15050  005496  C00E  F001         	clrf	((c:fputc@c+1)),c
 15051  00549A  6A02               		movff	(c:fputs@fp),(c:fputc@fp)
 15052  00549C  C00C  F003         	movff	(c:fputs@fp+1),(c:fputc@fp+1)
 15053  0054A0  C00D  F004         
 15054                           	call	_fputc	;wreg free
 15055  0054A4  EC8B  F024         	line	16
 15056                           	
 15057                           l3217:
 15058  0054A8                     	infsnz	((c:fputs@i)),c
 15059  0054A8  4A0F               	incf	((c:fputs@i+1)),c
 15060  0054AA  2A10               	goto	l3219
 15061  0054AC  EF58  F02A         	line	17
 15062                           	
 15063                           l1200:
 15064  0054B0                     	line	14
 15065                           	
 15066                           l3219:
 15067  0054B0                     	movf	((c:fputs@i)),c,w
 15068  0054B0  500F               	addwf	((c:fputs@s)),c,w
 15069  0054B2  240A               	movwf	c:fsr2l
 15070  0054B4  6ED9               	movf	((c:fputs@i+1)),c,w
 15071  0054B6  5010               	addwfc	((c:fputs@s+1)),c,w
 15072  0054B8  200B               	movwf	1+c:fsr2l
 15073  0054BA  6EDA               	movf	indf2,w
 15074  0054BC  50DF               	movwf	((c:fputs@c)),c
 15075  0054BE  6E0E               	movf	((c:fputs@c)),c,w
 15076  0054C0  500E               	btfss	status,2
 15077  0054C2  A4D8               	goto	u3661
 15078  0054C4  EF66  F02A         	goto	u3660
 15079  0054C8  EF68  F02A         u3661:
 15080  0054CC                     	goto	l3215
 15081  0054CC  EF4B  F02A         u3660:
 15082  0054D0                     	goto	l1203
 15083  0054D0  EF6A  F02A         	
 15084                           l1202:
 15085  0054D4                     	line	19
 15086                           ;	Return value of _fputs is never used
 15087                           	
 15088                           l1203:
 15089  0054D4                     	return	;funcret
 15090  0054D4  0012               	opt stack 0
 15091                           GLOBAL	__end_of_fputs
 15092                           	__end_of_fputs:
 15093  0054D6                     	signat	_fputs,8314
 15094                           	global	_fputc
 15095                           
 15096 ;; *************** function _fputc *****************
 15097 ;; Defined at:
 15098 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 15099 ;; Parameters:    Size  Location     Type
 15100 ;;  c               2    0[COMRAM] int 
 15101 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 15102 ;;		 -> sprintf@f(6), 
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;		None
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  2    0[COMRAM] int 
 15107 ;; Registers used:
 15108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15114 ;;      Params:         4       0       0       0       0       0       0       0       0
 15115 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15116 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15117 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15118 ;;Total ram usage:        9 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:    1
 15121 ;; This function calls:
 15122 ;;		_putch
 15123 ;; This function is called by:
 15124 ;;		_pad
 15125 ;;		_vfpfcnvrt
 15126 ;;		_fputs
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           psect	text31,class=CODE,space=0,reloc=2,group=2
 15130                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 15131                           	line	8
 15132                           global __ptext31
 15133                           __ptext31:
 15134  004916                     psect	text31
 15135                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 15136                           	line	8
 15137                           	global	__size_of_fputc
 15138                           	__size_of_fputc	equ	__end_of_fputc-_fputc
 15139  0000                     	
 15140                           _fputc:
 15141  004916                     ;incstack = 0
 15142                           	opt	stack 24
 15143                           	line	12
 15144                           	
 15145                           l3199:
 15146  004916                     	movf	((c:fputc@fp)),c,w
 15147  004916  5003               iorwf	((c:fputc@fp+1)),c,w
 15148  004918  1004               	btfsc	status,2
 15149  00491A  B4D8               	goto	u3621
 15150  00491C  EF92  F024         	goto	u3620
 15151  004920  EF94  F024         
 15152                           u3621:
 15153  004924                     	goto	l3203
 15154  004924  EF9F  F024         u3620:
 15155  004928                     	
 15156                           l3201:
 15157  004928                     	movf	((c:fputc@fp)),c,w
 15158  004928  5003               iorwf	((c:fputc@fp+1)),c,w
 15159  00492A  1004               	btfss	status,2
 15160  00492C  A4D8               	goto	u3631
 15161  00492E  EF9B  F024         	goto	u3630
 15162  004932  EF9D  F024         
 15163                           u3631:
 15164  004936                     	goto	l3205
 15165  004936  EFA4  F024         u3630:
 15166  00493A                     	goto	l3203
 15167  00493A  EF9F  F024         	
 15168                           l1190:
 15169  00493E                     	line	13
 15170                           	
 15171                           l3203:
 15172  00493E                     	movf	((c:fputc@c)),c,w
 15173  00493E  5001               	
 15174                           	call	_putch
 15175  004940  ECD2  F02B         	line	14
 15176                           	goto	l1195
 15177  004944  EFF9  F024         	
 15178                           l1188:
 15179  004948                     	line	15
 15180                           	
 15181                           l3205:
 15182  004948                     	lfsr	2,04h
 15183  004948  EE20 F004          	movf	((c:fputc@fp)),c,w
 15184  00494C  5003               	addwf	fsr2l
 15185  00494E  26D9               	movf	((c:fputc@fp+1)),c,w
 15186  004950  5004               	addwfc	fsr2h
 15187  004952  22DA               	movf	postinc2,w
 15188  004954  50DE               iorwf	postinc2,w
 15189  004956  10DE               	btfsc	status,2
 15190  004958  B4D8               	goto	u3641
 15191  00495A  EFB1  F024         	goto	u3640
 15192  00495E  EFB3  F024         
 15193                           u3641:
 15194  004962                     	goto	l3209
 15195  004962  EFD0  F024         u3640:
 15196  004966                     	
 15197                           l3207:
 15198  004966                     	lfsr	2,04h
 15199  004966  EE20 F004          	movf	((c:fputc@fp)),c,w
 15200  00496A  5003               	addwf	fsr2l
 15201  00496C  26D9               	movf	((c:fputc@fp+1)),c,w
 15202  00496E  5004               	addwfc	fsr2h
 15203  004970  22DA               	lfsr	1,02h
 15204  004972  EE10 F002          	movf	((c:fputc@fp)),c,w
 15205  004976  5003               	addwf	fsr1l
 15206  004978  26E1               	movf	((c:fputc@fp+1)),c,w
 15207  00497A  5004               	addwfc	fsr1h
 15208  00497C  22E2               		movf	postinc2,w
 15209  00497E  50DE               	subwf	postinc1,w
 15210  004980  5CE6               	movf	postinc1,w
 15211  004982  50E6               	xorlw	80h
 15212  004984  0A80               	movwf	(??_fputc+4+0)&0ffh,c
 15213  004986  6E09               	movf	postinc2,w
 15214  004988  50DE               	xorlw	80h
 15215  00498A  0A80               	subwfb	(??_fputc+4+0)&0ffh,c,w
 15216  00498C  5809               	btfsc	status,0
 15217  00498E  B0D8               	goto	u3651
 15218  004990  EFCC  F024         	goto	u3650
 15219  004994  EFCE  F024         
 15220                           u3651:
 15221  004998                     	goto	l1195
 15222  004998  EFF9  F024         u3650:
 15223  00499C                     	goto	l3209
 15224  00499C  EFD0  F024         	
 15225                           l1194:
 15226  0049A0                     	line	16
 15227                           	
 15228                           l3209:
 15229  0049A0                     	lfsr	2,02h
 15230  0049A0  EE20 F002          	movf	((c:fputc@fp)),c,w
 15231  0049A4  5003               	addwf	fsr2l
 15232  0049A6  26D9               	movf	((c:fputc@fp+1)),c,w
 15233  0049A8  5004               	addwfc	fsr2h
 15234  0049AA  22DA               	movff	postinc2,??_fputc+0+0
 15235  0049AC  CFDE F005          	movff	postdec2,??_fputc+0+0+1
 15236  0049B0  CFDD F006          	movff	(c:fputc@fp),fsr2l
 15237  0049B4  C003  FFD9         	movff	(c:fputc@fp+1),fsr2h
 15238  0049B8  C004  FFDA         	movff	postinc2,??_fputc+2+0
 15239  0049BC  CFDE F007          	movff	postdec2,??_fputc+2+0+1
 15240  0049C0  CFDD F008          	movf	(??_fputc+0+0),c,w
 15241  0049C4  5005               	addwf	(??_fputc+2+0),c,w
 15242  0049C6  2407               	movwf	c:fsr2l
 15243  0049C8  6ED9               	movf	(??_fputc+0+1),c,w
 15244  0049CA  5006               	addwfc	(??_fputc+2+1),c,w
 15245  0049CC  2008               	movwf	1+c:fsr2l
 15246  0049CE  6EDA               	movff	(c:fputc@c),indf2
 15247  0049D0  C001  FFDF         
 15248                           	line	17
 15249                           	lfsr	2,02h
 15250  0049D4  EE20 F002          	movf	((c:fputc@fp)),c,w
 15251  0049D8  5003               	addwf	fsr2l
 15252  0049DA  26D9               	movf	((c:fputc@fp+1)),c,w
 15253  0049DC  5004               	addwfc	fsr2h
 15254  0049DE  22DA               	incf	postinc2
 15255  0049E0  2ADE               	movlw	0
 15256  0049E2  0E00               	addwfc	postdec2
 15257  0049E4  22DD               	goto	l1195
 15258  0049E6  EFF9  F024         	line	18
 15259                           	
 15260                           l1192:
 15261  0049EA                     	goto	l1195
 15262  0049EA  EFF9  F024         	line	19
 15263                           	
 15264                           l1191:
 15265  0049EE                     	goto	l1195
 15266  0049EE  EFF9  F024         	line	20
 15267                           	
 15268                           l3211:
 15269  0049F2                     	line	21
 15270                           ;	Return value of _fputc is never used
 15271                           	
 15272                           l1195:
 15273  0049F2                     	return	;funcret
 15274  0049F2  0012               	opt stack 0
 15275                           GLOBAL	__end_of_fputc
 15276                           	__end_of_fputc:
 15277  0049F4                     	signat	_fputc,8314
 15278                           	global	_putch
 15279                           
 15280 ;; *************** function _putch *****************
 15281 ;; Defined at:
 15282 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 15283 ;; Parameters:    Size  Location     Type
 15284 ;;  c               1    wreg     unsigned char 
 15285 ;; Auto vars:     Size  Location     Type
 15286 ;;  c               1    0[COMRAM] unsigned char 
 15287 ;; Return value:  Size  Location     Type
 15288 ;;                  1    wreg      void 
 15289 ;; Registers used:
 15290 ;;		wreg
 15291 ;; Tracked objects:
 15292 ;;		On entry : 0/0
 15293 ;;		On exit  : 0/0
 15294 ;;		Unchanged: 0/0
 15295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15296 ;;      Params:         0       0       0       0       0       0       0       0       0
 15297 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15298 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15299 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15300 ;;Total ram usage:        0 bytes
 15301 ;; Hardware stack levels used:    1
 15302 ;; This function calls:
 15303 ;;		Nothing
 15304 ;; This function is called by:
 15305 ;;		_fputc
 15306 ;; This function uses a non-reentrant model
 15307 ;;
 15308                           psect	text32,class=CODE,space=0,reloc=2,group=2
 15309                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 15310                           	line	7
 15311                           global __ptext32
 15312                           __ptext32:
 15313  0057A4                     psect	text32
 15314                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 15315                           	line	7
 15316                           	global	__size_of_putch
 15317                           	__size_of_putch	equ	__end_of_putch-_putch
 15318  0000                     	
 15319                           _putch:
 15320  0057A4                     ;incstack = 0
 15321                           	opt	stack 24
 15322                           	line	9
 15323                           	
 15324                           l1213:
 15325  0057A4                     	return	;funcret
 15326  0057A4  0012               	opt stack 0
 15327                           GLOBAL	__end_of_putch
 15328                           	__end_of_putch:
 15329  0057A6                     	signat	_putch,4217
 15330                           	global	_abs
 15331                           
 15332 ;; *************** function _abs *****************
 15333 ;; Defined at:
 15334 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;  a               2   18[COMRAM] int 
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;		None
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  2   18[COMRAM] int 
 15341 ;; Registers used:
 15342 ;;		wreg, status,2, status,0
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15348 ;;      Params:         2       0       0       0       0       0       0       0       0
 15349 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15350 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15351 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15352 ;;Total ram usage:        4 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; This function calls:
 15355 ;;		Nothing
 15356 ;; This function is called by:
 15357 ;;		_dtoa
 15358 ;; This function uses a non-reentrant model
 15359 ;;
 15360                           psect	text33,class=CODE,space=0,reloc=2,group=2
 15361                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 15362                           	line	1
 15363                           global __ptext33
 15364                           __ptext33:
 15365  0055B6                     psect	text33
 15366                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 15367                           	line	1
 15368                           	global	__size_of_abs
 15369                           	__size_of_abs	equ	__end_of_abs-_abs
 15370  0000                     	
 15371                           _abs:
 15372  0055B6                     ;incstack = 0
 15373                           	opt	stack 24
 15374                           	line	3
 15375                           	
 15376                           l3253:
 15377  0055B6                     	btfsc	((c:abs@a+1)),c,7
 15378  0055B6  BE14               	goto	u3720
 15379  0055B8  EFE8  F02A         	movf	((c:abs@a+1)),c,w
 15380  0055BC  5014               	bnz	u3721
 15381  0055BE  E106               	decf	((c:abs@a)),c,w
 15382  0055C0  0413               	btfsc	status,0
 15383  0055C2  B0D8               	goto	u3721
 15384  0055C4  EFE6  F02A         	goto	u3720
 15385  0055C8  EFE8  F02A         
 15386                           u3721:
 15387  0055CC                     	goto	l1135
 15388  0055CC  EFF6  F02A         u3720:
 15389  0055D0                     	
 15390                           l3255:
 15391  0055D0                     	movff	(c:abs@a),??_abs+0+0
 15392  0055D0  C013  F015         	movff	(c:abs@a+1),??_abs+0+0+1
 15393  0055D4  C014  F016         	comf	(??_abs+0+0),c
 15394  0055D8  1E15               	comf	(??_abs+0+1),c
 15395  0055DA  1E16               	infsnz	(??_abs+0+0),c
 15396  0055DC  4A15               	incf	(??_abs+0+1),c
 15397  0055DE  2A16               	movff	??_abs+0+0,(c:?_abs)
 15398  0055E0  C015  F013         	movff	??_abs+0+1,(c:?_abs+1)
 15399  0055E4  C016  F014         	goto	l1138
 15400  0055E8  EFFC  F02A         	
 15401                           l1135:
 15402  0055EC                     	movff	(c:abs@a),(c:?_abs)
 15403  0055EC  C013  F013         	movff	(c:abs@a+1),(c:?_abs+1)
 15404  0055F0  C014  F014         	goto	l1138
 15405  0055F4  EFFC  F02A         	
 15406                           l1137:
 15407  0055F8                     	line	4
 15408                           	
 15409                           l1138:
 15410  0055F8                     	return	;funcret
 15411  0055F8  0012               	opt stack 0
 15412                           GLOBAL	__end_of_abs
 15413                           	__end_of_abs:
 15414  0055FA                     	signat	_abs,4218
 15415                           	global	___aomod
 15416                           
 15417 ;; *************** function ___aomod *****************
 15418 ;; Defined at:
 15419 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
 15420 ;; Parameters:    Size  Location     Type
 15421 ;;  dividend        8    0[COMRAM] long long 
 15422 ;;  divisor         8    8[COMRAM] long long 
 15423 ;; Auto vars:     Size  Location     Type
 15424 ;;  sign            1   17[COMRAM] unsigned char 
 15425 ;;  counter         1   16[COMRAM] unsigned char 
 15426 ;; Return value:  Size  Location     Type
 15427 ;;                  8    0[COMRAM] long long 
 15428 ;; Registers used:
 15429 ;;		wreg, status,2, status,0
 15430 ;; Tracked objects:
 15431 ;;		On entry : 0/0
 15432 ;;		On exit  : 0/0
 15433 ;;		Unchanged: 0/0
 15434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15435 ;;      Params:        16       0       0       0       0       0       0       0       0
 15436 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15437 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15438 ;;      Totals:        18       0       0       0       0       0       0       0       0
 15439 ;;Total ram usage:       18 bytes
 15440 ;; Hardware stack levels used:    1
 15441 ;; This function calls:
 15442 ;;		Nothing
 15443 ;; This function is called by:
 15444 ;;		_dtoa
 15445 ;; This function uses a non-reentrant model
 15446 ;;
 15447                           psect	text34,class=CODE,space=0,reloc=2,group=1
 15448                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
 15449                           	line	9
 15450                           global __ptext34
 15451                           __ptext34:
 15452  003F38                     psect	text34
 15453                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
 15454                           	line	9
 15455                           	global	__size_of___aomod
 15456                           	__size_of___aomod	equ	__end_of___aomod-___aomod
 15457  0000                     	
 15458                           ___aomod:
 15459  003F38                     ;incstack = 0
 15460                           	opt	stack 24
 15461                           	line	14
 15462                           	
 15463                           l3301:
 15464  003F38                     	movlw	low(0)
 15465  003F38  0E00               	movwf	((c:___aomod@sign)),c
 15466  003F3A  6E12               	line	15
 15467                           	
 15468                           l3303:
 15469  003F3C                     	btfsc	((c:___aomod@dividend+7)),c,7
 15470  003F3C  BE08               	goto	u3800
 15471  003F3E  EFA5  F01F         	goto	u3801
 15472  003F42  EFA3  F01F         
 15473                           u3801:
 15474  003F46                     	goto	l3309
 15475  003F46  EFB9  F01F         u3800:
 15476  003F4A                     	line	16
 15477                           	
 15478                           l3305:
 15479  003F4A                     	comf	((c:___aomod@dividend+7)),c
 15480  003F4A  1E08               	comf	((c:___aomod@dividend+6)),c
 15481  003F4C  1E07               	comf	((c:___aomod@dividend+5)),c
 15482  003F4E  1E06               	comf	((c:___aomod@dividend+4)),c
 15483  003F50  1E05               	comf	((c:___aomod@dividend+3)),c
 15484  003F52  1E04               	comf	((c:___aomod@dividend+2)),c
 15485  003F54  1E03               	comf	((c:___aomod@dividend+1)),c
 15486  003F56  1E02               	negf	((c:___aomod@dividend)),c
 15487  003F58  6C01               	movlw	0
 15488  003F5A  0E00               	addwfc	((c:___aomod@dividend+1)),c
 15489  003F5C  2202               	addwfc	((c:___aomod@dividend+2)),c
 15490  003F5E  2203               	addwfc	((c:___aomod@dividend+3)),c
 15491  003F60  2204               	addwfc	((c:___aomod@dividend+4)),c
 15492  003F62  2205               	addwfc	((c:___aomod@dividend+5)),c
 15493  003F64  2206               	addwfc	((c:___aomod@dividend+6)),c
 15494  003F66  2207               	addwfc	((c:___aomod@dividend+7)),c
 15495  003F68  2208               	line	17
 15496                           	
 15497                           l3307:
 15498  003F6A                     	movlw	low(01h)
 15499  003F6A  0E01               	movwf	((c:___aomod@sign)),c
 15500  003F6C  6E12               	goto	l3309
 15501  003F6E  EFB9  F01F         	line	18
 15502                           	
 15503                           l577:
 15504  003F72                     	line	19
 15505                           	
 15506                           l3309:
 15507  003F72                     	btfsc	((c:___aomod@divisor+7)),c,7
 15508  003F72  BE10               	goto	u3810
 15509  003F74  EFC0  F01F         	goto	u3811
 15510  003F78  EFBE  F01F         
 15511                           u3811:
 15512  003F7C                     	goto	l3313
 15513  003F7C  EFD2  F01F         u3810:
 15514  003F80                     	line	20
 15515                           	
 15516                           l3311:
 15517  003F80                     	comf	((c:___aomod@divisor+7)),c
 15518  003F80  1E10               	comf	((c:___aomod@divisor+6)),c
 15519  003F82  1E0F               	comf	((c:___aomod@divisor+5)),c
 15520  003F84  1E0E               	comf	((c:___aomod@divisor+4)),c
 15521  003F86  1E0D               	comf	((c:___aomod@divisor+3)),c
 15522  003F88  1E0C               	comf	((c:___aomod@divisor+2)),c
 15523  003F8A  1E0B               	comf	((c:___aomod@divisor+1)),c
 15524  003F8C  1E0A               	negf	((c:___aomod@divisor)),c
 15525  003F8E  6C09               	movlw	0
 15526  003F90  0E00               	addwfc	((c:___aomod@divisor+1)),c
 15527  003F92  220A               	addwfc	((c:___aomod@divisor+2)),c
 15528  003F94  220B               	addwfc	((c:___aomod@divisor+3)),c
 15529  003F96  220C               	addwfc	((c:___aomod@divisor+4)),c
 15530  003F98  220D               	addwfc	((c:___aomod@divisor+5)),c
 15531  003F9A  220E               	addwfc	((c:___aomod@divisor+6)),c
 15532  003F9C  220F               	addwfc	((c:___aomod@divisor+7)),c
 15533  003F9E  2210               	goto	l3313
 15534  003FA0  EFD2  F01F         	
 15535                           l578:
 15536  003FA4                     	line	21
 15537                           	
 15538                           l3313:
 15539  003FA4                     	movf	((c:___aomod@divisor)),c,w
 15540  003FA4  5009               iorwf	((c:___aomod@divisor+1)),c,w
 15541  003FA6  100A               iorwf	((c:___aomod@divisor+2)),c,w
 15542  003FA8  100B               iorwf	((c:___aomod@divisor+3)),c,w
 15543  003FAA  100C               iorwf	((c:___aomod@divisor+4)),c,w
 15544  003FAC  100D               iorwf	((c:___aomod@divisor+5)),c,w
 15545  003FAE  100E               iorwf	((c:___aomod@divisor+6)),c,w
 15546  003FB0  100F               iorwf	((c:___aomod@divisor+7)),c,w
 15547  003FB2  1010               	btfsc	status,2
 15548  003FB4  B4D8               	goto	u3821
 15549  003FB6  EFDF  F01F         	goto	u3820
 15550  003FBA  EFE1  F01F         
 15551                           u3821:
 15552  003FBE                     	goto	l3329
 15553  003FBE  EF35  F020         u3820:
 15554  003FC2                     	line	22
 15555                           	
 15556                           l3315:
 15557  003FC2                     	movlw	low(01h)
 15558  003FC2  0E01               	movwf	((c:___aomod@counter)),c
 15559  003FC4  6E11               	line	23
 15560                           	goto	l3319
 15561  003FC6  EFF1  F01F         	
 15562                           l581:
 15563  003FCA                     	line	24
 15564                           	
 15565                           l3317:
 15566  003FCA                     	bcf	status,0
 15567  003FCA  90D8               	rlcf	((c:___aomod@divisor)),c
 15568  003FCC  3609               	rlcf	((c:___aomod@divisor+1)),c
 15569  003FCE  360A               	rlcf	((c:___aomod@divisor+2)),c
 15570  003FD0  360B               	rlcf	((c:___aomod@divisor+3)),c
 15571  003FD2  360C               	rlcf	((c:___aomod@divisor+4)),c
 15572  003FD4  360D               	rlcf	((c:___aomod@divisor+5)),c
 15573  003FD6  360E               	rlcf	((c:___aomod@divisor+6)),c
 15574  003FD8  360F               	rlcf	((c:___aomod@divisor+7)),c
 15575  003FDA  3610               	line	25
 15576                           	incf	((c:___aomod@counter)),c
 15577  003FDC  2A11               	goto	l3319
 15578  003FDE  EFF1  F01F         	line	26
 15579                           	
 15580                           l580:
 15581  003FE2                     	line	23
 15582                           	
 15583                           l3319:
 15584  003FE2                     	
 15585                           	btfss	((c:___aomod@divisor+7)),c,(63)&7
 15586  003FE2  AE10               	goto	u3831
 15587  003FE4  EFF6  F01F         	goto	u3830
 15588  003FE8  EFF8  F01F         u3831:
 15589  003FEC                     	goto	l3317
 15590  003FEC  EFE5  F01F         u3830:
 15591  003FF0                     	goto	l3321
 15592  003FF0  EFFC  F01F         	
 15593                           l582:
 15594  003FF4                     	goto	l3321
 15595  003FF4  EFFC  F01F         	line	27
 15596                           	
 15597                           l583:
 15598  003FF8                     	line	28
 15599                           	
 15600                           l3321:
 15601  003FF8                     		movf	((c:___aomod@divisor)),c,w
 15602  003FF8  5009               	subwf	((c:___aomod@dividend)),c,w
 15603  003FFA  5C01               	movf	((c:___aomod@divisor+1)),c,w
 15604  003FFC  500A               	subwfb	((c:___aomod@dividend+1)),c,w
 15605  003FFE  5802               	movf	((c:___aomod@divisor+2)),c,w
 15606  004000  500B               	subwfb	((c:___aomod@dividend+2)),c,w
 15607  004002  5803               	movf	((c:___aomod@divisor+3)),c,w
 15608  004004  500C               	subwfb	((c:___aomod@dividend+3)),c,w
 15609  004006  5804               	movf	((c:___aomod@divisor+4)),c,w
 15610  004008  500D               	subwfb	((c:___aomod@dividend+4)),c,w
 15611  00400A  5805               	movf	((c:___aomod@divisor+5)),c,w
 15612  00400C  500E               	subwfb	((c:___aomod@dividend+5)),c,w
 15613  00400E  5806               	movf	((c:___aomod@divisor+6)),c,w
 15614  004010  500F               	subwfb	((c:___aomod@dividend+6)),c,w
 15615  004012  5807               	movf	((c:___aomod@divisor+7)),c,w
 15616  004014  5010               	subwfb	((c:___aomod@dividend+7)),c,w
 15617  004016  5808               	btfss	status,0
 15618  004018  A0D8               	goto	u3841
 15619  00401A  EF11  F020         	goto	u3840
 15620  00401E  EF13  F020         
 15621                           u3841:
 15622  004022                     	goto	l3325
 15623  004022  EF25  F020         u3840:
 15624  004026                     	line	29
 15625                           	
 15626                           l3323:
 15627  004026                     	movf	((c:___aomod@divisor)),c,w
 15628  004026  5009               	subwf	((c:___aomod@dividend)),c
 15629  004028  5E01               	movf	((c:___aomod@divisor+1)),c,w
 15630  00402A  500A               	subwfb	((c:___aomod@dividend+1)),c
 15631  00402C  5A02               	movf	((c:___aomod@divisor+2)),c,w
 15632  00402E  500B               	subwfb	((c:___aomod@dividend+2)),c
 15633  004030  5A03               	movf	((c:___aomod@divisor+3)),c,w
 15634  004032  500C               	subwfb	((c:___aomod@dividend+3)),c
 15635  004034  5A04               	movf	((c:___aomod@divisor+4)),c,w
 15636  004036  500D               	subwfb	((c:___aomod@dividend+4)),c
 15637  004038  5A05               	movf	((c:___aomod@divisor+5)),c,w
 15638  00403A  500E               	subwfb	((c:___aomod@dividend+5)),c
 15639  00403C  5A06               	movf	((c:___aomod@divisor+6)),c,w
 15640  00403E  500F               	subwfb	((c:___aomod@dividend+6)),c
 15641  004040  5A07               	movf	((c:___aomod@divisor+7)),c,w
 15642  004042  5010               	subwfb	((c:___aomod@dividend+7)),c
 15643  004044  5A08               	goto	l3325
 15644  004046  EF25  F020         	
 15645                           l584:
 15646  00404A                     	line	30
 15647                           	
 15648                           l3325:
 15649  00404A                     	bcf	status,0
 15650  00404A  90D8               	rrcf	((c:___aomod@divisor+7)),c
 15651  00404C  3210               	rrcf	((c:___aomod@divisor+6)),c
 15652  00404E  320F               	rrcf	((c:___aomod@divisor+5)),c
 15653  004050  320E               	rrcf	((c:___aomod@divisor+4)),c
 15654  004052  320D               	rrcf	((c:___aomod@divisor+3)),c
 15655  004054  320C               	rrcf	((c:___aomod@divisor+2)),c
 15656  004056  320B               	rrcf	((c:___aomod@divisor+1)),c
 15657  004058  320A               	rrcf	((c:___aomod@divisor)),c
 15658  00405A  3209               	line	31
 15659                           	
 15660                           l3327:
 15661  00405C                     	decfsz	((c:___aomod@counter)),c
 15662  00405C  2E11               	
 15663                           	goto	l3321
 15664  00405E  EFFC  F01F         	goto	l3329
 15665  004062  EF35  F020         	
 15666                           l585:
 15667  004066                     	goto	l3329
 15668  004066  EF35  F020         	line	32
 15669                           	
 15670                           l579:
 15671  00406A                     	line	33
 15672                           	
 15673                           l3329:
 15674  00406A                     	movf	((c:___aomod@sign)),c,w
 15675  00406A  5012               	btfsc	status,2
 15676  00406C  B4D8               	goto	u3851
 15677  00406E  EF3B  F020         	goto	u3850
 15678  004072  EF3D  F020         u3851:
 15679  004076                     	goto	l3333
 15680  004076  EF4F  F020         u3850:
 15681  00407A                     	line	34
 15682                           	
 15683                           l3331:
 15684  00407A                     	comf	((c:___aomod@dividend+7)),c
 15685  00407A  1E08               	comf	((c:___aomod@dividend+6)),c
 15686  00407C  1E07               	comf	((c:___aomod@dividend+5)),c
 15687  00407E  1E06               	comf	((c:___aomod@dividend+4)),c
 15688  004080  1E05               	comf	((c:___aomod@dividend+3)),c
 15689  004082  1E04               	comf	((c:___aomod@dividend+2)),c
 15690  004084  1E03               	comf	((c:___aomod@dividend+1)),c
 15691  004086  1E02               	negf	((c:___aomod@dividend)),c
 15692  004088  6C01               	movlw	0
 15693  00408A  0E00               	addwfc	((c:___aomod@dividend+1)),c
 15694  00408C  2202               	addwfc	((c:___aomod@dividend+2)),c
 15695  00408E  2203               	addwfc	((c:___aomod@dividend+3)),c
 15696  004090  2204               	addwfc	((c:___aomod@dividend+4)),c
 15697  004092  2205               	addwfc	((c:___aomod@dividend+5)),c
 15698  004094  2206               	addwfc	((c:___aomod@dividend+6)),c
 15699  004096  2207               	addwfc	((c:___aomod@dividend+7)),c
 15700  004098  2208               	goto	l3333
 15701  00409A  EF4F  F020         	
 15702                           l586:
 15703  00409E                     	line	35
 15704                           	
 15705                           l3333:
 15706  00409E                     	movff	(c:___aomod@dividend),(c:?___aomod)
 15707  00409E  C001  F001         	movff	(c:___aomod@dividend+1),(c:?___aomod+1)
 15708  0040A2  C002  F002         	movff	(c:___aomod@dividend+2),(c:?___aomod+2)
 15709  0040A6  C003  F003         	movff	(c:___aomod@dividend+3),(c:?___aomod+3)
 15710  0040AA  C004  F004         	movff	(c:___aomod@dividend+4),(c:?___aomod+4)
 15711  0040AE  C005  F005         	movff	(c:___aomod@dividend+5),(c:?___aomod+5)
 15712  0040B2  C006  F006         	movff	(c:___aomod@dividend+6),(c:?___aomod+6)
 15713  0040B6  C007  F007         	movff	(c:___aomod@dividend+7),(c:?___aomod+7)
 15714  0040BA  C008  F008         	goto	l587
 15715  0040BE  EF61  F020         	
 15716                           l3335:
 15717  0040C2                     	line	36
 15718                           	
 15719                           l587:
 15720  0040C2                     	return	;funcret
 15721  0040C2  0012               	opt stack 0
 15722                           GLOBAL	__end_of___aomod
 15723                           	__end_of___aomod:
 15724  0040C4                     	signat	___aomod,8319
 15725                           	global	___aodiv
 15726                           
 15727 ;; *************** function ___aodiv *****************
 15728 ;; Defined at:
 15729 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
 15730 ;; Parameters:    Size  Location     Type
 15731 ;;  dividend        8    0[COMRAM] long long 
 15732 ;;  divisor         8    8[COMRAM] long long 
 15733 ;; Auto vars:     Size  Location     Type
 15734 ;;  quotient        8   18[COMRAM] long long 
 15735 ;;  sign            1   17[COMRAM] unsigned char 
 15736 ;;  counter         1   16[COMRAM] unsigned char 
 15737 ;; Return value:  Size  Location     Type
 15738 ;;                  8    0[COMRAM] long long 
 15739 ;; Registers used:
 15740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15741 ;; Tracked objects:
 15742 ;;		On entry : 0/0
 15743 ;;		On exit  : 0/0
 15744 ;;		Unchanged: 0/0
 15745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15746 ;;      Params:        16       0       0       0       0       0       0       0       0
 15747 ;;      Locals:        10       0       0       0       0       0       0       0       0
 15748 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15749 ;;      Totals:        26       0       0       0       0       0       0       0       0
 15750 ;;Total ram usage:       26 bytes
 15751 ;; Hardware stack levels used:    1
 15752 ;; This function calls:
 15753 ;;		Nothing
 15754 ;; This function is called by:
 15755 ;;		_dtoa
 15756 ;; This function uses a non-reentrant model
 15757 ;;
 15758                           psect	text35,class=CODE,space=0,reloc=2,group=1
 15759                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
 15760                           	line	9
 15761                           global __ptext35
 15762                           __ptext35:
 15763  003D88                     psect	text35
 15764                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
 15765                           	line	9
 15766                           	global	__size_of___aodiv
 15767                           	__size_of___aodiv	equ	__end_of___aodiv-___aodiv
 15768  0000                     	
 15769                           ___aodiv:
 15770  003D88                     ;incstack = 0
 15771                           	opt	stack 24
 15772                           	line	15
 15773                           	
 15774                           l3257:
 15775  003D88                     	movlw	low(0)
 15776  003D88  0E00               	movwf	((c:___aodiv@sign)),c
 15777  003D8A  6E12               	line	16
 15778                           	
 15779                           l3259:
 15780  003D8C                     	btfsc	((c:___aodiv@divisor+7)),c,7
 15781  003D8C  BE10               	goto	u3730
 15782  003D8E  EFCD  F01E         	goto	u3731
 15783  003D92  EFCB  F01E         
 15784                           u3731:
 15785  003D96                     	goto	l3265
 15786  003D96  EFE1  F01E         u3730:
 15787  003D9A                     	line	17
 15788                           	
 15789                           l3261:
 15790  003D9A                     	comf	((c:___aodiv@divisor+7)),c
 15791  003D9A  1E10               	comf	((c:___aodiv@divisor+6)),c
 15792  003D9C  1E0F               	comf	((c:___aodiv@divisor+5)),c
 15793  003D9E  1E0E               	comf	((c:___aodiv@divisor+4)),c
 15794  003DA0  1E0D               	comf	((c:___aodiv@divisor+3)),c
 15795  003DA2  1E0C               	comf	((c:___aodiv@divisor+2)),c
 15796  003DA4  1E0B               	comf	((c:___aodiv@divisor+1)),c
 15797  003DA6  1E0A               	negf	((c:___aodiv@divisor)),c
 15798  003DA8  6C09               	movlw	0
 15799  003DAA  0E00               	addwfc	((c:___aodiv@divisor+1)),c
 15800  003DAC  220A               	addwfc	((c:___aodiv@divisor+2)),c
 15801  003DAE  220B               	addwfc	((c:___aodiv@divisor+3)),c
 15802  003DB0  220C               	addwfc	((c:___aodiv@divisor+4)),c
 15803  003DB2  220D               	addwfc	((c:___aodiv@divisor+5)),c
 15804  003DB4  220E               	addwfc	((c:___aodiv@divisor+6)),c
 15805  003DB6  220F               	addwfc	((c:___aodiv@divisor+7)),c
 15806  003DB8  2210               	line	18
 15807                           	
 15808                           l3263:
 15809  003DBA                     	movlw	low(01h)
 15810  003DBA  0E01               	movwf	((c:___aodiv@sign)),c
 15811  003DBC  6E12               	goto	l3265
 15812  003DBE  EFE1  F01E         	line	19
 15813                           	
 15814                           l564:
 15815  003DC2                     	line	20
 15816                           	
 15817                           l3265:
 15818  003DC2                     	btfsc	((c:___aodiv@dividend+7)),c,7
 15819  003DC2  BE08               	goto	u3740
 15820  003DC4  EFE8  F01E         	goto	u3741
 15821  003DC8  EFE6  F01E         
 15822                           u3741:
 15823  003DCC                     	goto	l3271
 15824  003DCC  EFFC  F01E         u3740:
 15825  003DD0                     	line	21
 15826                           	
 15827                           l3267:
 15828  003DD0                     	comf	((c:___aodiv@dividend+7)),c
 15829  003DD0  1E08               	comf	((c:___aodiv@dividend+6)),c
 15830  003DD2  1E07               	comf	((c:___aodiv@dividend+5)),c
 15831  003DD4  1E06               	comf	((c:___aodiv@dividend+4)),c
 15832  003DD6  1E05               	comf	((c:___aodiv@dividend+3)),c
 15833  003DD8  1E04               	comf	((c:___aodiv@dividend+2)),c
 15834  003DDA  1E03               	comf	((c:___aodiv@dividend+1)),c
 15835  003DDC  1E02               	negf	((c:___aodiv@dividend)),c
 15836  003DDE  6C01               	movlw	0
 15837  003DE0  0E00               	addwfc	((c:___aodiv@dividend+1)),c
 15838  003DE2  2202               	addwfc	((c:___aodiv@dividend+2)),c
 15839  003DE4  2203               	addwfc	((c:___aodiv@dividend+3)),c
 15840  003DE6  2204               	addwfc	((c:___aodiv@dividend+4)),c
 15841  003DE8  2205               	addwfc	((c:___aodiv@dividend+5)),c
 15842  003DEA  2206               	addwfc	((c:___aodiv@dividend+6)),c
 15843  003DEC  2207               	addwfc	((c:___aodiv@dividend+7)),c
 15844  003DEE  2208               	line	22
 15845                           	
 15846                           l3269:
 15847  003DF0                     	movlw	(01h)&0ffh
 15848  003DF0  0E01               	xorwf	((c:___aodiv@sign)),c
 15849  003DF2  1A12               	goto	l3271
 15850  003DF4  EFFC  F01E         	line	23
 15851                           	
 15852                           l565:
 15853  003DF8                     	line	24
 15854                           	
 15855                           l3271:
 15856  003DF8                     	lfsr	2,(___aodiv@quotient)
 15857  003DF8  EE20  F013         	movlw	8-1
 15858  003DFC  0E07               u3751:
 15859  003DFE                     	clrf	postinc2
 15860  003DFE  6ADE               	decf	wreg
 15861  003E00  06E8               	bc	u3751
 15862  003E02  E2FD               	line	25
 15863                           	
 15864                           l3273:
 15865  003E04                     	movf	((c:___aodiv@divisor)),c,w
 15866  003E04  5009               iorwf	((c:___aodiv@divisor+1)),c,w
 15867  003E06  100A               iorwf	((c:___aodiv@divisor+2)),c,w
 15868  003E08  100B               iorwf	((c:___aodiv@divisor+3)),c,w
 15869  003E0A  100C               iorwf	((c:___aodiv@divisor+4)),c,w
 15870  003E0C  100D               iorwf	((c:___aodiv@divisor+5)),c,w
 15871  003E0E  100E               iorwf	((c:___aodiv@divisor+6)),c,w
 15872  003E10  100F               iorwf	((c:___aodiv@divisor+7)),c,w
 15873  003E12  1010               	btfsc	status,2
 15874  003E14  B4D8               	goto	u3761
 15875  003E16  EF0F  F01F         	goto	u3760
 15876  003E1A  EF11  F01F         
 15877                           u3761:
 15878  003E1E                     	goto	l3293
 15879  003E1E  EF6F  F01F         u3760:
 15880  003E22                     	line	26
 15881                           	
 15882                           l3275:
 15883  003E22                     	movlw	low(01h)
 15884  003E22  0E01               	movwf	((c:___aodiv@counter)),c
 15885  003E24  6E11               	line	27
 15886                           	goto	l3279
 15887  003E26  EF21  F01F         	
 15888                           l568:
 15889  003E2A                     	line	28
 15890                           	
 15891                           l3277:
 15892  003E2A                     	bcf	status,0
 15893  003E2A  90D8               	rlcf	((c:___aodiv@divisor)),c
 15894  003E2C  3609               	rlcf	((c:___aodiv@divisor+1)),c
 15895  003E2E  360A               	rlcf	((c:___aodiv@divisor+2)),c
 15896  003E30  360B               	rlcf	((c:___aodiv@divisor+3)),c
 15897  003E32  360C               	rlcf	((c:___aodiv@divisor+4)),c
 15898  003E34  360D               	rlcf	((c:___aodiv@divisor+5)),c
 15899  003E36  360E               	rlcf	((c:___aodiv@divisor+6)),c
 15900  003E38  360F               	rlcf	((c:___aodiv@divisor+7)),c
 15901  003E3A  3610               	line	29
 15902                           	incf	((c:___aodiv@counter)),c
 15903  003E3C  2A11               	goto	l3279
 15904  003E3E  EF21  F01F         	line	30
 15905                           	
 15906                           l567:
 15907  003E42                     	line	27
 15908                           	
 15909                           l3279:
 15910  003E42                     	
 15911                           	btfss	((c:___aodiv@divisor+7)),c,(63)&7
 15912  003E42  AE10               	goto	u3771
 15913  003E44  EF26  F01F         	goto	u3770
 15914  003E48  EF28  F01F         u3771:
 15915  003E4C                     	goto	l3277
 15916  003E4C  EF15  F01F         u3770:
 15917  003E50                     	goto	l3281
 15918  003E50  EF2C  F01F         	
 15919                           l569:
 15920  003E54                     	goto	l3281
 15921  003E54  EF2C  F01F         	line	31
 15922                           	
 15923                           l570:
 15924  003E58                     	line	32
 15925                           	
 15926                           l3281:
 15927  003E58                     	bcf	status,0
 15928  003E58  90D8               	rlcf	((c:___aodiv@quotient)),c
 15929  003E5A  3613               	rlcf	((c:___aodiv@quotient+1)),c
 15930  003E5C  3614               	rlcf	((c:___aodiv@quotient+2)),c
 15931  003E5E  3615               	rlcf	((c:___aodiv@quotient+3)),c
 15932  003E60  3616               	rlcf	((c:___aodiv@quotient+4)),c
 15933  003E62  3617               	rlcf	((c:___aodiv@quotient+5)),c
 15934  003E64  3618               	rlcf	((c:___aodiv@quotient+6)),c
 15935  003E66  3619               	rlcf	((c:___aodiv@quotient+7)),c
 15936  003E68  361A               	line	33
 15937                           	
 15938                           l3283:
 15939  003E6A                     		movf	((c:___aodiv@divisor)),c,w
 15940  003E6A  5009               	subwf	((c:___aodiv@dividend)),c,w
 15941  003E6C  5C01               	movf	((c:___aodiv@divisor+1)),c,w
 15942  003E6E  500A               	subwfb	((c:___aodiv@dividend+1)),c,w
 15943  003E70  5802               	movf	((c:___aodiv@divisor+2)),c,w
 15944  003E72  500B               	subwfb	((c:___aodiv@dividend+2)),c,w
 15945  003E74  5803               	movf	((c:___aodiv@divisor+3)),c,w
 15946  003E76  500C               	subwfb	((c:___aodiv@dividend+3)),c,w
 15947  003E78  5804               	movf	((c:___aodiv@divisor+4)),c,w
 15948  003E7A  500D               	subwfb	((c:___aodiv@dividend+4)),c,w
 15949  003E7C  5805               	movf	((c:___aodiv@divisor+5)),c,w
 15950  003E7E  500E               	subwfb	((c:___aodiv@dividend+5)),c,w
 15951  003E80  5806               	movf	((c:___aodiv@divisor+6)),c,w
 15952  003E82  500F               	subwfb	((c:___aodiv@dividend+6)),c,w
 15953  003E84  5807               	movf	((c:___aodiv@divisor+7)),c,w
 15954  003E86  5010               	subwfb	((c:___aodiv@dividend+7)),c,w
 15955  003E88  5808               	btfss	status,0
 15956  003E8A  A0D8               	goto	u3781
 15957  003E8C  EF4A  F01F         	goto	u3780
 15958  003E90  EF4C  F01F         
 15959                           u3781:
 15960  003E94                     	goto	l3289
 15961  003E94  EF5F  F01F         u3780:
 15962  003E98                     	line	34
 15963                           	
 15964                           l3285:
 15965  003E98                     	movf	((c:___aodiv@divisor)),c,w
 15966  003E98  5009               	subwf	((c:___aodiv@dividend)),c
 15967  003E9A  5E01               	movf	((c:___aodiv@divisor+1)),c,w
 15968  003E9C  500A               	subwfb	((c:___aodiv@dividend+1)),c
 15969  003E9E  5A02               	movf	((c:___aodiv@divisor+2)),c,w
 15970  003EA0  500B               	subwfb	((c:___aodiv@dividend+2)),c
 15971  003EA2  5A03               	movf	((c:___aodiv@divisor+3)),c,w
 15972  003EA4  500C               	subwfb	((c:___aodiv@dividend+3)),c
 15973  003EA6  5A04               	movf	((c:___aodiv@divisor+4)),c,w
 15974  003EA8  500D               	subwfb	((c:___aodiv@dividend+4)),c
 15975  003EAA  5A05               	movf	((c:___aodiv@divisor+5)),c,w
 15976  003EAC  500E               	subwfb	((c:___aodiv@dividend+5)),c
 15977  003EAE  5A06               	movf	((c:___aodiv@divisor+6)),c,w
 15978  003EB0  500F               	subwfb	((c:___aodiv@dividend+6)),c
 15979  003EB2  5A07               	movf	((c:___aodiv@divisor+7)),c,w
 15980  003EB4  5010               	subwfb	((c:___aodiv@dividend+7)),c
 15981  003EB6  5A08               	line	35
 15982                           	
 15983                           l3287:
 15984  003EB8                     	bsf	(0+(0/8)+(c:___aodiv@quotient)),c,(0)&7
 15985  003EB8  8013               	goto	l3289
 15986  003EBA  EF5F  F01F         	line	36
 15987                           	
 15988                           l571:
 15989  003EBE                     	line	37
 15990                           	
 15991                           l3289:
 15992  003EBE                     	bcf	status,0
 15993  003EBE  90D8               	rrcf	((c:___aodiv@divisor+7)),c
 15994  003EC0  3210               	rrcf	((c:___aodiv@divisor+6)),c
 15995  003EC2  320F               	rrcf	((c:___aodiv@divisor+5)),c
 15996  003EC4  320E               	rrcf	((c:___aodiv@divisor+4)),c
 15997  003EC6  320D               	rrcf	((c:___aodiv@divisor+3)),c
 15998  003EC8  320C               	rrcf	((c:___aodiv@divisor+2)),c
 15999  003ECA  320B               	rrcf	((c:___aodiv@divisor+1)),c
 16000  003ECC  320A               	rrcf	((c:___aodiv@divisor)),c
 16001  003ECE  3209               	line	38
 16002                           	
 16003                           l3291:
 16004  003ED0                     	decfsz	((c:___aodiv@counter)),c
 16005  003ED0  2E11               	
 16006                           	goto	l3281
 16007  003ED2  EF2C  F01F         	goto	l3293
 16008  003ED6  EF6F  F01F         	
 16009                           l572:
 16010  003EDA                     	goto	l3293
 16011  003EDA  EF6F  F01F         	line	39
 16012                           	
 16013                           l566:
 16014  003EDE                     	line	40
 16015                           	
 16016                           l3293:
 16017  003EDE                     	movf	((c:___aodiv@sign)),c,w
 16018  003EDE  5012               	btfsc	status,2
 16019  003EE0  B4D8               	goto	u3791
 16020  003EE2  EF75  F01F         	goto	u3790
 16021  003EE6  EF77  F01F         u3791:
 16022  003EEA                     	goto	l3297
 16023  003EEA  EF89  F01F         u3790:
 16024  003EEE                     	line	41
 16025                           	
 16026                           l3295:
 16027  003EEE                     	comf	((c:___aodiv@quotient+7)),c
 16028  003EEE  1E1A               	comf	((c:___aodiv@quotient+6)),c
 16029  003EF0  1E19               	comf	((c:___aodiv@quotient+5)),c
 16030  003EF2  1E18               	comf	((c:___aodiv@quotient+4)),c
 16031  003EF4  1E17               	comf	((c:___aodiv@quotient+3)),c
 16032  003EF6  1E16               	comf	((c:___aodiv@quotient+2)),c
 16033  003EF8  1E15               	comf	((c:___aodiv@quotient+1)),c
 16034  003EFA  1E14               	negf	((c:___aodiv@quotient)),c
 16035  003EFC  6C13               	movlw	0
 16036  003EFE  0E00               	addwfc	((c:___aodiv@quotient+1)),c
 16037  003F00  2214               	addwfc	((c:___aodiv@quotient+2)),c
 16038  003F02  2215               	addwfc	((c:___aodiv@quotient+3)),c
 16039  003F04  2216               	addwfc	((c:___aodiv@quotient+4)),c
 16040  003F06  2217               	addwfc	((c:___aodiv@quotient+5)),c
 16041  003F08  2218               	addwfc	((c:___aodiv@quotient+6)),c
 16042  003F0A  2219               	addwfc	((c:___aodiv@quotient+7)),c
 16043  003F0C  221A               	goto	l3297
 16044  003F0E  EF89  F01F         	
 16045                           l573:
 16046  003F12                     	line	42
 16047                           	
 16048                           l3297:
 16049  003F12                     	movff	(c:___aodiv@quotient),(c:?___aodiv)
 16050  003F12  C013  F001         	movff	(c:___aodiv@quotient+1),(c:?___aodiv+1)
 16051  003F16  C014  F002         	movff	(c:___aodiv@quotient+2),(c:?___aodiv+2)
 16052  003F1A  C015  F003         	movff	(c:___aodiv@quotient+3),(c:?___aodiv+3)
 16053  003F1E  C016  F004         	movff	(c:___aodiv@quotient+4),(c:?___aodiv+4)
 16054  003F22  C017  F005         	movff	(c:___aodiv@quotient+5),(c:?___aodiv+5)
 16055  003F26  C018  F006         	movff	(c:___aodiv@quotient+6),(c:?___aodiv+6)
 16056  003F2A  C019  F007         	movff	(c:___aodiv@quotient+7),(c:?___aodiv+7)
 16057  003F2E  C01A  F008         	goto	l574
 16058  003F32  EF9B  F01F         	
 16059                           l3299:
 16060  003F36                     	line	43
 16061                           	
 16062                           l574:
 16063  003F36                     	return	;funcret
 16064  003F36  0012               	opt stack 0
 16065                           GLOBAL	__end_of___aodiv
 16066                           	__end_of___aodiv:
 16067  003F38                     	signat	___aodiv,8319
 16068                           	global	_humid_convert
 16069                           
 16070 ;; *************** function _humid_convert *****************
 16071 ;; Defined at:
 16072 ;;		line 307 in file "main.c"
 16073 ;; Parameters:    Size  Location     Type
 16074 ;;  x               2    0[COMRAM] unsigned int 
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;  humidity        2    2[COMRAM] int 
 16077 ;; Return value:  Size  Location     Type
 16078 ;;                  2    0[COMRAM] int 
 16079 ;; Registers used:
 16080 ;;		wreg, status,2, status,0
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16086 ;;      Params:         2       0       0       0       0       0       0       0       0
 16087 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16088 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16089 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16090 ;;Total ram usage:        4 bytes
 16091 ;; Hardware stack levels used:    1
 16092 ;; This function calls:
 16093 ;;		Nothing
 16094 ;; This function is called by:
 16095 ;;		_lcd_humid
 16096 ;; This function uses a non-reentrant model
 16097 ;;
 16098                           psect	text36,class=CODE,space=0,reloc=2,group=0
 16099                           	file	"main.c"
 16100                           	line	307
 16101                           global __ptext36
 16102                           __ptext36:
 16103  001FDE                     psect	text36
 16104                           	file	"main.c"
 16105                           	line	307
 16106                           	global	__size_of_humid_convert
 16107                           	__size_of_humid_convert	equ	__end_of_humid_convert-_humid_convert
 16108  0000                     	
 16109                           _humid_convert:
 16110  001FDE                     ;incstack = 0
 16111                           	opt	stack 29
 16112                           	line	312
 16113                           	
 16114                           l4397:
 16115  001FDE                     ;main.c: 307:     int humid_convert(unsigned int x);main.c: 308:     {;main.c: 310:     
                                     int humidity;;main.c: 312:         if (x<50){humidity=5;}
 16116                           		movf	((c:humid_convert@x+1)),c,w
 16117  001FDE  5002               	bnz	u5621
 16118  001FE0  E107               	movlw	50
 16119  001FE2  0E32               	subwf	 ((c:humid_convert@x)),c,w
 16120  001FE4  5C01               	btfsc	status,0
 16121  001FE6  B0D8               	goto	u5621
 16122  001FE8  EFF8  F00F         	goto	u5620
 16123  001FEC  EFFA  F00F         
 16124                           u5621:
 16125  001FF0                     	goto	l4401
 16126  001FF0  EF00  F010         u5620:
 16127  001FF4                     	
 16128                           l4399:
 16129  001FF4                     	movlw	high(05h)
 16130  001FF4  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16131  001FF6  6E04               	movlw	low(05h)
 16132  001FF8  0E05               	movwf	((c:humid_convert@humidity)),c
 16133  001FFA  6E03               	goto	l4511
 16134  001FFC  EF22  F012         	line	313
 16135                           ;main.c: 313:         else if (x>=50 && x<100){humidity=10;}
 16136                           	
 16137                           l264:
 16138  002000                     	
 16139                           l4401:
 16140  002000                     		movf	((c:humid_convert@x+1)),c,w
 16141  002000  5002               	bnz	u5630
 16142  002002  E109               	movlw	50
 16143  002004  0E32               	subwf	 ((c:humid_convert@x)),c,w
 16144  002006  5C01               	btfss	status,0
 16145  002008  A0D8               	goto	u5631
 16146  00200A  EF09  F010         	goto	u5630
 16147  00200E  EF0B  F010         
 16148                           u5631:
 16149  002012                     	goto	l4407
 16150  002012  EF1C  F010         u5630:
 16151  002016                     	
 16152                           l4403:
 16153  002016                     		movf	((c:humid_convert@x+1)),c,w
 16154  002016  5002               	bnz	u5641
 16155  002018  E107               	movlw	100
 16156  00201A  0E64               	subwf	 ((c:humid_convert@x)),c,w
 16157  00201C  5C01               	btfsc	status,0
 16158  00201E  B0D8               	goto	u5641
 16159  002020  EF14  F010         	goto	u5640
 16160  002024  EF16  F010         
 16161                           u5641:
 16162  002028                     	goto	l4407
 16163  002028  EF1C  F010         u5640:
 16164  00202C                     	
 16165                           l4405:
 16166  00202C                     	movlw	high(0Ah)
 16167  00202C  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16168  00202E  6E04               	movlw	low(0Ah)
 16169  002030  0E0A               	movwf	((c:humid_convert@humidity)),c
 16170  002032  6E03               	goto	l4511
 16171  002034  EF22  F012         	line	314
 16172                           ;main.c: 314:         else if (x>=100 && x<150){humidity=15;}
 16173                           	
 16174                           l266:
 16175  002038                     	
 16176                           l4407:
 16177  002038                     		movf	((c:humid_convert@x+1)),c,w
 16178  002038  5002               	bnz	u5650
 16179  00203A  E109               	movlw	100
 16180  00203C  0E64               	subwf	 ((c:humid_convert@x)),c,w
 16181  00203E  5C01               	btfss	status,0
 16182  002040  A0D8               	goto	u5651
 16183  002042  EF25  F010         	goto	u5650
 16184  002046  EF27  F010         
 16185                           u5651:
 16186  00204A                     	goto	l4413
 16187  00204A  EF38  F010         u5650:
 16188  00204E                     	
 16189                           l4409:
 16190  00204E                     		movf	((c:humid_convert@x+1)),c,w
 16191  00204E  5002               	bnz	u5661
 16192  002050  E107               	movlw	150
 16193  002052  0E96               	subwf	 ((c:humid_convert@x)),c,w
 16194  002054  5C01               	btfsc	status,0
 16195  002056  B0D8               	goto	u5661
 16196  002058  EF30  F010         	goto	u5660
 16197  00205C  EF32  F010         
 16198                           u5661:
 16199  002060                     	goto	l4413
 16200  002060  EF38  F010         u5660:
 16201  002064                     	
 16202                           l4411:
 16203  002064                     	movlw	high(0Fh)
 16204  002064  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16205  002066  6E04               	movlw	low(0Fh)
 16206  002068  0E0F               	movwf	((c:humid_convert@humidity)),c
 16207  00206A  6E03               	goto	l4511
 16208  00206C  EF22  F012         	line	315
 16209                           ;main.c: 315:         else if (x>=150 && x<200){humidity=20;}
 16210                           	
 16211                           l268:
 16212  002070                     	
 16213                           l4413:
 16214  002070                     		movf	((c:humid_convert@x+1)),c,w
 16215  002070  5002               	bnz	u5670
 16216  002072  E109               	movlw	150
 16217  002074  0E96               	subwf	 ((c:humid_convert@x)),c,w
 16218  002076  5C01               	btfss	status,0
 16219  002078  A0D8               	goto	u5671
 16220  00207A  EF41  F010         	goto	u5670
 16221  00207E  EF43  F010         
 16222                           u5671:
 16223  002082                     	goto	l4419
 16224  002082  EF54  F010         u5670:
 16225  002086                     	
 16226                           l4415:
 16227  002086                     		movf	((c:humid_convert@x+1)),c,w
 16228  002086  5002               	bnz	u5681
 16229  002088  E107               	movlw	200
 16230  00208A  0EC8               	subwf	 ((c:humid_convert@x)),c,w
 16231  00208C  5C01               	btfsc	status,0
 16232  00208E  B0D8               	goto	u5681
 16233  002090  EF4C  F010         	goto	u5680
 16234  002094  EF4E  F010         
 16235                           u5681:
 16236  002098                     	goto	l4419
 16237  002098  EF54  F010         u5680:
 16238  00209C                     	
 16239                           l4417:
 16240  00209C                     	movlw	high(014h)
 16241  00209C  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16242  00209E  6E04               	movlw	low(014h)
 16243  0020A0  0E14               	movwf	((c:humid_convert@humidity)),c
 16244  0020A2  6E03               	goto	l4511
 16245  0020A4  EF22  F012         	line	316
 16246                           ;main.c: 316:         else if (x>=200 && x<250){humidity=25;}
 16247                           	
 16248                           l270:
 16249  0020A8                     	
 16250                           l4419:
 16251  0020A8                     		movf	((c:humid_convert@x+1)),c,w
 16252  0020A8  5002               	bnz	u5690
 16253  0020AA  E109               	movlw	200
 16254  0020AC  0EC8               	subwf	 ((c:humid_convert@x)),c,w
 16255  0020AE  5C01               	btfss	status,0
 16256  0020B0  A0D8               	goto	u5691
 16257  0020B2  EF5D  F010         	goto	u5690
 16258  0020B6  EF5F  F010         
 16259                           u5691:
 16260  0020BA                     	goto	l4425
 16261  0020BA  EF70  F010         u5690:
 16262  0020BE                     	
 16263                           l4421:
 16264  0020BE                     		movf	((c:humid_convert@x+1)),c,w
 16265  0020BE  5002               	bnz	u5701
 16266  0020C0  E107               	movlw	250
 16267  0020C2  0EFA               	subwf	 ((c:humid_convert@x)),c,w
 16268  0020C4  5C01               	btfsc	status,0
 16269  0020C6  B0D8               	goto	u5701
 16270  0020C8  EF68  F010         	goto	u5700
 16271  0020CC  EF6A  F010         
 16272                           u5701:
 16273  0020D0                     	goto	l4425
 16274  0020D0  EF70  F010         u5700:
 16275  0020D4                     	
 16276                           l4423:
 16277  0020D4                     	movlw	high(019h)
 16278  0020D4  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16279  0020D6  6E04               	movlw	low(019h)
 16280  0020D8  0E19               	movwf	((c:humid_convert@humidity)),c
 16281  0020DA  6E03               	goto	l4511
 16282  0020DC  EF22  F012         	line	317
 16283                           ;main.c: 317:         else if (x>=250 && x<300){humidity=30;}
 16284                           	
 16285                           l272:
 16286  0020E0                     	
 16287                           l4425:
 16288  0020E0                     		movf	((c:humid_convert@x+1)),c,w
 16289  0020E0  5002               	bnz	u5710
 16290  0020E2  E109               	movlw	250
 16291  0020E4  0EFA               	subwf	 ((c:humid_convert@x)),c,w
 16292  0020E6  5C01               	btfss	status,0
 16293  0020E8  A0D8               	goto	u5711
 16294  0020EA  EF79  F010         	goto	u5710
 16295  0020EE  EF7B  F010         
 16296                           u5711:
 16297  0020F2                     	goto	l4431
 16298  0020F2  EF8C  F010         u5710:
 16299  0020F6                     	
 16300                           l4427:
 16301  0020F6                     		movlw	44
 16302  0020F6  0E2C               	subwf	 ((c:humid_convert@x)),c,w
 16303  0020F8  5C01               	movlw	1
 16304  0020FA  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16305  0020FC  5802               	btfsc	status,0
 16306  0020FE  B0D8               	goto	u5721
 16307  002100  EF84  F010         	goto	u5720
 16308  002104  EF86  F010         
 16309                           u5721:
 16310  002108                     	goto	l4431
 16311  002108  EF8C  F010         u5720:
 16312  00210C                     	
 16313                           l4429:
 16314  00210C                     	movlw	high(01Eh)
 16315  00210C  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16316  00210E  6E04               	movlw	low(01Eh)
 16317  002110  0E1E               	movwf	((c:humid_convert@humidity)),c
 16318  002112  6E03               	goto	l4511
 16319  002114  EF22  F012         	line	318
 16320                           ;main.c: 318:         else if (x>=300 && x<350){humidity=35;}
 16321                           	
 16322                           l274:
 16323  002118                     	
 16324                           l4431:
 16325  002118                     		movlw	44
 16326  002118  0E2C               	subwf	 ((c:humid_convert@x)),c,w
 16327  00211A  5C01               	movlw	1
 16328  00211C  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16329  00211E  5802               	btfss	status,0
 16330  002120  A0D8               	goto	u5731
 16331  002122  EF95  F010         	goto	u5730
 16332  002126  EF97  F010         
 16333                           u5731:
 16334  00212A                     	goto	l4437
 16335  00212A  EFA8  F010         u5730:
 16336  00212E                     	
 16337                           l4433:
 16338  00212E                     		movlw	94
 16339  00212E  0E5E               	subwf	 ((c:humid_convert@x)),c,w
 16340  002130  5C01               	movlw	1
 16341  002132  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16342  002134  5802               	btfsc	status,0
 16343  002136  B0D8               	goto	u5741
 16344  002138  EFA0  F010         	goto	u5740
 16345  00213C  EFA2  F010         
 16346                           u5741:
 16347  002140                     	goto	l4437
 16348  002140  EFA8  F010         u5740:
 16349  002144                     	
 16350                           l4435:
 16351  002144                     	movlw	high(023h)
 16352  002144  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16353  002146  6E04               	movlw	low(023h)
 16354  002148  0E23               	movwf	((c:humid_convert@humidity)),c
 16355  00214A  6E03               	goto	l4511
 16356  00214C  EF22  F012         	line	319
 16357                           ;main.c: 319:         else if (x>=350 && x<400){humidity=40;}
 16358                           	
 16359                           l276:
 16360  002150                     	
 16361                           l4437:
 16362  002150                     		movlw	94
 16363  002150  0E5E               	subwf	 ((c:humid_convert@x)),c,w
 16364  002152  5C01               	movlw	1
 16365  002154  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16366  002156  5802               	btfss	status,0
 16367  002158  A0D8               	goto	u5751
 16368  00215A  EFB1  F010         	goto	u5750
 16369  00215E  EFB3  F010         
 16370                           u5751:
 16371  002162                     	goto	l4443
 16372  002162  EFC4  F010         u5750:
 16373  002166                     	
 16374                           l4439:
 16375  002166                     		movlw	144
 16376  002166  0E90               	subwf	 ((c:humid_convert@x)),c,w
 16377  002168  5C01               	movlw	1
 16378  00216A  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16379  00216C  5802               	btfsc	status,0
 16380  00216E  B0D8               	goto	u5761
 16381  002170  EFBC  F010         	goto	u5760
 16382  002174  EFBE  F010         
 16383                           u5761:
 16384  002178                     	goto	l4443
 16385  002178  EFC4  F010         u5760:
 16386  00217C                     	
 16387                           l4441:
 16388  00217C                     	movlw	high(028h)
 16389  00217C  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16390  00217E  6E04               	movlw	low(028h)
 16391  002180  0E28               	movwf	((c:humid_convert@humidity)),c
 16392  002182  6E03               	goto	l4511
 16393  002184  EF22  F012         	line	320
 16394                           ;main.c: 320:         else if (x>=400 && x<450){humidity=45;}
 16395                           	
 16396                           l278:
 16397  002188                     	
 16398                           l4443:
 16399  002188                     		movlw	144
 16400  002188  0E90               	subwf	 ((c:humid_convert@x)),c,w
 16401  00218A  5C01               	movlw	1
 16402  00218C  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16403  00218E  5802               	btfss	status,0
 16404  002190  A0D8               	goto	u5771
 16405  002192  EFCD  F010         	goto	u5770
 16406  002196  EFCF  F010         
 16407                           u5771:
 16408  00219A                     	goto	l4449
 16409  00219A  EFE0  F010         u5770:
 16410  00219E                     	
 16411                           l4445:
 16412  00219E                     		movlw	194
 16413  00219E  0EC2               	subwf	 ((c:humid_convert@x)),c,w
 16414  0021A0  5C01               	movlw	1
 16415  0021A2  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16416  0021A4  5802               	btfsc	status,0
 16417  0021A6  B0D8               	goto	u5781
 16418  0021A8  EFD8  F010         	goto	u5780
 16419  0021AC  EFDA  F010         
 16420                           u5781:
 16421  0021B0                     	goto	l4449
 16422  0021B0  EFE0  F010         u5780:
 16423  0021B4                     	
 16424                           l4447:
 16425  0021B4                     	movlw	high(02Dh)
 16426  0021B4  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16427  0021B6  6E04               	movlw	low(02Dh)
 16428  0021B8  0E2D               	movwf	((c:humid_convert@humidity)),c
 16429  0021BA  6E03               	goto	l4511
 16430  0021BC  EF22  F012         	line	321
 16431                           ;main.c: 321:         else if (x>=450 && x<500){humidity=50;}
 16432                           	
 16433                           l280:
 16434  0021C0                     	
 16435                           l4449:
 16436  0021C0                     		movlw	194
 16437  0021C0  0EC2               	subwf	 ((c:humid_convert@x)),c,w
 16438  0021C2  5C01               	movlw	1
 16439  0021C4  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16440  0021C6  5802               	btfss	status,0
 16441  0021C8  A0D8               	goto	u5791
 16442  0021CA  EFE9  F010         	goto	u5790
 16443  0021CE  EFEB  F010         
 16444                           u5791:
 16445  0021D2                     	goto	l4455
 16446  0021D2  EFFC  F010         u5790:
 16447  0021D6                     	
 16448                           l4451:
 16449  0021D6                     		movlw	244
 16450  0021D6  0EF4               	subwf	 ((c:humid_convert@x)),c,w
 16451  0021D8  5C01               	movlw	1
 16452  0021DA  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16453  0021DC  5802               	btfsc	status,0
 16454  0021DE  B0D8               	goto	u5801
 16455  0021E0  EFF4  F010         	goto	u5800
 16456  0021E4  EFF6  F010         
 16457                           u5801:
 16458  0021E8                     	goto	l4455
 16459  0021E8  EFFC  F010         u5800:
 16460  0021EC                     	
 16461                           l4453:
 16462  0021EC                     	movlw	high(032h)
 16463  0021EC  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16464  0021EE  6E04               	movlw	low(032h)
 16465  0021F0  0E32               	movwf	((c:humid_convert@humidity)),c
 16466  0021F2  6E03               	goto	l4511
 16467  0021F4  EF22  F012         	line	322
 16468                           ;main.c: 322:         else if (x>=500 && x<550){humidity=55;}
 16469                           	
 16470                           l282:
 16471  0021F8                     	
 16472                           l4455:
 16473  0021F8                     		movlw	244
 16474  0021F8  0EF4               	subwf	 ((c:humid_convert@x)),c,w
 16475  0021FA  5C01               	movlw	1
 16476  0021FC  0E01               	subwfb	((c:humid_convert@x+1)),c,w
 16477  0021FE  5802               	btfss	status,0
 16478  002200  A0D8               	goto	u5811
 16479  002202  EF05  F011         	goto	u5810
 16480  002206  EF07  F011         
 16481                           u5811:
 16482  00220A                     	goto	l4461
 16483  00220A  EF18  F011         u5810:
 16484  00220E                     	
 16485                           l4457:
 16486  00220E                     		movlw	38
 16487  00220E  0E26               	subwf	 ((c:humid_convert@x)),c,w
 16488  002210  5C01               	movlw	2
 16489  002212  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16490  002214  5802               	btfsc	status,0
 16491  002216  B0D8               	goto	u5821
 16492  002218  EF10  F011         	goto	u5820
 16493  00221C  EF12  F011         
 16494                           u5821:
 16495  002220                     	goto	l4461
 16496  002220  EF18  F011         u5820:
 16497  002224                     	
 16498                           l4459:
 16499  002224                     	movlw	high(037h)
 16500  002224  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16501  002226  6E04               	movlw	low(037h)
 16502  002228  0E37               	movwf	((c:humid_convert@humidity)),c
 16503  00222A  6E03               	goto	l4511
 16504  00222C  EF22  F012         	line	323
 16505                           ;main.c: 323:         else if (x>=550 && x<600){humidity=60;}
 16506                           	
 16507                           l284:
 16508  002230                     	
 16509                           l4461:
 16510  002230                     		movlw	38
 16511  002230  0E26               	subwf	 ((c:humid_convert@x)),c,w
 16512  002232  5C01               	movlw	2
 16513  002234  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16514  002236  5802               	btfss	status,0
 16515  002238  A0D8               	goto	u5831
 16516  00223A  EF21  F011         	goto	u5830
 16517  00223E  EF23  F011         
 16518                           u5831:
 16519  002242                     	goto	l4467
 16520  002242  EF34  F011         u5830:
 16521  002246                     	
 16522                           l4463:
 16523  002246                     		movlw	88
 16524  002246  0E58               	subwf	 ((c:humid_convert@x)),c,w
 16525  002248  5C01               	movlw	2
 16526  00224A  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16527  00224C  5802               	btfsc	status,0
 16528  00224E  B0D8               	goto	u5841
 16529  002250  EF2C  F011         	goto	u5840
 16530  002254  EF2E  F011         
 16531                           u5841:
 16532  002258                     	goto	l4467
 16533  002258  EF34  F011         u5840:
 16534  00225C                     	
 16535                           l4465:
 16536  00225C                     	movlw	high(03Ch)
 16537  00225C  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16538  00225E  6E04               	movlw	low(03Ch)
 16539  002260  0E3C               	movwf	((c:humid_convert@humidity)),c
 16540  002262  6E03               	goto	l4511
 16541  002264  EF22  F012         	line	324
 16542                           ;main.c: 324:         else if (x>=600 && x<650){humidity=65;}
 16543                           	
 16544                           l286:
 16545  002268                     	
 16546                           l4467:
 16547  002268                     		movlw	88
 16548  002268  0E58               	subwf	 ((c:humid_convert@x)),c,w
 16549  00226A  5C01               	movlw	2
 16550  00226C  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16551  00226E  5802               	btfss	status,0
 16552  002270  A0D8               	goto	u5851
 16553  002272  EF3D  F011         	goto	u5850
 16554  002276  EF3F  F011         
 16555                           u5851:
 16556  00227A                     	goto	l4473
 16557  00227A  EF50  F011         u5850:
 16558  00227E                     	
 16559                           l4469:
 16560  00227E                     		movlw	138
 16561  00227E  0E8A               	subwf	 ((c:humid_convert@x)),c,w
 16562  002280  5C01               	movlw	2
 16563  002282  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16564  002284  5802               	btfsc	status,0
 16565  002286  B0D8               	goto	u5861
 16566  002288  EF48  F011         	goto	u5860
 16567  00228C  EF4A  F011         
 16568                           u5861:
 16569  002290                     	goto	l4473
 16570  002290  EF50  F011         u5860:
 16571  002294                     	
 16572                           l4471:
 16573  002294                     	movlw	high(041h)
 16574  002294  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16575  002296  6E04               	movlw	low(041h)
 16576  002298  0E41               	movwf	((c:humid_convert@humidity)),c
 16577  00229A  6E03               	goto	l4511
 16578  00229C  EF22  F012         	line	325
 16579                           ;main.c: 325:         else if (x>=650 && x<700){humidity=70;}
 16580                           	
 16581                           l288:
 16582  0022A0                     	
 16583                           l4473:
 16584  0022A0                     		movlw	138
 16585  0022A0  0E8A               	subwf	 ((c:humid_convert@x)),c,w
 16586  0022A2  5C01               	movlw	2
 16587  0022A4  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16588  0022A6  5802               	btfss	status,0
 16589  0022A8  A0D8               	goto	u5871
 16590  0022AA  EF59  F011         	goto	u5870
 16591  0022AE  EF5B  F011         
 16592                           u5871:
 16593  0022B2                     	goto	l4479
 16594  0022B2  EF6C  F011         u5870:
 16595  0022B6                     	
 16596                           l4475:
 16597  0022B6                     		movlw	188
 16598  0022B6  0EBC               	subwf	 ((c:humid_convert@x)),c,w
 16599  0022B8  5C01               	movlw	2
 16600  0022BA  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16601  0022BC  5802               	btfsc	status,0
 16602  0022BE  B0D8               	goto	u5881
 16603  0022C0  EF64  F011         	goto	u5880
 16604  0022C4  EF66  F011         
 16605                           u5881:
 16606  0022C8                     	goto	l4479
 16607  0022C8  EF6C  F011         u5880:
 16608  0022CC                     	
 16609                           l4477:
 16610  0022CC                     	movlw	high(046h)
 16611  0022CC  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16612  0022CE  6E04               	movlw	low(046h)
 16613  0022D0  0E46               	movwf	((c:humid_convert@humidity)),c
 16614  0022D2  6E03               	goto	l4511
 16615  0022D4  EF22  F012         	line	326
 16616                           ;main.c: 326:         else if (x>=700 && x<750){humidity=75;}
 16617                           	
 16618                           l290:
 16619  0022D8                     	
 16620                           l4479:
 16621  0022D8                     		movlw	188
 16622  0022D8  0EBC               	subwf	 ((c:humid_convert@x)),c,w
 16623  0022DA  5C01               	movlw	2
 16624  0022DC  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16625  0022DE  5802               	btfss	status,0
 16626  0022E0  A0D8               	goto	u5891
 16627  0022E2  EF75  F011         	goto	u5890
 16628  0022E6  EF77  F011         
 16629                           u5891:
 16630  0022EA                     	goto	l4485
 16631  0022EA  EF88  F011         u5890:
 16632  0022EE                     	
 16633                           l4481:
 16634  0022EE                     		movlw	238
 16635  0022EE  0EEE               	subwf	 ((c:humid_convert@x)),c,w
 16636  0022F0  5C01               	movlw	2
 16637  0022F2  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16638  0022F4  5802               	btfsc	status,0
 16639  0022F6  B0D8               	goto	u5901
 16640  0022F8  EF80  F011         	goto	u5900
 16641  0022FC  EF82  F011         
 16642                           u5901:
 16643  002300                     	goto	l4485
 16644  002300  EF88  F011         u5900:
 16645  002304                     	
 16646                           l4483:
 16647  002304                     	movlw	high(04Bh)
 16648  002304  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16649  002306  6E04               	movlw	low(04Bh)
 16650  002308  0E4B               	movwf	((c:humid_convert@humidity)),c
 16651  00230A  6E03               	goto	l4511
 16652  00230C  EF22  F012         	line	327
 16653                           ;main.c: 327:         else if (x>=750 && x<800){humidity=80;}
 16654                           	
 16655                           l292:
 16656  002310                     	
 16657                           l4485:
 16658  002310                     		movlw	238
 16659  002310  0EEE               	subwf	 ((c:humid_convert@x)),c,w
 16660  002312  5C01               	movlw	2
 16661  002314  0E02               	subwfb	((c:humid_convert@x+1)),c,w
 16662  002316  5802               	btfss	status,0
 16663  002318  A0D8               	goto	u5911
 16664  00231A  EF91  F011         	goto	u5910
 16665  00231E  EF93  F011         
 16666                           u5911:
 16667  002322                     	goto	l4491
 16668  002322  EFA4  F011         u5910:
 16669  002326                     	
 16670                           l4487:
 16671  002326                     		movlw	32
 16672  002326  0E20               	subwf	 ((c:humid_convert@x)),c,w
 16673  002328  5C01               	movlw	3
 16674  00232A  0E03               	subwfb	((c:humid_convert@x+1)),c,w
 16675  00232C  5802               	btfsc	status,0
 16676  00232E  B0D8               	goto	u5921
 16677  002330  EF9C  F011         	goto	u5920
 16678  002334  EF9E  F011         
 16679                           u5921:
 16680  002338                     	goto	l4491
 16681  002338  EFA4  F011         u5920:
 16682  00233C                     	
 16683                           l4489:
 16684  00233C                     	movlw	high(050h)
 16685  00233C  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16686  00233E  6E04               	movlw	low(050h)
 16687  002340  0E50               	movwf	((c:humid_convert@humidity)),c
 16688  002342  6E03               	goto	l4511
 16689  002344  EF22  F012         	line	328
 16690                           ;main.c: 328:         else if (x>=800 && x<850){humidity=85;}
 16691                           	
 16692                           l294:
 16693  002348                     	
 16694                           l4491:
 16695  002348                     		movlw	32
 16696  002348  0E20               	subwf	 ((c:humid_convert@x)),c,w
 16697  00234A  5C01               	movlw	3
 16698  00234C  0E03               	subwfb	((c:humid_convert@x+1)),c,w
 16699  00234E  5802               	btfss	status,0
 16700  002350  A0D8               	goto	u5931
 16701  002352  EFAD  F011         	goto	u5930
 16702  002356  EFAF  F011         
 16703                           u5931:
 16704  00235A                     	goto	l4497
 16705  00235A  EFC0  F011         u5930:
 16706  00235E                     	
 16707                           l4493:
 16708  00235E                     		movlw	82
 16709  00235E  0E52               	subwf	 ((c:humid_convert@x)),c,w
 16710  002360  5C01               	movlw	3
 16711  002362  0E03               	subwfb	((c:humid_convert@x+1)),c,w
 16712  002364  5802               	btfsc	status,0
 16713  002366  B0D8               	goto	u5941
 16714  002368  EFB8  F011         	goto	u5940
 16715  00236C  EFBA  F011         
 16716                           u5941:
 16717  002370                     	goto	l4497
 16718  002370  EFC0  F011         u5940:
 16719  002374                     	
 16720                           l4495:
 16721  002374                     	movlw	high(055h)
 16722  002374  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16723  002376  6E04               	movlw	low(055h)
 16724  002378  0E55               	movwf	((c:humid_convert@humidity)),c
 16725  00237A  6E03               	goto	l4511
 16726  00237C  EF22  F012         	line	329
 16727                           ;main.c: 329:         else if (x>=850 && x<900){humidity=90;}
 16728                           	
 16729                           l296:
 16730  002380                     	
 16731                           l4497:
 16732  002380                     		movlw	82
 16733  002380  0E52               	subwf	 ((c:humid_convert@x)),c,w
 16734  002382  5C01               	movlw	3
 16735  002384  0E03               	subwfb	((c:humid_convert@x+1)),c,w
 16736  002386  5802               	btfss	status,0
 16737  002388  A0D8               	goto	u5951
 16738  00238A  EFC9  F011         	goto	u5950
 16739  00238E  EFCB  F011         
 16740                           u5951:
 16741  002392                     	goto	l4503
 16742  002392  EFDC  F011         u5950:
 16743  002396                     	
 16744                           l4499:
 16745  002396                     		movlw	132
 16746  002396  0E84               	subwf	 ((c:humid_convert@x)),c,w
 16747  002398  5C01               	movlw	3
 16748  00239A  0E03               	subwfb	((c:humid_convert@x+1)),c,w
 16749  00239C  5802               	btfsc	status,0
 16750  00239E  B0D8               	goto	u5961
 16751  0023A0  EFD4  F011         	goto	u5960
 16752  0023A4  EFD6  F011         
 16753                           u5961:
 16754  0023A8                     	goto	l4503
 16755  0023A8  EFDC  F011         u5960:
 16756  0023AC                     	
 16757                           l4501:
 16758  0023AC                     	movlw	high(05Ah)
 16759  0023AC  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16760  0023AE  6E04               	movlw	low(05Ah)
 16761  0023B0  0E5A               	movwf	((c:humid_convert@humidity)),c
 16762  0023B2  6E03               	goto	l4511
 16763  0023B4  EF22  F012         	line	330
 16764                           ;main.c: 330:         else if (x>=900 && x<950){ humidity=95;}
 16765                           	
 16766                           l298:
 16767  0023B8                     	
 16768                           l4503:
 16769  0023B8                     		movlw	132
 16770  0023B8  0E84               	subwf	 ((c:humid_convert@x)),c,w
 16771  0023BA  5C01               	movlw	3
 16772  0023BC  0E03               	subwfb	((c:humid_convert@x+1)),c,w
 16773  0023BE  5802               	btfss	status,0
 16774  0023C0  A0D8               	goto	u5971
 16775  0023C2  EFE5  F011         	goto	u5970
 16776  0023C6  EFE7  F011         
 16777                           u5971:
 16778  0023CA                     	goto	l4509
 16779  0023CA  EFF8  F011         u5970:
 16780  0023CE                     	
 16781                           l4505:
 16782  0023CE                     		movlw	182
 16783  0023CE  0EB6               	subwf	 ((c:humid_convert@x)),c,w
 16784  0023D0  5C01               	movlw	3
 16785  0023D2  0E03               	subwfb	((c:humid_convert@x+1)),c,w
 16786  0023D4  5802               	btfsc	status,0
 16787  0023D6  B0D8               	goto	u5981
 16788  0023D8  EFF0  F011         	goto	u5980
 16789  0023DC  EFF2  F011         
 16790                           u5981:
 16791  0023E0                     	goto	l4509
 16792  0023E0  EFF8  F011         u5980:
 16793  0023E4                     	
 16794                           l4507:
 16795  0023E4                     	movlw	high(05Fh)
 16796  0023E4  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16797  0023E6  6E04               	movlw	low(05Fh)
 16798  0023E8  0E5F               	movwf	((c:humid_convert@humidity)),c
 16799  0023EA  6E03               	goto	l4511
 16800  0023EC  EF22  F012         	line	331
 16801                           ;main.c: 331:         else {humidity=100;}
 16802                           	
 16803                           l300:
 16804  0023F0                     	
 16805                           l4509:
 16806  0023F0                     	movlw	high(064h)
 16807  0023F0  0E00               	movwf	((c:humid_convert@humidity+1)),c
 16808  0023F2  6E04               	movlw	low(064h)
 16809  0023F4  0E64               	movwf	((c:humid_convert@humidity)),c
 16810  0023F6  6E03               	goto	l4511
 16811  0023F8  EF22  F012         	
 16812                           l301:
 16813  0023FC                     	goto	l4511
 16814  0023FC  EF22  F012         	
 16815                           l299:
 16816  002400                     	goto	l4511
 16817  002400  EF22  F012         	
 16818                           l297:
 16819  002404                     	goto	l4511
 16820  002404  EF22  F012         	
 16821                           l295:
 16822  002408                     	goto	l4511
 16823  002408  EF22  F012         	
 16824                           l293:
 16825  00240C                     	goto	l4511
 16826  00240C  EF22  F012         	
 16827                           l291:
 16828  002410                     	goto	l4511
 16829  002410  EF22  F012         	
 16830                           l289:
 16831  002414                     	goto	l4511
 16832  002414  EF22  F012         	
 16833                           l287:
 16834  002418                     	goto	l4511
 16835  002418  EF22  F012         	
 16836                           l285:
 16837  00241C                     	goto	l4511
 16838  00241C  EF22  F012         	
 16839                           l283:
 16840  002420                     	goto	l4511
 16841  002420  EF22  F012         	
 16842                           l281:
 16843  002424                     	goto	l4511
 16844  002424  EF22  F012         	
 16845                           l279:
 16846  002428                     	goto	l4511
 16847  002428  EF22  F012         	
 16848                           l277:
 16849  00242C                     	goto	l4511
 16850  00242C  EF22  F012         	
 16851                           l275:
 16852  002430                     	goto	l4511
 16853  002430  EF22  F012         	
 16854                           l273:
 16855  002434                     	goto	l4511
 16856  002434  EF22  F012         	
 16857                           l271:
 16858  002438                     	goto	l4511
 16859  002438  EF22  F012         	
 16860                           l269:
 16861  00243C                     	goto	l4511
 16862  00243C  EF22  F012         	
 16863                           l267:
 16864  002440                     	goto	l4511
 16865  002440  EF22  F012         	
 16866                           l265:
 16867  002444                     	line	333
 16868                           	
 16869                           l4511:
 16870  002444                     ;main.c: 333:         return humidity;
 16871                           	movff	(c:humid_convert@humidity),(c:?_humid_convert)
 16872  002444  C003  F001         	movff	(c:humid_convert@humidity+1),(c:?_humid_convert+1)
 16873  002448  C004  F002         	goto	l302
 16874  00244C  EF28  F012         	
 16875                           l4513:
 16876  002450                     	line	336
 16877                           	
 16878                           l302:
 16879  002450                     	return	;funcret
 16880  002450  0012               	opt stack 0
 16881                           GLOBAL	__end_of_humid_convert
 16882                           	__end_of_humid_convert:
 16883  002452                     	signat	_humid_convert,4218
 16884                           	global	_LCD_String_xy
 16885                           
 16886 ;; *************** function _LCD_String_xy *****************
 16887 ;; Defined at:
 16888 ;;		line 88 in file "./LCD4BITS.h"
 16889 ;; Parameters:    Size  Location     Type
 16890 ;;  row             1    wreg     unsigned char 
 16891 ;;  pos             1   10[COMRAM] unsigned char 
 16892 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 16893 ;;		 -> STR_20(14), STR_19(14), lcd_temp@temp_info(16), STR_17(15), 
 16894 ;;		 -> STR_16(12), lcd_humid@humid_info(16), STR_14(15), STR_13(12), 
 16895 ;;		 -> STR_12(12), lcd_sol@sol_info(16), STR_10(13), STR_9(13), 
 16896 ;;		 -> lcd_lum@lum_info(16), STR_7(13), STR_6(13), lcd_arrosage@data(16), 
 16897 ;; Auto vars:     Size  Location     Type
 16898 ;;  row             1   13[COMRAM] unsigned char 
 16899 ;;  location        1   14[COMRAM] unsigned char 
 16900 ;; Return value:  Size  Location     Type
 16901 ;;                  1    wreg      void 
 16902 ;; Registers used:
 16903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16904 ;; Tracked objects:
 16905 ;;		On entry : 0/0
 16906 ;;		On exit  : 0/0
 16907 ;;		Unchanged: 0/0
 16908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16909 ;;      Params:         3       0       0       0       0       0       0       0       0
 16910 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16912 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16913 ;;Total ram usage:        5 bytes
 16914 ;; Hardware stack levels used:    1
 16915 ;; Hardware stack levels required when called:    3
 16916 ;; This function calls:
 16917 ;;		_LCD_Command
 16918 ;;		_LCD_String
 16919 ;; This function is called by:
 16920 ;;		_lcd_arrosage
 16921 ;;		_main
 16922 ;;		_lcd_lum
 16923 ;;		_lcd_sol
 16924 ;;		_lcd_humid
 16925 ;;		_lcd_temp
 16926 ;; This function uses a non-reentrant model
 16927 ;;
 16928                           psect	text37,class=CODE,space=0,reloc=2,group=0
 16929                           	file	"./LCD4BITS.h"
 16930                           	line	88
 16931                           global __ptext37
 16932                           __ptext37:
 16933  00556E                     psect	text37
 16934                           	file	"./LCD4BITS.h"
 16935                           	line	88
 16936                           	global	__size_of_LCD_String_xy
 16937                           	__size_of_LCD_String_xy	equ	__end_of_LCD_String_xy-_LCD_String_xy
 16938  0000                     	
 16939                           _LCD_String_xy:
 16940  00556E                     ;incstack = 0
 16941                           	opt	stack 25
 16942                           ;LCD_String_xy@row stored from wreg
 16943                           	movwf	((c:LCD_String_xy@row)),c
 16944  00556E  6E0E               	line	90
 16945                           	
 16946                           l4107:
 16947  005570                     ;./LCD4BITS.h: 88: void LCD_String_xy(char row,char pos,const char *msg);./LCD4BITS.h: 8
                                 9: {;./LCD4BITS.h: 90:     char location=0;
 16948                           	movlw	low(0)
 16949  005570  0E00               	movwf	((c:LCD_String_xy@location)),c
 16950  005572  6E0F               	line	91
 16951                           	
 16952                           l4109:
 16953  005574                     ;./LCD4BITS.h: 91:     if(row<=1)
 16954                           		movlw	02h-0
 16955  005574  0E02               	cpfslt	((c:LCD_String_xy@row)),c
 16956  005576  600E               	goto	u5181
 16957  005578  EFC0  F02A         	goto	u5180
 16958  00557C  EFC2  F02A         
 16959                           u5181:
 16960  005580                     	goto	l4115
 16961  005580  EFCB  F02A         u5180:
 16962  005584                     	line	93
 16963                           	
 16964                           l4111:
 16965  005584                     ;./LCD4BITS.h: 92:     {;./LCD4BITS.h: 93:         location=(0x80) | ((pos) & 0x0f);
 16966                           	movf	((c:LCD_String_xy@pos)),c,w
 16967  005584  500B               	andlw	low(0Fh)
 16968  005586  0B0F               	iorlw	low(080h)
 16969  005588  0980               	movwf	((c:LCD_String_xy@location)),c
 16970  00558A  6E0F               	line	94
 16971                           	
 16972                           l4113:
 16973  00558C                     ;./LCD4BITS.h: 94:         LCD_Command(location);
 16974                           	movf	((c:LCD_String_xy@location)),c,w
 16975  00558C  500F               	
 16976                           	call	_LCD_Command
 16977  00558E  EC91  F02A         	line	95
 16978                           ;./LCD4BITS.h: 95:     }
 16979                           	goto	l4119
 16980  005592  EFD4  F02A         	line	96
 16981                           ;./LCD4BITS.h: 96:     else
 16982                           	
 16983                           l100:
 16984  005596                     	line	98
 16985                           	
 16986                           l4115:
 16987  005596                     ;./LCD4BITS.h: 97:     {;./LCD4BITS.h: 98:         location=(0xC0) | ((pos) & 0x0f);
 16988                           	movf	((c:LCD_String_xy@pos)),c,w
 16989  005596  500B               	andlw	low(0Fh)
 16990  005598  0B0F               	iorlw	low(0C0h)
 16991  00559A  09C0               	movwf	((c:LCD_String_xy@location)),c
 16992  00559C  6E0F               	line	99
 16993                           	
 16994                           l4117:
 16995  00559E                     ;./LCD4BITS.h: 99:         LCD_Command(location);
 16996                           	movf	((c:LCD_String_xy@location)),c,w
 16997  00559E  500F               	
 16998                           	call	_LCD_Command
 16999  0055A0  EC91  F02A         	goto	l4119
 17000  0055A4  EFD4  F02A         	line	100
 17001                           ;./LCD4BITS.h: 100:     }
 17002                           	
 17003                           l101:
 17004  0055A8                     	line	103
 17005                           	
 17006                           l4119:
 17007  0055A8                     ;./LCD4BITS.h: 103:     LCD_String(msg);
 17008                           		movff	(c:LCD_String_xy@msg),(c:LCD_String@msg)
 17009  0055A8  C00C  F009         	movff	(c:LCD_String_xy@msg+1),(c:LCD_String@msg+1)
 17010  0055AC  C00D  F00A         
 17011                           	call	_LCD_String	;wreg free
 17012  0055B0  ECA8  F028         	line	105
 17013                           	
 17014                           l102:
 17015  0055B4                     	return	;funcret
 17016  0055B4  0012               	opt stack 0
 17017                           GLOBAL	__end_of_LCD_String_xy
 17018                           	__end_of_LCD_String_xy:
 17019  0055B6                     	signat	_LCD_String_xy,12409
 17020                           	global	_LCD_String
 17021                           
 17022 ;; *************** function _LCD_String *****************
 17023 ;; Defined at:
 17024 ;;		line 77 in file "./LCD4BITS.h"
 17025 ;; Parameters:    Size  Location     Type
 17026 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 17027 ;;		 -> STR_20(14), STR_19(14), lcd_temp@temp_info(16), STR_17(15), 
 17028 ;;		 -> STR_16(12), lcd_humid@humid_info(16), STR_14(15), STR_13(12), 
 17029 ;;		 -> STR_12(12), lcd_sol@sol_info(16), STR_10(13), STR_9(13), 
 17030 ;;		 -> lcd_lum@lum_info(16), STR_7(13), STR_6(13), lcd_arrosage@data(16), 
 17031 ;; Auto vars:     Size  Location     Type
 17032 ;;		None
 17033 ;; Return value:  Size  Location     Type
 17034 ;;                  1    wreg      void 
 17035 ;; Registers used:
 17036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17037 ;; Tracked objects:
 17038 ;;		On entry : 0/0
 17039 ;;		On exit  : 0/0
 17040 ;;		Unchanged: 0/0
 17041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17042 ;;      Params:         2       0       0       0       0       0       0       0       0
 17043 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17044 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17045 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17046 ;;Total ram usage:        2 bytes
 17047 ;; Hardware stack levels used:    1
 17048 ;; Hardware stack levels required when called:    2
 17049 ;; This function calls:
 17050 ;;		_LCD_Char
 17051 ;; This function is called by:
 17052 ;;		_LCD_String_xy
 17053 ;; This function uses a non-reentrant model
 17054 ;;
 17055                           psect	text38,class=CODE,space=0,reloc=2,group=0
 17056                           	line	77
 17057                           global __ptext38
 17058                           __ptext38:
 17059  005150                     psect	text38
 17060                           	file	"./LCD4BITS.h"
 17061                           	line	77
 17062                           	global	__size_of_LCD_String
 17063                           	__size_of_LCD_String	equ	__end_of_LCD_String-_LCD_String
 17064  0000                     	
 17065                           _LCD_String:
 17066  005150                     ;incstack = 0
 17067                           	opt	stack 25
 17068                           	line	79
 17069                           	
 17070                           l3497:
 17071  005150                     ;./LCD4BITS.h: 77: void LCD_String(const char *msg);./LCD4BITS.h: 78: {;./LCD4BITS.h: 79
                                 :  while((*msg)!=0)
 17072                           	goto	l3503
 17073  005150  EFC0  F028         	
 17074                           l95:
 17075  005154                     	line	81
 17076                           	
 17077                           l3499:
 17078  005154                     ;./LCD4BITS.h: 80:  {;./LCD4BITS.h: 81:    LCD_Char(*msg);
 17079                           	movff	(c:LCD_String@msg),tblptrl
 17080  005154  C009  FFF6         	movff	(c:LCD_String@msg+1),tblptrh
 17081  005158  C00A  FFF7         	clrf	tblptru
 17082  00515C  6AF8               	
 17083                           	movlw	high __ramtop-1
 17084  00515E  0E07               	cpfsgt	tblptrh
 17085  005160  64F7               	bra	u4087
 17086  005162  D003               	tblrd	*
 17087  005164  0008               	
 17088                           	movf	tablat,w
 17089  005166  50F5               	bra	u4080
 17090  005168  D005               u4087:
 17091  00516A                     	movff	tblptrl,fsr1l
 17092  00516A  CFF6 FFE1          	movff	tblptrh,fsr1h
 17093  00516E  CFF7 FFE2          	movf	indf1,w
 17094  005172  50E7               u4080:
 17095  005174                     	
 17096                           	call	_LCD_Char
 17097  005174  EC6B  F02A         	line	82
 17098                           	
 17099                           l3501:
 17100  005178                     ;./LCD4BITS.h: 82:    msg++;
 17101                           	infsnz	((c:LCD_String@msg)),c
 17102  005178  4A09               	incf	((c:LCD_String@msg+1)),c
 17103  00517A  2A0A               	goto	l3503
 17104  00517C  EFC0  F028         	line	83
 17105                           ;./LCD4BITS.h: 83:     }
 17106                           	
 17107                           l94:
 17108  005180                     	line	79
 17109                           	
 17110                           l3503:
 17111  005180                     ;./LCD4BITS.h: 79:  while((*msg)!=0)
 17112                           	movff	(c:LCD_String@msg),tblptrl
 17113  005180  C009  FFF6         	movff	(c:LCD_String@msg+1),tblptrh
 17114  005184  C00A  FFF7         	clrf	tblptru
 17115  005188  6AF8               	
 17116                           	movlw	high __ramtop-1
 17117  00518A  0E07               	cpfsgt	tblptrh
 17118  00518C  64F7               	bra	u4097
 17119  00518E  D003               	tblrd	*
 17120  005190  0008               	
 17121                           	movf	tablat,w
 17122  005192  50F5               	bra	u4090
 17123  005194  D005               u4097:
 17124  005196                     	movff	tblptrl,fsr1l
 17125  005196  CFF6 FFE1          	movff	tblptrh,fsr1h
 17126  00519A  CFF7 FFE2          	movf	indf1,w
 17127  00519E  50E7               u4090:
 17128  0051A0                     	iorlw	0
 17129  0051A0  0900               	btfss	status,2
 17130  0051A2  A4D8               	goto	u4101
 17131  0051A4  EFD6  F028         	goto	u4100
 17132  0051A8  EFD8  F028         u4101:
 17133  0051AC                     	goto	l3499
 17134  0051AC  EFAA  F028         u4100:
 17135  0051B0                     	goto	l97
 17136  0051B0  EFDA  F028         	
 17137                           l96:
 17138  0051B4                     	line	84
 17139                           	
 17140                           l97:
 17141  0051B4                     	return	;funcret
 17142  0051B4  0012               	opt stack 0
 17143                           GLOBAL	__end_of_LCD_String
 17144                           	__end_of_LCD_String:
 17145  0051B6                     	signat	_LCD_String,4217
 17146                           	global	_LCD_Char
 17147                           
 17148 ;; *************** function _LCD_Char *****************
 17149 ;; Defined at:
 17150 ;;		line 61 in file "./LCD4BITS.h"
 17151 ;; Parameters:    Size  Location     Type
 17152 ;;  dat             1    wreg     unsigned char 
 17153 ;; Auto vars:     Size  Location     Type
 17154 ;;  dat             1    7[COMRAM] unsigned char 
 17155 ;; Return value:  Size  Location     Type
 17156 ;;                  1    wreg      void 
 17157 ;; Registers used:
 17158 ;;		wreg, status,2, status,0, cstack
 17159 ;; Tracked objects:
 17160 ;;		On entry : 0/0
 17161 ;;		On exit  : 0/0
 17162 ;;		Unchanged: 0/0
 17163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17164 ;;      Params:         0       0       0       0       0       0       0       0       0
 17165 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17166 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17167 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17168 ;;Total ram usage:        2 bytes
 17169 ;; Hardware stack levels used:    1
 17170 ;; Hardware stack levels required when called:    1
 17171 ;; This function calls:
 17172 ;;		_MSdelay
 17173 ;; This function is called by:
 17174 ;;		_LCD_String
 17175 ;; This function uses a non-reentrant model
 17176 ;;
 17177                           psect	text39,class=CODE,space=0,reloc=2,group=0
 17178                           	line	61
 17179                           global __ptext39
 17180                           __ptext39:
 17181  0054D6                     psect	text39
 17182                           	file	"./LCD4BITS.h"
 17183                           	line	61
 17184                           	global	__size_of_LCD_Char
 17185                           	__size_of_LCD_Char	equ	__end_of_LCD_Char-_LCD_Char
 17186  0000                     	
 17187                           _LCD_Char:
 17188  0054D6                     ;incstack = 0
 17189                           	opt	stack 25
 17190                           ;LCD_Char@dat stored from wreg
 17191                           	movwf	((c:LCD_Char@dat)),c
 17192  0054D6  6E08               	line	63
 17193                           	
 17194                           l3415:
 17195  0054D8                     ;./LCD4BITS.h: 61: void LCD_Char(unsigned char dat);./LCD4BITS.h: 62: {;./LCD4BITS.h: 63
                                 :  LATB = (LATB & 0x0f) | (0xF0 & dat);
 17196                           	movff	(c:LCD_Char@dat),??_LCD_Char+0+0
 17197  0054D8  C008  F007         	movlw	0F0h
 17198  0054DC  0EF0               	andwf	(??_LCD_Char+0+0),c
 17199  0054DE  1607               	movf	((c:3978)),c,w	;volatile
 17200  0054E0  508A               	andlw	low(0Fh)
 17201  0054E2  0B0F               	iorwf	(??_LCD_Char+0+0),c,w
 17202  0054E4  1007               	movwf	((c:3978)),c	;volatile
 17203  0054E6  6E8A               	line	64
 17204                           	
 17205                           l3417:
 17206  0054E8                     ;./LCD4BITS.h: 64:  LATB0 = 1;
 17207                           	bsf	c:(31824/8),(31824)&7	;volatile
 17208  0054E8  808A               	line	65
 17209                           	
 17210                           l3419:
 17211  0054EA                     ;./LCD4BITS.h: 65:  LATB1 = 1;
 17212                           	bsf	c:(31825/8),(31825)&7	;volatile
 17213  0054EA  828A               	line	66
 17214                           	
 17215                           l3421:
 17216  0054EC                     ;./LCD4BITS.h: 66:  __nop();
 17217                           	opt	asmopt_push
 17218                           	opt	asmopt_off
 17219                           	nop
 17220  0054EC  F000               	opt	asmopt_pop
 17221                           	line	67
 17222                           	
 17223                           l3423:
 17224  0054EE                     ;./LCD4BITS.h: 67:  LATB1 = 0;
 17225                           	bcf	c:(31825/8),(31825)&7	;volatile
 17226  0054EE  928A               	line	68
 17227                           	
 17228                           l3425:
 17229  0054F0                     ;./LCD4BITS.h: 68:  MSdelay(1);
 17230                           	movlw	high(01h)
 17231  0054F0  0E00               	movwf	((c:MSdelay@val+1)),c
 17232  0054F2  6E02               	movlw	low(01h)
 17233  0054F4  0E01               	movwf	((c:MSdelay@val)),c
 17234  0054F6  6E01               	call	_MSdelay	;wreg free
 17235  0054F8  EC07  F028         	line	69
 17236                           	
 17237                           l3427:
 17238  0054FC                     ;./LCD4BITS.h: 69:     LATB = (LATB & 0x0f) | (dat<<4);
 17239                           	movff	(c:LCD_Char@dat),??_LCD_Char+0+0
 17240  0054FC  C008  F007         	swapf	(??_LCD_Char+0+0),c
 17241  005500  3A07               	movlw	(0ffh shl 4) & 0ffh
 17242  005502  0EF0               	andwf	(??_LCD_Char+0+0),c
 17243  005504  1607               	movf	((c:3978)),c,w	;volatile
 17244  005506  508A               	andlw	low(0Fh)
 17245  005508  0B0F               	iorwf	(??_LCD_Char+0+0),c,w
 17246  00550A  1007               	movwf	((c:3978)),c	;volatile
 17247  00550C  6E8A               	line	70
 17248                           	
 17249                           l3429:
 17250  00550E                     ;./LCD4BITS.h: 70:  LATB1 = 1;
 17251                           	bsf	c:(31825/8),(31825)&7	;volatile
 17252  00550E  828A               	line	71
 17253                           	
 17254                           l3431:
 17255  005510                     ;./LCD4BITS.h: 71:  __nop();
 17256                           	opt	asmopt_push
 17257                           	opt	asmopt_off
 17258                           	nop
 17259  005510  F000               	opt	asmopt_pop
 17260                           	line	72
 17261                           	
 17262                           l3433:
 17263  005512                     ;./LCD4BITS.h: 72:  LATB1 = 0;
 17264                           	bcf	c:(31825/8),(31825)&7	;volatile
 17265  005512  928A               	line	73
 17266                           ;./LCD4BITS.h: 73:  MSdelay(3);
 17267                           	movlw	high(03h)
 17268  005514  0E00               	movwf	((c:MSdelay@val+1)),c
 17269  005516  6E02               	movlw	low(03h)
 17270  005518  0E03               	movwf	((c:MSdelay@val)),c
 17271  00551A  6E01               	call	_MSdelay	;wreg free
 17272  00551C  EC07  F028         	line	74
 17273                           	
 17274                           l91:
 17275  005520                     	return	;funcret
 17276  005520  0012               	opt stack 0
 17277                           GLOBAL	__end_of_LCD_Char
 17278                           	__end_of_LCD_Char:
 17279  005522                     	signat	_LCD_Char,4217
 17280                           	global	_hex_converter
 17281                           
 17282 ;; *************** function _hex_converter *****************
 17283 ;; Defined at:
 17284 ;;		line 25 in file "./AnalogToDigital.h"
 17285 ;; Parameters:    Size  Location     Type
 17286 ;;  x               2   22[COMRAM] unsigned int 
 17287 ;; Auto vars:     Size  Location     Type
 17288 ;;  convert         3   26[COMRAM] unsigned char [3]
 17289 ;;  result          2   24[COMRAM] unsigned int 
 17290 ;; Return value:  Size  Location     Type
 17291 ;;                  2   22[COMRAM] unsigned int 
 17292 ;; Registers used:
 17293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17294 ;; Tracked objects:
 17295 ;;		On entry : 0/0
 17296 ;;		On exit  : 0/0
 17297 ;;		Unchanged: 0/0
 17298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17299 ;;      Params:         2       0       0       0       0       0       0       0       0
 17300 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17301 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17302 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17303 ;;Total ram usage:        7 bytes
 17304 ;; Hardware stack levels used:    1
 17305 ;; Hardware stack levels required when called:    2
 17306 ;; This function calls:
 17307 ;;		___lwdiv
 17308 ;;		___lwmod
 17309 ;;		_atoi
 17310 ;; This function is called by:
 17311 ;;		_main
 17312 ;; This function uses a non-reentrant model
 17313 ;;
 17314                           psect	text40,class=CODE,space=0,reloc=2,group=0
 17315                           	file	"./AnalogToDigital.h"
 17316                           	line	25
 17317                           global __ptext40
 17318                           __ptext40:
 17319  004C6A                     psect	text40
 17320                           	file	"./AnalogToDigital.h"
 17321                           	line	25
 17322                           	global	__size_of_hex_converter
 17323                           	__size_of_hex_converter	equ	__end_of_hex_converter-_hex_converter
 17324  0000                     	
 17325                           _hex_converter:
 17326  004C6A                     ;incstack = 0
 17327                           	opt	stack 28
 17328                           	line	29
 17329                           	
 17330                           l4801:
 17331  004C6A                     ;./AnalogToDigital.h: 25:     unsigned int hex_converter(unsigned int x);./AnalogToDigit
                                 al.h: 26:     {;./AnalogToDigital.h: 27:         char convert[3];;./AnalogToDigital.h: 2
                                 8:         unsigned int result;;./AnalogToDigital.h: 29:         convert[0]=((x)/1000)%1
                                 0 | (0x30);
 17332                           	movlw	high(03E8h)
 17333  004C6A  0E03               	movwf	((c:___lwdiv@divisor+1)),c
 17334  004C6C  6E04               	movlw	low(03E8h)
 17335  004C6E  0EE8               	movwf	((c:___lwdiv@divisor)),c
 17336  004C70  6E03               	movff	(c:hex_converter@x),(c:___lwdiv@dividend)
 17337  004C72  C017  F001         	movff	(c:hex_converter@x+1),(c:___lwdiv@dividend+1)
 17338  004C76  C018  F002         	call	___lwdiv	;wreg free
 17339  004C7A  EC4D  F027         	movff	0+?___lwdiv,(c:___lwmod@dividend)
 17340  004C7E  C001  F008         	movff	1+?___lwdiv,(c:___lwmod@dividend+1)
 17341  004C82  C002  F009         	movlw	high(0Ah)
 17342  004C86  0E00               	movwf	((c:___lwmod@divisor+1)),c
 17343  004C88  6E0B               	movlw	low(0Ah)
 17344  004C8A  0E0A               	movwf	((c:___lwmod@divisor)),c
 17345  004C8C  6E0A               	call	___lwmod	;wreg free
 17346  004C8E  EC91  F027         	movf	(0+?___lwmod),c,w
 17347  004C92  5008               	iorlw	low(030h)
 17348  004C94  0930               	movwf	((c:hex_converter@convert)),c
 17349  004C96  6E1B               	line	30
 17350                           ;./AnalogToDigital.h: 30:         convert[1]=((x)/100)%10 | (0x30);
 17351                           	movlw	high(064h)
 17352  004C98  0E00               	movwf	((c:___lwdiv@divisor+1)),c
 17353  004C9A  6E04               	movlw	low(064h)
 17354  004C9C  0E64               	movwf	((c:___lwdiv@divisor)),c
 17355  004C9E  6E03               	movff	(c:hex_converter@x),(c:___lwdiv@dividend)
 17356  004CA0  C017  F001         	movff	(c:hex_converter@x+1),(c:___lwdiv@dividend+1)
 17357  004CA4  C018  F002         	call	___lwdiv	;wreg free
 17358  004CA8  EC4D  F027         	movff	0+?___lwdiv,(c:___lwmod@dividend)
 17359  004CAC  C001  F008         	movff	1+?___lwdiv,(c:___lwmod@dividend+1)
 17360  004CB0  C002  F009         	movlw	high(0Ah)
 17361  004CB4  0E00               	movwf	((c:___lwmod@divisor+1)),c
 17362  004CB6  6E0B               	movlw	low(0Ah)
 17363  004CB8  0E0A               	movwf	((c:___lwmod@divisor)),c
 17364  004CBA  6E0A               	call	___lwmod	;wreg free
 17365  004CBC  EC91  F027         	movf	(0+?___lwmod),c,w
 17366  004CC0  5008               	iorlw	low(030h)
 17367  004CC2  0930               	movwf	(0+((c:hex_converter@convert)+01h)),c
 17368  004CC4  6E1C               	line	31
 17369                           ;./AnalogToDigital.h: 31:         convert[2]=((x)/10)%10 | (0x30);
 17370                           	movlw	high(0Ah)
 17371  004CC6  0E00               	movwf	((c:___lwdiv@divisor+1)),c
 17372  004CC8  6E04               	movlw	low(0Ah)
 17373  004CCA  0E0A               	movwf	((c:___lwdiv@divisor)),c
 17374  004CCC  6E03               	movff	(c:hex_converter@x),(c:___lwdiv@dividend)
 17375  004CCE  C017  F001         	movff	(c:hex_converter@x+1),(c:___lwdiv@dividend+1)
 17376  004CD2  C018  F002         	call	___lwdiv	;wreg free
 17377  004CD6  EC4D  F027         	movff	0+?___lwdiv,(c:___lwmod@dividend)
 17378  004CDA  C001  F008         	movff	1+?___lwdiv,(c:___lwmod@dividend+1)
 17379  004CDE  C002  F009         	movlw	high(0Ah)
 17380  004CE2  0E00               	movwf	((c:___lwmod@divisor+1)),c
 17381  004CE4  6E0B               	movlw	low(0Ah)
 17382  004CE6  0E0A               	movwf	((c:___lwmod@divisor)),c
 17383  004CE8  6E0A               	call	___lwmod	;wreg free
 17384  004CEA  EC91  F027         	movf	(0+?___lwmod),c,w
 17385  004CEE  5008               	iorlw	low(030h)
 17386  004CF0  0930               	movwf	(0+((c:hex_converter@convert)+02h)),c
 17387  004CF2  6E1D               	line	32
 17388                           ;./AnalogToDigital.h: 32:         convert[3]=((x))%10 | (0x30);
 17389                           	movff	(c:hex_converter@x),(c:___lwmod@dividend)
 17390  004CF4  C017  F008         	movff	(c:hex_converter@x+1),(c:___lwmod@dividend+1)
 17391  004CF8  C018  F009         	movlw	high(0Ah)
 17392  004CFC  0E00               	movwf	((c:___lwmod@divisor+1)),c
 17393  004CFE  6E0B               	movlw	low(0Ah)
 17394  004D00  0E0A               	movwf	((c:___lwmod@divisor)),c
 17395  004D02  6E0A               	call	___lwmod	;wreg free
 17396  004D04  EC91  F027         	movf	(0+?___lwmod),c,w
 17397  004D08  5008               	iorlw	low(030h)
 17398  004D0A  0930               	movwf	(0+((c:hex_converter@convert)+03h)),c
 17399  004D0C  6E1E               	line	33
 17400                           	
 17401                           l4803:
 17402  004D0E                     ;./AnalogToDigital.h: 33:         result=atoi(convert);
 17403                           		movlw	low(hex_converter@convert)
 17404  004D0E  0E1B               	movwf	((c:atoi@s)),c
 17405  004D10  6E08               	movlw	high(hex_converter@convert)
 17406  004D12  0E00               	movwf	((c:atoi@s+1)),c
 17407  004D14  6E09               
 17408                           	call	_atoi	;wreg free
 17409  004D16  ECEC  F01B         	movff	0+?_atoi,(c:hex_converter@result)
 17410  004D1A  C008  F019         	movff	1+?_atoi,(c:hex_converter@result+1)
 17411  004D1E  C009  F01A         	line	34
 17412                           	
 17413                           l4805:
 17414  004D22                     ;./AnalogToDigital.h: 34:         return(result);
 17415                           	movff	(c:hex_converter@result),(c:?_hex_converter)
 17416  004D22  C019  F017         	movff	(c:hex_converter@result+1),(c:?_hex_converter+1)
 17417  004D26  C01A  F018         	goto	l82
 17418  004D2A  EF97  F026         	
 17419                           l4807:
 17420  004D2E                     	line	35
 17421                           	
 17422                           l82:
 17423  004D2E                     	return	;funcret
 17424  004D2E  0012               	opt stack 0
 17425                           GLOBAL	__end_of_hex_converter
 17426                           	__end_of_hex_converter:
 17427  004D30                     	signat	_hex_converter,4218
 17428                           	global	_atoi
 17429                           
 17430 ;; *************** function _atoi *****************
 17431 ;; Defined at:
 17432 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 17433 ;; Parameters:    Size  Location     Type
 17434 ;;  s               2    7[COMRAM] PTR const unsigned char 
 17435 ;;		 -> hex_converter@convert(3), 
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;  n               2   20[COMRAM] int 
 17438 ;;  neg             2   13[COMRAM] int 
 17439 ;; Return value:  Size  Location     Type
 17440 ;;                  2    7[COMRAM] int 
 17441 ;; Registers used:
 17442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17443 ;; Tracked objects:
 17444 ;;		On entry : 0/0
 17445 ;;		On exit  : 0/0
 17446 ;;		Unchanged: 0/0
 17447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17448 ;;      Params:         2       0       0       0       0       0       0       0       0
 17449 ;;      Locals:         9       0       0       0       0       0       0       0       0
 17450 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17451 ;;      Totals:        15       0       0       0       0       0       0       0       0
 17452 ;;Total ram usage:       15 bytes
 17453 ;; Hardware stack levels used:    1
 17454 ;; Hardware stack levels required when called:    1
 17455 ;; This function calls:
 17456 ;;		___wmul
 17457 ;;		_isdigit
 17458 ;;		_isspace
 17459 ;; This function is called by:
 17460 ;;		_hex_converter
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           psect	text41,class=CODE,space=0,reloc=2,group=2
 17464                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 17465                           	line	4
 17466                           global __ptext41
 17467                           __ptext41:
 17468  0037D8                     psect	text41
 17469                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 17470                           	line	4
 17471                           	global	__size_of_atoi
 17472                           	__size_of_atoi	equ	__end_of_atoi-_atoi
 17473  0000                     	
 17474                           _atoi:
 17475  0037D8                     ;incstack = 0
 17476                           	opt	stack 28
 17477                           	line	6
 17478                           	
 17479                           l4279:
 17480  0037D8                     	movlw	high(0)
 17481  0037D8  0E00               	movwf	((c:atoi@n+1)),c
 17482  0037DA  6E16               	movlw	low(0)
 17483  0037DC  0E00               	movwf	((c:atoi@n)),c
 17484  0037DE  6E15               	movlw	high(0)
 17485  0037E0  0E00               	movwf	((c:atoi@neg+1)),c
 17486  0037E2  6E0F               	movlw	low(0)
 17487  0037E4  0E00               	movwf	((c:atoi@neg)),c
 17488  0037E6  6E0E               	line	7
 17489                           	goto	l4283
 17490  0037E8  EFFA  F01B         	
 17491                           l1146:
 17492  0037EC                     	
 17493                           l4281:
 17494  0037EC                     	infsnz	((c:atoi@s)),c
 17495  0037EC  4A08               	incf	((c:atoi@s+1)),c
 17496  0037EE  2A09               	goto	l4283
 17497  0037F0  EFFA  F01B         	
 17498                           l1145:
 17499  0037F4                     	
 17500                           l4283:
 17501  0037F4                     	movlw	low(01h)
 17502  0037F4  0E01               	movwf	((c:_atoi$963)),c
 17503  0037F6  6E14               	
 17504                           l4285:
 17505  0037F8                     	movff	(c:atoi@s),fsr2l
 17506  0037F8  C008  FFD9         	movff	(c:atoi@s+1),fsr2h
 17507  0037FC  C009  FFDA         	movlw	32
 17508  003800  0E20               	xorwf	postinc2,w
 17509  003802  18DE               	btfsc	status,2
 17510  003804  B4D8               	goto	u5441
 17511  003806  EF07  F01C         	goto	u5440
 17512  00380A  EF09  F01C         
 17513                           u5441:
 17514  00380E                     	goto	l4291
 17515  00380E  EF27  F01C         u5440:
 17516  003812                     	
 17517                           l4287:
 17518  003812                     	movlw	low(0FFF7h)
 17519  003812  0EF7               	movwf	(??_atoi+0+0)&0ffh,c
 17520  003814  6E0A               	movlw	high(0FFF7h)
 17521  003816  0EFF               	movwf	1+(??_atoi+0+0)&0ffh,c
 17522  003818  6E0B               	movff	(c:atoi@s),fsr2l
 17523  00381A  C008  FFD9         	movff	(c:atoi@s+1),fsr2h
 17524  00381E  C009  FFDA         	movf	indf2,w
 17525  003822  50DF               	movwf	(??_atoi+2+0)&0ffh,c
 17526  003824  6E0C               	clrf	(??_atoi+2+0+1)&0ffh,c
 17527  003826  6A0D               
 17528                           	movf	(??_atoi+0+0),c,w
 17529  003828  500A               	addwf	(??_atoi+2+0),c
 17530  00382A  260C               	movf	(??_atoi+0+1),c,w
 17531  00382C  500B               	addwfc	(??_atoi+2+1),c
 17532  00382E  220D               		movf	(??_atoi+2+1),c,w
 17533  003830  500D               	bnz	u5450
 17534  003832  E109               	movlw	5
 17535  003834  0E05               	subwf	 (??_atoi+2+0),c,w
 17536  003836  5C0C               	btfss	status,0
 17537  003838  A0D8               	goto	u5451
 17538  00383A  EF21  F01C         	goto	u5450
 17539  00383E  EF23  F01C         
 17540                           u5451:
 17541  003842                     	goto	l4291
 17542  003842  EF27  F01C         u5450:
 17543  003846                     	
 17544                           l4289:
 17545  003846                     	movlw	low(0)
 17546  003846  0E00               	movwf	((c:_atoi$963)),c
 17547  003848  6E14               	goto	l4291
 17548  00384A  EF27  F01C         	
 17549                           l1152:
 17550  00384E                     	
 17551                           l4291:
 17552  00384E                     	movff	(c:_atoi$963),(c:_atoi$962)
 17553  00384E  C014  F010         	clrf	((c:_atoi$962+1)),c
 17554  003852  6A11               	goto	l4295
 17555  003854  EF3D  F01C         	
 17556                           l1148:
 17557  003858                     	
 17558                           l4293:
 17559  003858                     	movff	(c:atoi@s),fsr2l
 17560  003858  C008  FFD9         	movff	(c:atoi@s+1),fsr2h
 17561  00385C  C009  FFDA         	movf	indf2,w
 17562  003860  50DF               	movwf	(??_atoi+0+0)&0ffh,c
 17563  003862  6E0A               	movf	((??_atoi+0+0)),c,w
 17564  003864  500A               	movwf	((c:isspace@c)),c
 17565  003866  6E01               	clrf	((c:isspace@c+1)),c
 17566  003868  6A02               	call	_isspace	;wreg free
 17567  00386A  ECC5  F029         	movff	0+?_isspace,(c:_atoi$962)
 17568  00386E  C001  F010         	movff	1+?_isspace,(c:_atoi$962+1)
 17569  003872  C002  F011         	goto	l4295
 17570  003876  EF3D  F01C         	
 17571                           l1150:
 17572  00387A                     	
 17573                           l4295:
 17574  00387A                     	movf	((c:_atoi$962)),c,w
 17575  00387A  5010               iorwf	((c:_atoi$962+1)),c,w
 17576  00387C  1011               	btfss	status,2
 17577  00387E  A4D8               	goto	u5461
 17578  003880  EF44  F01C         	goto	u5460
 17579  003884  EF46  F01C         
 17580                           u5461:
 17581  003888                     	goto	l4281
 17582  003888  EFF6  F01B         u5460:
 17583  00388C                     	goto	l4301
 17584  00388C  EF54  F01C         	
 17585                           l1153:
 17586  003890                     	line	8
 17587                           	goto	l4301
 17588  003890  EF54  F01C         	line	9
 17589                           	
 17590                           l1155:
 17591  003894                     	
 17592                           l4297:
 17593  003894                     	movlw	high(01h)
 17594  003894  0E00               	movwf	((c:atoi@neg+1)),c
 17595  003896  6E0F               	movlw	low(01h)
 17596  003898  0E01               	movwf	((c:atoi@neg)),c
 17597  00389A  6E0E               	goto	l4299
 17598  00389C  EF50  F01C         	line	10
 17599                           	
 17600                           l1156:
 17601  0038A0                     	
 17602                           l4299:
 17603  0038A0                     	infsnz	((c:atoi@s)),c
 17604  0038A0  4A08               	incf	((c:atoi@s+1)),c
 17605  0038A2  2A09               	line	11
 17606                           	goto	l4307
 17607  0038A4  EF96  F01C         	
 17608                           l1154:
 17609  0038A8                     	
 17610                           l4301:
 17611  0038A8                     	movff	(c:atoi@s),fsr2l
 17612  0038A8  C008  FFD9         	movff	(c:atoi@s+1),fsr2h
 17613  0038AC  C009  FFDA         	movf	indf2,w
 17614  0038B0  50DF               	movwf	(??_atoi+0+0)&0ffh,c
 17615  0038B2  6E0A               	clrf	(??_atoi+0+0+1)&0ffh,c
 17616  0038B4  6A0B               
 17617                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 17618                           ; Switch size 1, requested type "space"
 17619                           ; Number of cases is 1, Range of values is 0 to 0
 17620                           ; switch strategies available:
 17621                           ; Name         Instructions Cycles
 17622                           ; simple_byte            4     3 (average)
 17623                           ;	Chosen strategy is simple_byte
 17624                           
 17625                           	movf ??_atoi+0+1,c,w
 17626  0038B6  500B               	xorlw	0^0	; case 0
 17627  0038B8  0A00               	skipnz
 17628  0038BA  B4D8               	goto	l5149
 17629  0038BC  EF62  F01C         	goto	l4307
 17630  0038C0  EF96  F01C         	
 17631                           l5149:
 17632  0038C4                     ; Switch size 1, requested type "space"
 17633                           ; Number of cases is 2, Range of values is 43 to 45
 17634                           ; switch strategies available:
 17635                           ; Name         Instructions Cycles
 17636                           ; simple_byte            7     4 (average)
 17637                           ;	Chosen strategy is simple_byte
 17638                           
 17639                           	movf ??_atoi+0+0,c,w
 17640  0038C4  500A               	xorlw	43^0	; case 43
 17641  0038C6  0A2B               	skipnz
 17642  0038C8  B4D8               	goto	l4299
 17643  0038CA  EF50  F01C         	xorlw	45^43	; case 45
 17644  0038CE  0A06               	skipnz
 17645  0038D0  B4D8               	goto	l4297
 17646  0038D2  EF4A  F01C         	goto	l4307
 17647  0038D6  EF96  F01C         
 17648                           	
 17649                           l1157:
 17650  0038DA                     	line	13
 17651                           	goto	l4307
 17652  0038DA  EF96  F01C         	
 17653                           l1159:
 17654  0038DE                     	line	14
 17655                           	
 17656                           l4303:
 17657  0038DE                     	movlw	low(0FFD0h)
 17658  0038DE  0ED0               	movwf	(??_atoi+0+0)&0ffh,c
 17659  0038E0  6E0A               	movlw	high(0FFD0h)
 17660  0038E2  0EFF               	movwf	1+(??_atoi+0+0)&0ffh,c
 17661  0038E4  6E0B               	movff	(c:atoi@s),fsr2l
 17662  0038E6  C008  FFD9         	movff	(c:atoi@s+1),fsr2h
 17663  0038EA  C009  FFDA         	movf	indf2,w
 17664  0038EE  50DF               	movwf	(??_atoi+2+0)&0ffh,c
 17665  0038F0  6E0C               	clrf	(??_atoi+2+0+1)&0ffh,c
 17666  0038F2  6A0D               
 17667                           	movf	(??_atoi+0+0),c,w
 17668  0038F4  500A               	addwf	(??_atoi+2+0),c
 17669  0038F6  260C               	movf	(??_atoi+0+1),c,w
 17670  0038F8  500B               	addwfc	(??_atoi+2+1),c
 17671  0038FA  220D               	comf	(??_atoi+2+0),c
 17672  0038FC  1E0C               	comf	(??_atoi+2+1),c
 17673  0038FE  1E0D               	infsnz	(??_atoi+2+0),c
 17674  003900  4A0C               	incf	(??_atoi+2+1),c
 17675  003902  2A0D               	movff	(c:atoi@n),(c:___wmul@multiplier)
 17676  003904  C015  F001         	movff	(c:atoi@n+1),(c:___wmul@multiplier+1)
 17677  003908  C016  F002         	movlw	high(0Ah)
 17678  00390C  0E00               	movwf	((c:___wmul@multiplicand+1)),c
 17679  00390E  6E04               	movlw	low(0Ah)
 17680  003910  0E0A               	movwf	((c:___wmul@multiplicand)),c
 17681  003912  6E03               	call	___wmul	;wreg free
 17682  003914  EC9E  F02B         	movf	(??_atoi+2+0),c,w
 17683  003918  500C               	addwf	(0+?___wmul),c,w
 17684  00391A  2401               	movwf	((c:atoi@n)),c
 17685  00391C  6E15               	movf	(??_atoi+2+1),c,w
 17686  00391E  500D               	addwfc	(1+?___wmul),c,w
 17687  003920  2002               	movwf	1+((c:atoi@n)),c
 17688  003922  6E16               	
 17689                           l4305:
 17690  003924                     	infsnz	((c:atoi@s)),c
 17691  003924  4A08               	incf	((c:atoi@s+1)),c
 17692  003926  2A09               	goto	l4307
 17693  003928  EF96  F01C         	
 17694                           l1158:
 17695  00392C                     	line	13
 17696                           	
 17697                           l4307:
 17698  00392C                     	movlw	low(0FFD0h)
 17699  00392C  0ED0               	movwf	(??_atoi+0+0)&0ffh,c
 17700  00392E  6E0A               	movlw	high(0FFD0h)
 17701  003930  0EFF               	movwf	1+(??_atoi+0+0)&0ffh,c
 17702  003932  6E0B               	movff	(c:atoi@s),fsr2l
 17703  003934  C008  FFD9         	movff	(c:atoi@s+1),fsr2h
 17704  003938  C009  FFDA         	movf	indf2,w
 17705  00393C  50DF               	movwf	(??_atoi+2+0)&0ffh,c
 17706  00393E  6E0C               	clrf	(??_atoi+2+0+1)&0ffh,c
 17707  003940  6A0D               
 17708                           	movf	(??_atoi+0+0),c,w
 17709  003942  500A               	addwf	(??_atoi+2+0),c
 17710  003944  260C               	movf	(??_atoi+0+1),c,w
 17711  003946  500B               	addwfc	(??_atoi+2+1),c
 17712  003948  220D               		movf	(??_atoi+2+1),c,w
 17713  00394A  500D               	bnz	u5470
 17714  00394C  E10A               	movlw	10
 17715  00394E  0E0A               	subwf	 (??_atoi+2+0),c,w
 17716  003950  5C0C               	btfss	status,0
 17717  003952  A0D8               	goto	u5471
 17718  003954  EFAE  F01C         	goto	u5470
 17719  003958  EFB1  F01C         
 17720                           u5471:
 17721  00395C                     	movlw	1
 17722  00395C  0E01               	goto	u5480
 17723  00395E  EFB2  F01C         u5470:
 17724  003962                     	movlw	0
 17725  003962  0E00               u5480:
 17726  003964                     	movwf	((c:_atoi$964)),c
 17727  003964  6E12               	clrf	((c:_atoi$964+1)),c
 17728  003966  6A13               	goto	l4311
 17729  003968  EFC7  F01C         	
 17730                           l1161:
 17731  00396C                     	
 17732                           l4309:
 17733  00396C                     	movff	(c:atoi@s),fsr2l
 17734  00396C  C008  FFD9         	movff	(c:atoi@s+1),fsr2h
 17735  003970  C009  FFDA         	movf	indf2,w
 17736  003974  50DF               	movwf	(??_atoi+0+0)&0ffh,c
 17737  003976  6E0A               	movf	((??_atoi+0+0)),c,w
 17738  003978  500A               	movwf	((c:isdigit@c)),c
 17739  00397A  6E01               	clrf	((c:isdigit@c+1)),c
 17740  00397C  6A02               	call	_isdigit	;wreg free
 17741  00397E  EC3E  F02B         	movff	0+?_isdigit,(c:_atoi$964)
 17742  003982  C001  F012         	movff	1+?_isdigit,(c:_atoi$964+1)
 17743  003986  C002  F013         	goto	l4311
 17744  00398A  EFC7  F01C         	
 17745                           l1163:
 17746  00398E                     	
 17747                           l4311:
 17748  00398E                     	movf	((c:_atoi$964)),c,w
 17749  00398E  5012               iorwf	((c:_atoi$964+1)),c,w
 17750  003990  1013               	btfss	status,2
 17751  003992  A4D8               	goto	u5491
 17752  003994  EFCE  F01C         	goto	u5490
 17753  003998  EFD0  F01C         
 17754                           u5491:
 17755  00399C                     	goto	l4303
 17756  00399C  EF6F  F01C         u5490:
 17757  0039A0                     	goto	l4313
 17758  0039A0  EFD2  F01C         	
 17759                           l1164:
 17760  0039A4                     	line	15
 17761                           	
 17762                           l4313:
 17763  0039A4                     	movf	((c:atoi@neg)),c,w
 17764  0039A4  500E               iorwf	((c:atoi@neg+1)),c,w
 17765  0039A6  100F               	btfss	status,2
 17766  0039A8  A4D8               	goto	u5501
 17767  0039AA  EFD9  F01C         	goto	u5500
 17768  0039AE  EFDB  F01C         
 17769                           u5501:
 17770  0039B2                     	goto	l1166
 17771  0039B2  EFE9  F01C         u5500:
 17772  0039B6                     	
 17773                           l4315:
 17774  0039B6                     	movff	(c:atoi@n),??_atoi+0+0
 17775  0039B6  C015  F00A         	movff	(c:atoi@n+1),??_atoi+0+0+1
 17776  0039BA  C016  F00B         	comf	(??_atoi+0+0),c
 17777  0039BE  1E0A               	comf	(??_atoi+0+1),c
 17778  0039C0  1E0B               	infsnz	(??_atoi+0+0),c
 17779  0039C2  4A0A               	incf	(??_atoi+0+1),c
 17780  0039C4  2A0B               	movff	??_atoi+0+0,(c:?_atoi)
 17781  0039C6  C00A  F008         	movff	??_atoi+0+1,(c:?_atoi+1)
 17782  0039CA  C00B  F009         	goto	l1169
 17783  0039CE  EFEF  F01C         	
 17784                           l1166:
 17785  0039D2                     	movff	(c:atoi@n),(c:?_atoi)
 17786  0039D2  C015  F008         	movff	(c:atoi@n+1),(c:?_atoi+1)
 17787  0039D6  C016  F009         	goto	l1169
 17788  0039DA  EFEF  F01C         	
 17789                           l1168:
 17790  0039DE                     	line	16
 17791                           	
 17792                           l1169:
 17793  0039DE                     	return	;funcret
 17794  0039DE  0012               	opt stack 0
 17795                           GLOBAL	__end_of_atoi
 17796                           	__end_of_atoi:
 17797  0039E0                     	signat	_atoi,4218
 17798                           	global	_isspace
 17799                           
 17800 ;; *************** function _isspace *****************
 17801 ;; Defined at:
 17802 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 17803 ;; Parameters:    Size  Location     Type
 17804 ;;  c               2    0[COMRAM] int 
 17805 ;; Auto vars:     Size  Location     Type
 17806 ;;		None
 17807 ;; Return value:  Size  Location     Type
 17808 ;;                  2    0[COMRAM] int 
 17809 ;; Registers used:
 17810 ;;		wreg, status,2, status,0
 17811 ;; Tracked objects:
 17812 ;;		On entry : 0/0
 17813 ;;		On exit  : 0/0
 17814 ;;		Unchanged: 0/0
 17815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17816 ;;      Params:         2       0       0       0       0       0       0       0       0
 17817 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17818 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17819 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17820 ;;Total ram usage:        7 bytes
 17821 ;; Hardware stack levels used:    1
 17822 ;; This function calls:
 17823 ;;		Nothing
 17824 ;; This function is called by:
 17825 ;;		_atoi
 17826 ;; This function uses a non-reentrant model
 17827 ;;
 17828                           psect	text42,class=CODE,space=0,reloc=2,group=2
 17829                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 17830                           	line	5
 17831                           global __ptext42
 17832                           __ptext42:
 17833  00538A                     psect	text42
 17834                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 17835                           	line	5
 17836                           	global	__size_of_isspace
 17837                           	__size_of_isspace	equ	__end_of_isspace-_isspace
 17838  0000                     	
 17839                           _isspace:
 17840  00538A                     ;incstack = 0
 17841                           	opt	stack 28
 17842                           	line	7
 17843                           	
 17844                           l4263:
 17845  00538A                     	movlw	low(01h)
 17846  00538A  0E01               	movwf	((c:_isspace$980)),c
 17847  00538C  6E07               	
 17848                           l4265:
 17849  00538E                     		movlw	32
 17850  00538E  0E20               	xorwf	((c:isspace@c)),c,w
 17851  005390  1801               iorwf	((c:isspace@c+1)),c,w
 17852  005392  1002               	btfsc	status,2
 17853  005394  B4D8               	goto	u5401
 17854  005396  EFCF  F029         	goto	u5400
 17855  00539A  EFD1  F029         
 17856                           u5401:
 17857  00539E                     	goto	l4271
 17858  00539E  EFEC  F029         u5400:
 17859  0053A2                     	
 17860                           l4267:
 17861  0053A2                     	movlw	low(0FFF7h)
 17862  0053A2  0EF7               	movwf	(??_isspace+0+0)&0ffh,c
 17863  0053A4  6E03               	movlw	high(0FFF7h)
 17864  0053A6  0EFF               	movwf	1+(??_isspace+0+0)&0ffh,c
 17865  0053A8  6E04               	movff	(c:isspace@c),??_isspace+2+0
 17866  0053AA  C001  F005         	movff	(c:isspace@c+1),??_isspace+2+0+1
 17867  0053AE  C002  F006         	movf	(??_isspace+0+0),c,w
 17868  0053B2  5003               	addwf	(??_isspace+2+0),c
 17869  0053B4  2605               	movf	(??_isspace+0+1),c,w
 17870  0053B6  5004               	addwfc	(??_isspace+2+1),c
 17871  0053B8  2206               		movf	(??_isspace+2+1),c,w
 17872  0053BA  5006               	bnz	u5410
 17873  0053BC  E109               	movlw	5
 17874  0053BE  0E05               	subwf	 (??_isspace+2+0),c,w
 17875  0053C0  5C05               	btfss	status,0
 17876  0053C2  A0D8               	goto	u5411
 17877  0053C4  EFE6  F029         	goto	u5410
 17878  0053C8  EFE8  F029         
 17879                           u5411:
 17880  0053CC                     	goto	l4271
 17881  0053CC  EFEC  F029         u5410:
 17882  0053D0                     	
 17883                           l4269:
 17884  0053D0                     	movlw	low(0)
 17885  0053D0  0E00               	movwf	((c:_isspace$980)),c
 17886  0053D2  6E07               	goto	l4271
 17887  0053D4  EFEC  F029         	
 17888                           l1179:
 17889  0053D8                     	
 17890                           l4271:
 17891  0053D8                     	movff	(c:_isspace$980),(c:?_isspace)
 17892  0053D8  C007  F001         	clrf	((c:?_isspace+1)),c
 17893  0053DC  6A02               	goto	l1180
 17894  0053DE  EFF1  F029         	
 17895                           l4273:
 17896  0053E2                     	line	8
 17897                           	
 17898                           l1180:
 17899  0053E2                     	return	;funcret
 17900  0053E2  0012               	opt stack 0
 17901                           GLOBAL	__end_of_isspace
 17902                           	__end_of_isspace:
 17903  0053E4                     	signat	_isspace,4218
 17904                           	global	_isdigit
 17905                           
 17906 ;; *************** function _isdigit *****************
 17907 ;; Defined at:
 17908 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 17909 ;; Parameters:    Size  Location     Type
 17910 ;;  c               2    0[COMRAM] int 
 17911 ;; Auto vars:     Size  Location     Type
 17912 ;;		None
 17913 ;; Return value:  Size  Location     Type
 17914 ;;                  2    0[COMRAM] int 
 17915 ;; Registers used:
 17916 ;;		wreg, status,2, status,0
 17917 ;; Tracked objects:
 17918 ;;		On entry : 0/0
 17919 ;;		On exit  : 0/0
 17920 ;;		Unchanged: 0/0
 17921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17922 ;;      Params:         2       0       0       0       0       0       0       0       0
 17923 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17924 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17925 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17926 ;;Total ram usage:        6 bytes
 17927 ;; Hardware stack levels used:    1
 17928 ;; This function calls:
 17929 ;;		Nothing
 17930 ;; This function is called by:
 17931 ;;		_atoi
 17932 ;; This function uses a non-reentrant model
 17933 ;;
 17934                           psect	text43,class=CODE,space=0,reloc=2,group=2
 17935                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 17936                           	line	5
 17937                           global __ptext43
 17938                           __ptext43:
 17939  00567C                     psect	text43
 17940                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 17941                           	line	5
 17942                           	global	__size_of_isdigit
 17943                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 17944  0000                     	
 17945                           _isdigit:
 17946  00567C                     ;incstack = 0
 17947                           	opt	stack 28
 17948                           	line	7
 17949                           	
 17950                           l4275:
 17951  00567C                     	movlw	low(0FFD0h)
 17952  00567C  0ED0               	movwf	(??_isdigit+0+0)&0ffh,c
 17953  00567E  6E03               	movlw	high(0FFD0h)
 17954  005680  0EFF               	movwf	1+(??_isdigit+0+0)&0ffh,c
 17955  005682  6E04               	movff	(c:isdigit@c),??_isdigit+2+0
 17956  005684  C001  F005         	movff	(c:isdigit@c+1),??_isdigit+2+0+1
 17957  005688  C002  F006         	movf	(??_isdigit+0+0),c,w
 17958  00568C  5003               	addwf	(??_isdigit+2+0),c
 17959  00568E  2605               	movf	(??_isdigit+0+1),c,w
 17960  005690  5004               	addwfc	(??_isdigit+2+1),c
 17961  005692  2206               		movf	(??_isdigit+2+1),c,w
 17962  005694  5006               	bnz	u5420
 17963  005696  E10A               	movlw	10
 17964  005698  0E0A               	subwf	 (??_isdigit+2+0),c,w
 17965  00569A  5C05               	btfss	status,0
 17966  00569C  A0D8               	goto	u5421
 17967  00569E  EF53  F02B         	goto	u5420
 17968  0056A2  EF56  F02B         
 17969                           u5421:
 17970  0056A6                     	movlw	1
 17971  0056A6  0E01               	goto	u5430
 17972  0056A8  EF57  F02B         u5420:
 17973  0056AC                     	movlw	0
 17974  0056AC  0E00               u5430:
 17975  0056AE                     	movwf	((c:?_isdigit)),c
 17976  0056AE  6E01               	clrf	((c:?_isdigit+1)),c
 17977  0056B0  6A02               	goto	l1172
 17978  0056B2  EF5B  F02B         	
 17979                           l4277:
 17980  0056B6                     	line	8
 17981                           	
 17982                           l1172:
 17983  0056B6                     	return	;funcret
 17984  0056B6  0012               	opt stack 0
 17985                           GLOBAL	__end_of_isdigit
 17986                           	__end_of_isdigit:
 17987  0056B8                     	signat	_isdigit,4218
 17988                           	global	___wmul
 17989                           
 17990 ;; *************** function ___wmul *****************
 17991 ;; Defined at:
 17992 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 17993 ;; Parameters:    Size  Location     Type
 17994 ;;  multiplier      2    0[COMRAM] unsigned int 
 17995 ;;  multiplicand    2    2[COMRAM] unsigned int 
 17996 ;; Auto vars:     Size  Location     Type
 17997 ;;  product         2    4[COMRAM] unsigned int 
 17998 ;; Return value:  Size  Location     Type
 17999 ;;                  2    0[COMRAM] unsigned int 
 18000 ;; Registers used:
 18001 ;;		wreg, status,2, status,0, prodl, prodh
 18002 ;; Tracked objects:
 18003 ;;		On entry : 0/0
 18004 ;;		On exit  : 0/0
 18005 ;;		Unchanged: 0/0
 18006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18007 ;;      Params:         4       0       0       0       0       0       0       0       0
 18008 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18009 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18010 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18011 ;;Total ram usage:        6 bytes
 18012 ;; Hardware stack levels used:    1
 18013 ;; This function calls:
 18014 ;;		Nothing
 18015 ;; This function is called by:
 18016 ;;		_atoi
 18017 ;; This function uses a non-reentrant model
 18018 ;;
 18019                           psect	text44,class=CODE,space=0,reloc=2,group=1
 18020                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 18021                           	line	15
 18022                           global __ptext44
 18023                           __ptext44:
 18024  00573C                     psect	text44
 18025                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 18026                           	line	15
 18027                           	global	__size_of___wmul
 18028                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 18029  0000                     	
 18030                           ___wmul:
 18031  00573C                     ;incstack = 0
 18032                           	opt	stack 28
 18033                           	line	37
 18034                           	
 18035                           l4197:
 18036  00573C                     	movf	((c:___wmul@multiplier)),c,w
 18037  00573C  5001               	mulwf	((c:___wmul@multiplicand)),c
 18038  00573E  0203               	movff	prodl,(c:___wmul@product)
 18039  005740  CFF3 F005          	movff	prodh,(c:___wmul@product+1)
 18040  005744  CFF4 F006          	line	38
 18041                           	movf	((c:___wmul@multiplier)),c,w
 18042  005748  5001               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
 18043  00574A  0204               	movf	(prodl),c,w
 18044  00574C  50F3               	addwf	((c:___wmul@product+1)),c
 18045  00574E  2606               
 18046                           	line	39
 18047                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
 18048  005750  5002               	mulwf	((c:___wmul@multiplicand)),c
 18049  005752  0203               	movf	(prodl),c,w
 18050  005754  50F3               	addwf	((c:___wmul@product+1)),c
 18051  005756  2606               
 18052                           	line	52
 18053                           	
 18054                           l4199:
 18055  005758                     	movff	(c:___wmul@product),(c:?___wmul)
 18056  005758  C005  F001         	movff	(c:___wmul@product+1),(c:?___wmul+1)
 18057  00575C  C006  F002         	goto	l460
 18058  005760  EFB2  F02B         	
 18059                           l4201:
 18060  005764                     	line	53
 18061                           	
 18062                           l460:
 18063  005764                     	return	;funcret
 18064  005764  0012               	opt stack 0
 18065                           GLOBAL	__end_of___wmul
 18066                           	__end_of___wmul:
 18067  005766                     	signat	___wmul,8314
 18068                           	global	___lwmod
 18069                           
 18070 ;; *************** function ___lwmod *****************
 18071 ;; Defined at:
 18072 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;  dividend        2    7[COMRAM] unsigned int 
 18075 ;;  divisor         2    9[COMRAM] unsigned int 
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;  counter         1   11[COMRAM] unsigned char 
 18078 ;; Return value:  Size  Location     Type
 18079 ;;                  2    7[COMRAM] unsigned int 
 18080 ;; Registers used:
 18081 ;;		wreg, status,2, status,0
 18082 ;; Tracked objects:
 18083 ;;		On entry : 0/0
 18084 ;;		On exit  : 0/0
 18085 ;;		Unchanged: 0/0
 18086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18087 ;;      Params:         4       0       0       0       0       0       0       0       0
 18088 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18089 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18090 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18091 ;;Total ram usage:        5 bytes
 18092 ;; Hardware stack levels used:    1
 18093 ;; This function calls:
 18094 ;;		Nothing
 18095 ;; This function is called by:
 18096 ;;		_hex_converter
 18097 ;; This function uses a non-reentrant model
 18098 ;;
 18099                           psect	text45,class=CODE,space=0,reloc=2,group=1
 18100                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
 18101                           	line	7
 18102                           global __ptext45
 18103                           __ptext45:
 18104  004F22                     psect	text45
 18105                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
 18106                           	line	7
 18107                           	global	__size_of___lwmod
 18108                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 18109  0000                     	
 18110                           ___lwmod:
 18111  004F22                     ;incstack = 0
 18112                           	opt	stack 29
 18113                           	line	12
 18114                           	
 18115                           l4781:
 18116  004F22                     	movf	((c:___lwmod@divisor)),c,w
 18117  004F22  500A               iorwf	((c:___lwmod@divisor+1)),c,w
 18118  004F24  100B               	btfsc	status,2
 18119  004F26  B4D8               	goto	u6811
 18120  004F28  EF98  F027         	goto	u6810
 18121  004F2C  EF9A  F027         
 18122                           u6811:
 18123  004F30                     	goto	l961
 18124  004F30  EFC8  F027         u6810:
 18125  004F34                     	line	13
 18126                           	
 18127                           l4783:
 18128  004F34                     	movlw	low(01h)
 18129  004F34  0E01               	movwf	((c:___lwmod@counter)),c
 18130  004F36  6E0C               	line	14
 18131                           	goto	l4787
 18132  004F38  EFA4  F027         	
 18133                           l963:
 18134  004F3C                     	line	15
 18135                           	
 18136                           l4785:
 18137  004F3C                     	bcf	status,0
 18138  004F3C  90D8               	rlcf	((c:___lwmod@divisor)),c
 18139  004F3E  360A               	rlcf	((c:___lwmod@divisor+1)),c
 18140  004F40  360B               	line	16
 18141                           	incf	((c:___lwmod@counter)),c
 18142  004F42  2A0C               	goto	l4787
 18143  004F44  EFA4  F027         	line	17
 18144                           	
 18145                           l962:
 18146  004F48                     	line	14
 18147                           	
 18148                           l4787:
 18149  004F48                     	
 18150                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
 18151  004F48  AE0B               	goto	u6821
 18152  004F4A  EFA9  F027         	goto	u6820
 18153  004F4E  EFAB  F027         u6821:
 18154  004F52                     	goto	l4785
 18155  004F52  EF9E  F027         u6820:
 18156  004F56                     	goto	l4789
 18157  004F56  EFAF  F027         	
 18158                           l964:
 18159  004F5A                     	goto	l4789
 18160  004F5A  EFAF  F027         	line	18
 18161                           	
 18162                           l965:
 18163  004F5E                     	line	19
 18164                           	
 18165                           l4789:
 18166  004F5E                     		movf	((c:___lwmod@divisor)),c,w
 18167  004F5E  500A               	subwf	((c:___lwmod@dividend)),c,w
 18168  004F60  5C08               	movf	((c:___lwmod@divisor+1)),c,w
 18169  004F62  500B               	subwfb	((c:___lwmod@dividend+1)),c,w
 18170  004F64  5809               	btfss	status,0
 18171  004F66  A0D8               	goto	u6831
 18172  004F68  EFB8  F027         	goto	u6830
 18173  004F6C  EFBA  F027         
 18174                           u6831:
 18175  004F70                     	goto	l4793
 18176  004F70  EFC0  F027         u6830:
 18177  004F74                     	line	20
 18178                           	
 18179                           l4791:
 18180  004F74                     	movf	((c:___lwmod@divisor)),c,w
 18181  004F74  500A               	subwf	((c:___lwmod@dividend)),c
 18182  004F76  5E08               	movf	((c:___lwmod@divisor+1)),c,w
 18183  004F78  500B               	subwfb	((c:___lwmod@dividend+1)),c
 18184  004F7A  5A09               
 18185                           	goto	l4793
 18186  004F7C  EFC0  F027         	
 18187                           l966:
 18188  004F80                     	line	21
 18189                           	
 18190                           l4793:
 18191  004F80                     	bcf	status,0
 18192  004F80  90D8               	rrcf	((c:___lwmod@divisor+1)),c
 18193  004F82  320B               	rrcf	((c:___lwmod@divisor)),c
 18194  004F84  320A               	line	22
 18195                           	
 18196                           l4795:
 18197  004F86                     	decfsz	((c:___lwmod@counter)),c
 18198  004F86  2E0C               	
 18199                           	goto	l4789
 18200  004F88  EFAF  F027         	goto	l961
 18201  004F8C  EFC8  F027         	
 18202                           l967:
 18203  004F90                     	line	23
 18204                           	
 18205                           l961:
 18206  004F90                     	line	24
 18207                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
 18208  004F90  C008  F008         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
 18209  004F94  C009  F009         	line	25
 18210                           	
 18211                           l968:
 18212  004F98                     	return	;funcret
 18213  004F98  0012               	opt stack 0
 18214                           GLOBAL	__end_of___lwmod
 18215                           	__end_of___lwmod:
 18216  004F9A                     	signat	___lwmod,8314
 18217                           	global	___lwdiv
 18218                           
 18219 ;; *************** function ___lwdiv *****************
 18220 ;; Defined at:
 18221 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 18222 ;; Parameters:    Size  Location     Type
 18223 ;;  dividend        2    0[COMRAM] unsigned int 
 18224 ;;  divisor         2    2[COMRAM] unsigned int 
 18225 ;; Auto vars:     Size  Location     Type
 18226 ;;  quotient        2    4[COMRAM] unsigned int 
 18227 ;;  counter         1    6[COMRAM] unsigned char 
 18228 ;; Return value:  Size  Location     Type
 18229 ;;                  2    0[COMRAM] unsigned int 
 18230 ;; Registers used:
 18231 ;;		wreg, status,2, status,0
 18232 ;; Tracked objects:
 18233 ;;		On entry : 0/0
 18234 ;;		On exit  : 0/0
 18235 ;;		Unchanged: 0/0
 18236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18237 ;;      Params:         4       0       0       0       0       0       0       0       0
 18238 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18239 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18240 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18241 ;;Total ram usage:        7 bytes
 18242 ;; Hardware stack levels used:    1
 18243 ;; This function calls:
 18244 ;;		Nothing
 18245 ;; This function is called by:
 18246 ;;		_hex_converter
 18247 ;; This function uses a non-reentrant model
 18248 ;;
 18249                           psect	text46,class=CODE,space=0,reloc=2,group=1
 18250                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 18251                           	line	7
 18252                           global __ptext46
 18253                           __ptext46:
 18254  004E9A                     psect	text46
 18255                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 18256                           	line	7
 18257                           	global	__size_of___lwdiv
 18258                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 18259  0000                     	
 18260                           ___lwdiv:
 18261  004E9A                     ;incstack = 0
 18262                           	opt	stack 29
 18263                           	line	13
 18264                           	
 18265                           l4759:
 18266  004E9A                     	movlw	high(0)
 18267  004E9A  0E00               	movwf	((c:___lwdiv@quotient+1)),c
 18268  004E9C  6E06               	movlw	low(0)
 18269  004E9E  0E00               	movwf	((c:___lwdiv@quotient)),c
 18270  004EA0  6E05               	line	14
 18271                           	
 18272                           l4761:
 18273  004EA2                     	movf	((c:___lwdiv@divisor)),c,w
 18274  004EA2  5003               iorwf	((c:___lwdiv@divisor+1)),c,w
 18275  004EA4  1004               	btfsc	status,2
 18276  004EA6  B4D8               	goto	u6781
 18277  004EA8  EF58  F027         	goto	u6780
 18278  004EAC  EF5A  F027         
 18279                           u6781:
 18280  004EB0                     	goto	l951
 18281  004EB0  EF8C  F027         u6780:
 18282  004EB4                     	line	15
 18283                           	
 18284                           l4763:
 18285  004EB4                     	movlw	low(01h)
 18286  004EB4  0E01               	movwf	((c:___lwdiv@counter)),c
 18287  004EB6  6E07               	line	16
 18288                           	goto	l4767
 18289  004EB8  EF64  F027         	
 18290                           l953:
 18291  004EBC                     	line	17
 18292                           	
 18293                           l4765:
 18294  004EBC                     	bcf	status,0
 18295  004EBC  90D8               	rlcf	((c:___lwdiv@divisor)),c
 18296  004EBE  3603               	rlcf	((c:___lwdiv@divisor+1)),c
 18297  004EC0  3604               	line	18
 18298                           	incf	((c:___lwdiv@counter)),c
 18299  004EC2  2A07               	goto	l4767
 18300  004EC4  EF64  F027         	line	19
 18301                           	
 18302                           l952:
 18303  004EC8                     	line	16
 18304                           	
 18305                           l4767:
 18306  004EC8                     	
 18307                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
 18308  004EC8  AE04               	goto	u6791
 18309  004ECA  EF69  F027         	goto	u6790
 18310  004ECE  EF6B  F027         u6791:
 18311  004ED2                     	goto	l4765
 18312  004ED2  EF5E  F027         u6790:
 18313  004ED6                     	goto	l4769
 18314  004ED6  EF6F  F027         	
 18315                           l954:
 18316  004EDA                     	goto	l4769
 18317  004EDA  EF6F  F027         	line	20
 18318                           	
 18319                           l955:
 18320  004EDE                     	line	21
 18321                           	
 18322                           l4769:
 18323  004EDE                     	bcf	status,0
 18324  004EDE  90D8               	rlcf	((c:___lwdiv@quotient)),c
 18325  004EE0  3605               	rlcf	((c:___lwdiv@quotient+1)),c
 18326  004EE2  3606               	line	22
 18327                           	
 18328                           l4771:
 18329  004EE4                     		movf	((c:___lwdiv@divisor)),c,w
 18330  004EE4  5003               	subwf	((c:___lwdiv@dividend)),c,w
 18331  004EE6  5C01               	movf	((c:___lwdiv@divisor+1)),c,w
 18332  004EE8  5004               	subwfb	((c:___lwdiv@dividend+1)),c,w
 18333  004EEA  5802               	btfss	status,0
 18334  004EEC  A0D8               	goto	u6801
 18335  004EEE  EF7B  F027         	goto	u6800
 18336  004EF2  EF7D  F027         
 18337                           u6801:
 18338  004EF6                     	goto	l4777
 18339  004EF6  EF84  F027         u6800:
 18340  004EFA                     	line	23
 18341                           	
 18342                           l4773:
 18343  004EFA                     	movf	((c:___lwdiv@divisor)),c,w
 18344  004EFA  5003               	subwf	((c:___lwdiv@dividend)),c
 18345  004EFC  5E01               	movf	((c:___lwdiv@divisor+1)),c,w
 18346  004EFE  5004               	subwfb	((c:___lwdiv@dividend+1)),c
 18347  004F00  5A02               
 18348                           	line	24
 18349                           	
 18350                           l4775:
 18351  004F02                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
 18352  004F02  8005               	goto	l4777
 18353  004F04  EF84  F027         	line	25
 18354                           	
 18355                           l956:
 18356  004F08                     	line	26
 18357                           	
 18358                           l4777:
 18359  004F08                     	bcf	status,0
 18360  004F08  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
 18361  004F0A  3204               	rrcf	((c:___lwdiv@divisor)),c
 18362  004F0C  3203               	line	27
 18363                           	
 18364                           l4779:
 18365  004F0E                     	decfsz	((c:___lwdiv@counter)),c
 18366  004F0E  2E07               	
 18367                           	goto	l4769
 18368  004F10  EF6F  F027         	goto	l951
 18369  004F14  EF8C  F027         	
 18370                           l957:
 18371  004F18                     	line	28
 18372                           	
 18373                           l951:
 18374  004F18                     	line	29
 18375                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
 18376  004F18  C005  F001         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
 18377  004F1C  C006  F002         	line	30
 18378                           	
 18379                           l958:
 18380  004F20                     	return	;funcret
 18381  004F20  0012               	opt stack 0
 18382                           GLOBAL	__end_of___lwdiv
 18383                           	__end_of___lwdiv:
 18384  004F22                     	signat	___lwdiv,8314
 18385                           	global	_adc_read_temp
 18386                           
 18387 ;; *************** function _adc_read_temp *****************
 18388 ;; Defined at:
 18389 ;;		line 281 in file "main.c"
 18390 ;; Parameters:    Size  Location     Type
 18391 ;;		None
 18392 ;; Auto vars:     Size  Location     Type
 18393 ;;		None
 18394 ;; Return value:  Size  Location     Type
 18395 ;;                  2    6[COMRAM] unsigned int 
 18396 ;; Registers used:
 18397 ;;		wreg, status,2, status,0, cstack
 18398 ;; Tracked objects:
 18399 ;;		On entry : 0/0
 18400 ;;		On exit  : 0/0
 18401 ;;		Unchanged: 0/0
 18402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18403 ;;      Params:         2       0       0       0       0       0       0       0       0
 18404 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18405 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18406 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18407 ;;Total ram usage:        2 bytes
 18408 ;; Hardware stack levels used:    1
 18409 ;; Hardware stack levels required when called:    1
 18410 ;; This function calls:
 18411 ;;		_MSdelay
 18412 ;; This function is called by:
 18413 ;;		_main
 18414 ;; This function uses a non-reentrant model
 18415 ;;
 18416                           psect	text47,class=CODE,space=0,reloc=2,group=0
 18417                           	file	"main.c"
 18418                           	line	281
 18419                           global __ptext47
 18420                           __ptext47:
 18421  005276                     psect	text47
 18422                           	file	"main.c"
 18423                           	line	281
 18424                           	global	__size_of_adc_read_temp
 18425                           	__size_of_adc_read_temp	equ	__end_of_adc_read_temp-_adc_read_temp
 18426  0000                     	
 18427                           _adc_read_temp:
 18428  005276                     ;incstack = 0
 18429                           	opt	stack 29
 18430                           	line	284
 18431                           	
 18432                           l5035:
 18433  005276                     ;main.c: 284:             ADCON0bits.CHS3 =0;
 18434                           	bcf	((c:4034)),c,5	;volatile
 18435  005276  9AC2               	line	285
 18436                           ;main.c: 285:             ADCON0bits.CHS2 =0;
 18437                           	bcf	((c:4034)),c,4	;volatile
 18438  005278  98C2               	line	286
 18439                           ;main.c: 286:             ADCON0bits.CHS1 =1;
 18440                           	bsf	((c:4034)),c,3	;volatile
 18441  00527A  86C2               	line	287
 18442                           ;main.c: 287:             ADCON0bits.CHS0 =1;
 18443                           	bsf	((c:4034)),c,2	;volatile
 18444  00527C  84C2               	line	291
 18445                           ;main.c: 291:         ADCON0bits.GO = 1;
 18446                           	bsf	((c:4034)),c,1	;volatile
 18447  00527E  82C2               	line	292
 18448                           ;main.c: 292:         while(!ADCON0bits.DONE == 1);
 18449                           	goto	l258
 18450  005280  EF42  F029         	
 18451                           l259:
 18452  005284                     	
 18453                           l258:
 18454  005284                     	btfss	((c:4034)),c,1	;volatile
 18455  005284  A2C2               	goto	u7191
 18456  005286  EF47  F029         	goto	u7190
 18457  00528A  EF49  F029         u7191:
 18458  00528E                     	goto	l258
 18459  00528E  EF42  F029         u7190:
 18460  005292                     	
 18461                           l260:
 18462  005292                     	line	293
 18463                           ;main.c: 293:         ADCON0bits.GO = 1;
 18464                           	bsf	((c:4034)),c,1	;volatile
 18465  005292  82C2               	line	294
 18466                           	
 18467                           l5037:
 18468  005294                     ;main.c: 294:         MSdelay(3000);
 18469                           	movlw	high(0BB8h)
 18470  005294  0E0B               	movwf	((c:MSdelay@val+1)),c
 18471  005296  6E02               	movlw	low(0BB8h)
 18472  005298  0EB8               	movwf	((c:MSdelay@val)),c
 18473  00529A  6E01               	call	_MSdelay	;wreg free
 18474  00529C  EC07  F028         	line	296
 18475                           	
 18476                           l5039:
 18477  0052A0                     ;main.c: 296:         l = ADRESL;
 18478                           	movff	(c:4035),(_l)	;volatile
 18479  0052A0  CFC3 F0FE          	line	297
 18480                           	
 18481                           l5041:
 18482  0052A4                     ;main.c: 297:         h = ADRESH;
 18483                           	movff	(c:4036),(_h)	;volatile
 18484  0052A4  CFC4 F0FC          	movlb	0	; () banked
 18485  0052A8  0100               	clrf	((_h+1))&0ffh
 18486  0052AA  6BFD               	line	298
 18487                           	
 18488                           l5043:; BSR set to: 0
 18489  0052AC                     
 18490                           ;main.c: 298:         ADRESL=0x00;
 18491                           	movlw	low(0)
 18492  0052AC  0E00               	movwf	((c:4035)),c	;volatile
 18493  0052AE  6EC3               	line	299
 18494                           	
 18495                           l5045:; BSR set to: 0
 18496  0052B0                     
 18497                           ;main.c: 299:         ADRESH=0X00;
 18498                           	movlw	low(0)
 18499  0052B0  0E00               	movwf	((c:4036)),c	;volatile
 18500  0052B2  6EC4               	line	300
 18501                           	
 18502                           l5047:; BSR set to: 0
 18503  0052B4                     
 18504                           ;main.c: 300:         h = h << 8;
 18505                           	movf	((_h))&0ffh,w
 18506  0052B4  51FC               	movwf	((_h+1))&0ffh
 18507  0052B6  6FFD               	clrf	((_h))&0ffh
 18508  0052B8  6BFC               	line	301
 18509                           	
 18510                           l5049:; BSR set to: 0
 18511  0052BA                     
 18512                           ;main.c: 301:         t = h | l;
 18513                           	movf	((_h))&0ffh,w
 18514  0052BA  51FC               	iorwf	((_l))&0ffh,w
 18515  0052BC  11FE               	movwf	((_t))&0ffh
 18516  0052BE  6FFA               	movf	((_h+1))&0ffh,w
 18517  0052C0  51FD               	movwf	1+((_t))&0ffh
 18518  0052C2  6FFB               	line	302
 18519                           	
 18520                           l5051:; BSR set to: 0
 18521  0052C4                     
 18522                           ;main.c: 302:         return(t);
 18523                           	movff	(_t),(c:?_adc_read_temp)
 18524  0052C4  C0FA  F007         	movff	(_t+1),(c:?_adc_read_temp+1)
 18525  0052C8  C0FB  F008         	goto	l261
 18526  0052CC  EF68  F029         	
 18527                           l5053:; BSR set to: 0
 18528  0052D0                     
 18529                           	line	304
 18530                           	
 18531                           l261:; BSR set to: 0
 18532  0052D0                     
 18533                           	return	;funcret
 18534  0052D0  0012               	opt stack 0
 18535                           GLOBAL	__end_of_adc_read_temp
 18536                           	__end_of_adc_read_temp:
 18537  0052D2                     	signat	_adc_read_temp,90
 18538                           	global	_adc_read_sol
 18539                           
 18540 ;; *************** function _adc_read_sol *****************
 18541 ;; Defined at:
 18542 ;;		line 229 in file "main.c"
 18543 ;; Parameters:    Size  Location     Type
 18544 ;;		None
 18545 ;; Auto vars:     Size  Location     Type
 18546 ;;		None
 18547 ;; Return value:  Size  Location     Type
 18548 ;;                  2    6[COMRAM] unsigned int 
 18549 ;; Registers used:
 18550 ;;		wreg, status,2, status,0, cstack
 18551 ;; Tracked objects:
 18552 ;;		On entry : 0/0
 18553 ;;		On exit  : 0/0
 18554 ;;		Unchanged: 0/0
 18555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18556 ;;      Params:         2       0       0       0       0       0       0       0       0
 18557 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18558 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18559 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18560 ;;Total ram usage:        2 bytes
 18561 ;; Hardware stack levels used:    1
 18562 ;; Hardware stack levels required when called:    1
 18563 ;; This function calls:
 18564 ;;		_MSdelay
 18565 ;; This function is called by:
 18566 ;;		_main
 18567 ;; This function uses a non-reentrant model
 18568 ;;
 18569                           psect	text48,class=CODE,space=0,reloc=2,group=0
 18570                           	line	229
 18571                           global __ptext48
 18572                           __ptext48:
 18573  0052D2                     psect	text48
 18574                           	file	"main.c"
 18575                           	line	229
 18576                           	global	__size_of_adc_read_sol
 18577                           	__size_of_adc_read_sol	equ	__end_of_adc_read_sol-_adc_read_sol
 18578  0000                     	
 18579                           _adc_read_sol:; BSR set to: 0
 18580  0052D2                     
 18581                           ;incstack = 0
 18582                           	opt	stack 29
 18583                           	line	232
 18584                           	
 18585                           l4949:
 18586  0052D2                     ;main.c: 232:             ADCON0bits.CHS3 =0;
 18587                           	bcf	((c:4034)),c,5	;volatile
 18588  0052D2  9AC2               	line	233
 18589                           ;main.c: 233:             ADCON0bits.CHS2 =0;
 18590                           	bcf	((c:4034)),c,4	;volatile
 18591  0052D4  98C2               	line	234
 18592                           ;main.c: 234:             ADCON0bits.CHS1 =0;
 18593                           	bcf	((c:4034)),c,3	;volatile
 18594  0052D6  96C2               	line	235
 18595                           ;main.c: 235:             ADCON0bits.CHS0 =1;
 18596                           	bsf	((c:4034)),c,2	;volatile
 18597  0052D8  84C2               	line	239
 18598                           ;main.c: 239:         ADCON0bits.GO = 1;
 18599                           	bsf	((c:4034)),c,1	;volatile
 18600  0052DA  82C2               	line	240
 18601                           ;main.c: 240:         while(!ADCON0bits.DONE == 1);
 18602                           	goto	l246
 18603  0052DC  EF70  F029         	
 18604                           l247:
 18605  0052E0                     	
 18606                           l246:
 18607  0052E0                     	btfss	((c:4034)),c,1	;volatile
 18608  0052E0  A2C2               	goto	u7111
 18609  0052E2  EF75  F029         	goto	u7110
 18610  0052E6  EF77  F029         u7111:
 18611  0052EA                     	goto	l246
 18612  0052EA  EF70  F029         u7110:
 18613  0052EE                     	
 18614                           l248:
 18615  0052EE                     	line	241
 18616                           ;main.c: 241:         ADCON0bits.GO = 1;
 18617                           	bsf	((c:4034)),c,1	;volatile
 18618  0052EE  82C2               	line	242
 18619                           	
 18620                           l4951:
 18621  0052F0                     ;main.c: 242:         MSdelay(3000);
 18622                           	movlw	high(0BB8h)
 18623  0052F0  0E0B               	movwf	((c:MSdelay@val+1)),c
 18624  0052F2  6E02               	movlw	low(0BB8h)
 18625  0052F4  0EB8               	movwf	((c:MSdelay@val)),c
 18626  0052F6  6E01               	call	_MSdelay	;wreg free
 18627  0052F8  EC07  F028         	line	244
 18628                           	
 18629                           l4953:
 18630  0052FC                     ;main.c: 244:         l = ADRESL;
 18631                           	movff	(c:4035),(_l)	;volatile
 18632  0052FC  CFC3 F0FE          	line	245
 18633                           	
 18634                           l4955:
 18635  005300                     ;main.c: 245:         h = ADRESH;
 18636                           	movff	(c:4036),(_h)	;volatile
 18637  005300  CFC4 F0FC          	movlb	0	; () banked
 18638  005304  0100               	clrf	((_h+1))&0ffh
 18639  005306  6BFD               	line	246
 18640                           	
 18641                           l4957:; BSR set to: 0
 18642  005308                     
 18643                           ;main.c: 246:         ADRESL=0x00;
 18644                           	movlw	low(0)
 18645  005308  0E00               	movwf	((c:4035)),c	;volatile
 18646  00530A  6EC3               	line	247
 18647                           	
 18648                           l4959:; BSR set to: 0
 18649  00530C                     
 18650                           ;main.c: 247:         ADRESH=0X00;
 18651                           	movlw	low(0)
 18652  00530C  0E00               	movwf	((c:4036)),c	;volatile
 18653  00530E  6EC4               	line	248
 18654                           	
 18655                           l4961:; BSR set to: 0
 18656  005310                     
 18657                           ;main.c: 248:         h = h << 8;
 18658                           	movf	((_h))&0ffh,w
 18659  005310  51FC               	movwf	((_h+1))&0ffh
 18660  005312  6FFD               	clrf	((_h))&0ffh
 18661  005314  6BFC               	line	249
 18662                           	
 18663                           l4963:; BSR set to: 0
 18664  005316                     
 18665                           ;main.c: 249:         t = h | l;
 18666                           	movf	((_h))&0ffh,w
 18667  005316  51FC               	iorwf	((_l))&0ffh,w
 18668  005318  11FE               	movwf	((_t))&0ffh
 18669  00531A  6FFA               	movf	((_h+1))&0ffh,w
 18670  00531C  51FD               	movwf	1+((_t))&0ffh
 18671  00531E  6FFB               	line	250
 18672                           	
 18673                           l4965:; BSR set to: 0
 18674  005320                     
 18675                           ;main.c: 250:         return(t);
 18676                           	movff	(_t),(c:?_adc_read_sol)
 18677  005320  C0FA  F007         	movff	(_t+1),(c:?_adc_read_sol+1)
 18678  005324  C0FB  F008         	goto	l249
 18679  005328  EF96  F029         	
 18680                           l4967:; BSR set to: 0
 18681  00532C                     
 18682                           	line	252
 18683                           	
 18684                           l249:; BSR set to: 0
 18685  00532C                     
 18686                           	return	;funcret
 18687  00532C  0012               	opt stack 0
 18688                           GLOBAL	__end_of_adc_read_sol
 18689                           	__end_of_adc_read_sol:
 18690  00532E                     	signat	_adc_read_sol,90
 18691                           	global	_adc_read_lum
 18692                           
 18693 ;; *************** function _adc_read_lum *****************
 18694 ;; Defined at:
 18695 ;;		line 204 in file "main.c"
 18696 ;; Parameters:    Size  Location     Type
 18697 ;;		None
 18698 ;; Auto vars:     Size  Location     Type
 18699 ;;		None
 18700 ;; Return value:  Size  Location     Type
 18701 ;;                  2    6[COMRAM] unsigned int 
 18702 ;; Registers used:
 18703 ;;		wreg, status,2, status,0, cstack
 18704 ;; Tracked objects:
 18705 ;;		On entry : 0/0
 18706 ;;		On exit  : 0/0
 18707 ;;		Unchanged: 0/0
 18708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18709 ;;      Params:         2       0       0       0       0       0       0       0       0
 18710 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18711 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18712 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18713 ;;Total ram usage:        2 bytes
 18714 ;; Hardware stack levels used:    1
 18715 ;; Hardware stack levels required when called:    1
 18716 ;; This function calls:
 18717 ;;		_MSdelay
 18718 ;; This function is called by:
 18719 ;;		_main
 18720 ;; This function uses a non-reentrant model
 18721 ;;
 18722                           psect	text49,class=CODE,space=0,reloc=2,group=0
 18723                           	line	204
 18724                           global __ptext49
 18725                           __ptext49:
 18726  0053E4                     psect	text49
 18727                           	file	"main.c"
 18728                           	line	204
 18729                           	global	__size_of_adc_read_lum
 18730                           	__size_of_adc_read_lum	equ	__end_of_adc_read_lum-_adc_read_lum
 18731  0000                     	
 18732                           _adc_read_lum:; BSR set to: 0
 18733  0053E4                     
 18734                           ;incstack = 0
 18735                           	opt	stack 29
 18736                           	line	207
 18737                           	
 18738                           l4915:
 18739  0053E4                     ;main.c: 207:             ADCON0bits.CHS3 =0;
 18740                           	bcf	((c:4034)),c,5	;volatile
 18741  0053E4  9AC2               	line	208
 18742                           ;main.c: 208:             ADCON0bits.CHS2 =0;
 18743                           	bcf	((c:4034)),c,4	;volatile
 18744  0053E6  98C2               	line	209
 18745                           ;main.c: 209:             ADCON0bits.CHS1 =0;
 18746                           	bcf	((c:4034)),c,3	;volatile
 18747  0053E8  96C2               	line	210
 18748                           ;main.c: 210:             ADCON0bits.CHS0 =0;
 18749                           	bcf	((c:4034)),c,2	;volatile
 18750  0053EA  94C2               	line	214
 18751                           ;main.c: 214:         ADCON0bits.GO = 1;
 18752                           	bsf	((c:4034)),c,1	;volatile
 18753  0053EC  82C2               	line	215
 18754                           ;main.c: 215:         while(!ADCON0bits.DONE == 1);
 18755                           	goto	l240
 18756  0053EE  EFF9  F029         	
 18757                           l241:
 18758  0053F2                     	
 18759                           l240:
 18760  0053F2                     	btfss	((c:4034)),c,1	;volatile
 18761  0053F2  A2C2               	goto	u7081
 18762  0053F4  EFFE  F029         	goto	u7080
 18763  0053F8  EF00  F02A         u7081:
 18764  0053FC                     	goto	l240
 18765  0053FC  EFF9  F029         u7080:
 18766  005400                     	
 18767                           l242:
 18768  005400                     	line	216
 18769                           ;main.c: 216:         ADCON0bits.GO = 1;
 18770                           	bsf	((c:4034)),c,1	;volatile
 18771  005400  82C2               	line	217
 18772                           	
 18773                           l4917:
 18774  005402                     ;main.c: 217:         MSdelay(3000);
 18775                           	movlw	high(0BB8h)
 18776  005402  0E0B               	movwf	((c:MSdelay@val+1)),c
 18777  005404  6E02               	movlw	low(0BB8h)
 18778  005406  0EB8               	movwf	((c:MSdelay@val)),c
 18779  005408  6E01               	call	_MSdelay	;wreg free
 18780  00540A  EC07  F028         	line	218
 18781                           	
 18782                           l4919:
 18783  00540E                     ;main.c: 218:         l = ADRESL;
 18784                           	movff	(c:4035),(_l)	;volatile
 18785  00540E  CFC3 F0FE          	line	219
 18786                           	
 18787                           l4921:
 18788  005412                     ;main.c: 219:         h = ADRESH;
 18789                           	movff	(c:4036),(_h)	;volatile
 18790  005412  CFC4 F0FC          	movlb	0	; () banked
 18791  005416  0100               	clrf	((_h+1))&0ffh
 18792  005418  6BFD               	line	222
 18793                           	
 18794                           l4923:; BSR set to: 0
 18795  00541A                     
 18796                           ;main.c: 222:         h = h << 8;
 18797                           	movf	((_h))&0ffh,w
 18798  00541A  51FC               	movwf	((_h+1))&0ffh
 18799  00541C  6FFD               	clrf	((_h))&0ffh
 18800  00541E  6BFC               	line	223
 18801                           	
 18802                           l4925:; BSR set to: 0
 18803  005420                     
 18804                           ;main.c: 223:         t = h | l;
 18805                           	movf	((_h))&0ffh,w
 18806  005420  51FC               	iorwf	((_l))&0ffh,w
 18807  005422  11FE               	movwf	((_t))&0ffh
 18808  005424  6FFA               	movf	((_h+1))&0ffh,w
 18809  005426  51FD               	movwf	1+((_t))&0ffh
 18810  005428  6FFB               	line	224
 18811                           	
 18812                           l4927:; BSR set to: 0
 18813  00542A                     
 18814                           ;main.c: 224:         return(t);
 18815                           	movff	(_t),(c:?_adc_read_lum)
 18816  00542A  C0FA  F007         	movff	(_t+1),(c:?_adc_read_lum+1)
 18817  00542E  C0FB  F008         	goto	l243
 18818  005432  EF1B  F02A         	
 18819                           l4929:; BSR set to: 0
 18820  005436                     
 18821                           	line	226
 18822                           	
 18823                           l243:; BSR set to: 0
 18824  005436                     
 18825                           	return	;funcret
 18826  005436  0012               	opt stack 0
 18827                           GLOBAL	__end_of_adc_read_lum
 18828                           	__end_of_adc_read_lum:
 18829  005438                     	signat	_adc_read_lum,90
 18830                           	global	_adc_read_humid
 18831                           
 18832 ;; *************** function _adc_read_humid *****************
 18833 ;; Defined at:
 18834 ;;		line 255 in file "main.c"
 18835 ;; Parameters:    Size  Location     Type
 18836 ;;		None
 18837 ;; Auto vars:     Size  Location     Type
 18838 ;;		None
 18839 ;; Return value:  Size  Location     Type
 18840 ;;                  2    6[COMRAM] unsigned int 
 18841 ;; Registers used:
 18842 ;;		wreg, status,2, status,0, cstack
 18843 ;; Tracked objects:
 18844 ;;		On entry : 0/0
 18845 ;;		On exit  : 0/0
 18846 ;;		Unchanged: 0/0
 18847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18848 ;;      Params:         2       0       0       0       0       0       0       0       0
 18849 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18850 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18851 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18852 ;;Total ram usage:        2 bytes
 18853 ;; Hardware stack levels used:    1
 18854 ;; Hardware stack levels required when called:    1
 18855 ;; This function calls:
 18856 ;;		_MSdelay
 18857 ;; This function is called by:
 18858 ;;		_main
 18859 ;; This function uses a non-reentrant model
 18860 ;;
 18861                           psect	text50,class=CODE,space=0,reloc=2,group=0
 18862                           	line	255
 18863                           global __ptext50
 18864                           __ptext50:
 18865  00532E                     psect	text50
 18866                           	file	"main.c"
 18867                           	line	255
 18868                           	global	__size_of_adc_read_humid
 18869                           	__size_of_adc_read_humid	equ	__end_of_adc_read_humid-_adc_read_humid
 18870  0000                     	
 18871                           _adc_read_humid:; BSR set to: 0
 18872  00532E                     
 18873                           ;incstack = 0
 18874                           	opt	stack 29
 18875                           	line	258
 18876                           	
 18877                           l4993:
 18878  00532E                     ;main.c: 258:             ADCON0bits.CHS3 =0;
 18879                           	bcf	((c:4034)),c,5	;volatile
 18880  00532E  9AC2               	line	259
 18881                           ;main.c: 259:             ADCON0bits.CHS2 =0;
 18882                           	bcf	((c:4034)),c,4	;volatile
 18883  005330  98C2               	line	260
 18884                           ;main.c: 260:             ADCON0bits.CHS1 =1;
 18885                           	bsf	((c:4034)),c,3	;volatile
 18886  005332  86C2               	line	261
 18887                           ;main.c: 261:             ADCON0bits.CHS0 =0;
 18888                           	bcf	((c:4034)),c,2	;volatile
 18889  005334  94C2               	line	265
 18890                           ;main.c: 265:         ADCON0bits.GO = 1;
 18891                           	bsf	((c:4034)),c,1	;volatile
 18892  005336  82C2               	line	266
 18893                           ;main.c: 266:         while(!ADCON0bits.DONE == 1);
 18894                           	goto	l252
 18895  005338  EF9E  F029         	
 18896                           l253:
 18897  00533C                     	
 18898                           l252:
 18899  00533C                     	btfss	((c:4034)),c,1	;volatile
 18900  00533C  A2C2               	goto	u7161
 18901  00533E  EFA3  F029         	goto	u7160
 18902  005342  EFA5  F029         u7161:
 18903  005346                     	goto	l252
 18904  005346  EF9E  F029         u7160:
 18905  00534A                     	
 18906                           l254:
 18907  00534A                     	line	267
 18908                           ;main.c: 267:         ADCON0bits.GO = 1;
 18909                           	bsf	((c:4034)),c,1	;volatile
 18910  00534A  82C2               	line	268
 18911                           	
 18912                           l4995:
 18913  00534C                     ;main.c: 268:         MSdelay(3000);
 18914                           	movlw	high(0BB8h)
 18915  00534C  0E0B               	movwf	((c:MSdelay@val+1)),c
 18916  00534E  6E02               	movlw	low(0BB8h)
 18917  005350  0EB8               	movwf	((c:MSdelay@val)),c
 18918  005352  6E01               	call	_MSdelay	;wreg free
 18919  005354  EC07  F028         	line	270
 18920                           	
 18921                           l4997:
 18922  005358                     ;main.c: 270:         l = ADRESL;
 18923                           	movff	(c:4035),(_l)	;volatile
 18924  005358  CFC3 F0FE          	line	271
 18925                           	
 18926                           l4999:
 18927  00535C                     ;main.c: 271:         h = ADRESH;
 18928                           	movff	(c:4036),(_h)	;volatile
 18929  00535C  CFC4 F0FC          	movlb	0	; () banked
 18930  005360  0100               	clrf	((_h+1))&0ffh
 18931  005362  6BFD               	line	272
 18932                           	
 18933                           l5001:; BSR set to: 0
 18934  005364                     
 18935                           ;main.c: 272:         ADRESL=0x00;
 18936                           	movlw	low(0)
 18937  005364  0E00               	movwf	((c:4035)),c	;volatile
 18938  005366  6EC3               	line	273
 18939                           	
 18940                           l5003:; BSR set to: 0
 18941  005368                     
 18942                           ;main.c: 273:         ADRESH=0X00;
 18943                           	movlw	low(0)
 18944  005368  0E00               	movwf	((c:4036)),c	;volatile
 18945  00536A  6EC4               	line	274
 18946                           	
 18947                           l5005:; BSR set to: 0
 18948  00536C                     
 18949                           ;main.c: 274:         h = h << 8;
 18950                           	movf	((_h))&0ffh,w
 18951  00536C  51FC               	movwf	((_h+1))&0ffh
 18952  00536E  6FFD               	clrf	((_h))&0ffh
 18953  005370  6BFC               	line	275
 18954                           	
 18955                           l5007:; BSR set to: 0
 18956  005372                     
 18957                           ;main.c: 275:         t = h | l;
 18958                           	movf	((_h))&0ffh,w
 18959  005372  51FC               	iorwf	((_l))&0ffh,w
 18960  005374  11FE               	movwf	((_t))&0ffh
 18961  005376  6FFA               	movf	((_h+1))&0ffh,w
 18962  005378  51FD               	movwf	1+((_t))&0ffh
 18963  00537A  6FFB               	line	276
 18964                           	
 18965                           l5009:; BSR set to: 0
 18966  00537C                     
 18967                           ;main.c: 276:         return(t);
 18968                           	movff	(_t),(c:?_adc_read_humid)
 18969  00537C  C0FA  F007         	movff	(_t+1),(c:?_adc_read_humid+1)
 18970  005380  C0FB  F008         	goto	l255
 18971  005384  EFC4  F029         	
 18972                           l5011:; BSR set to: 0
 18973  005388                     
 18974                           	line	278
 18975                           	
 18976                           l255:; BSR set to: 0
 18977  005388                     
 18978                           	return	;funcret
 18979  005388  0012               	opt stack 0
 18980                           GLOBAL	__end_of_adc_read_humid
 18981                           	__end_of_adc_read_humid:
 18982  00538A                     	signat	_adc_read_humid,90
 18983                           	global	_adc_init
 18984                           
 18985 ;; *************** function _adc_init *****************
 18986 ;; Defined at:
 18987 ;;		line 16 in file "./AnalogToDigital.h"
 18988 ;; Parameters:    Size  Location     Type
 18989 ;;		None
 18990 ;; Auto vars:     Size  Location     Type
 18991 ;;		None
 18992 ;; Return value:  Size  Location     Type
 18993 ;;                  1    wreg      void 
 18994 ;; Registers used:
 18995 ;;		wreg, status,2
 18996 ;; Tracked objects:
 18997 ;;		On entry : 0/0
 18998 ;;		On exit  : 0/0
 18999 ;;		Unchanged: 0/0
 19000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19001 ;;      Params:         0       0       0       0       0       0       0       0       0
 19002 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19003 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19004 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19005 ;;Total ram usage:        0 bytes
 19006 ;; Hardware stack levels used:    1
 19007 ;; This function calls:
 19008 ;;		Nothing
 19009 ;; This function is called by:
 19010 ;;		_main
 19011 ;; This function uses a non-reentrant model
 19012 ;;
 19013                           psect	text51,class=CODE,space=0,reloc=2,group=0
 19014                           	file	"./AnalogToDigital.h"
 19015                           	line	16
 19016                           global __ptext51
 19017                           __ptext51:
 19018  005786                     psect	text51
 19019                           	file	"./AnalogToDigital.h"
 19020                           	line	16
 19021                           	global	__size_of_adc_init
 19022                           	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
 19023  0000                     	
 19024                           _adc_init:; BSR set to: 0
 19025  005786                     
 19026                           ;incstack = 0
 19027                           	opt	stack 30
 19028                           	line	18
 19029                           	
 19030                           l4797:
 19031  005786                     ;./AnalogToDigital.h: 18:         TRISA = 0xFF;
 19032                           	setf	((c:3986)),c	;volatile
 19033  005786  6892               	line	19
 19034                           ;./AnalogToDigital.h: 19:         ADCON0bits.ADON = 1;
 19035                           	bsf	((c:4034)),c,0	;volatile
 19036  005788  80C2               	line	20
 19037                           	
 19038                           l4799:
 19039  00578A                     ;./AnalogToDigital.h: 20:         ADCON1 = 0x09;
 19040                           	movlw	low(09h)
 19041  00578A  0E09               	movwf	((c:4033)),c	;volatile
 19042  00578C  6EC1               	line	21
 19043                           ;./AnalogToDigital.h: 21:         ADCON2 = 0xAD;
 19044                           	movlw	low(0ADh)
 19045  00578E  0EAD               	movwf	((c:4032)),c	;volatile
 19046  005790  6EC0               	line	22
 19047                           	
 19048                           l79:
 19049  005792                     	return	;funcret
 19050  005792  0012               	opt stack 0
 19051                           GLOBAL	__end_of_adc_init
 19052                           	__end_of_adc_init:
 19053  005794                     	signat	_adc_init,89
 19054                           	global	_PWM_Init
 19055                           
 19056 ;; *************** function _PWM_Init *****************
 19057 ;; Defined at:
 19058 ;;		line 36 in file "./servomoteur.h"
 19059 ;; Parameters:    Size  Location     Type
 19060 ;;		None
 19061 ;; Auto vars:     Size  Location     Type
 19062 ;;		None
 19063 ;; Return value:  Size  Location     Type
 19064 ;;                  1    wreg      void 
 19065 ;; Registers used:
 19066 ;;		wreg, status,2
 19067 ;; Tracked objects:
 19068 ;;		On entry : 0/0
 19069 ;;		On exit  : 0/0
 19070 ;;		Unchanged: 0/0
 19071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19072 ;;      Params:         0       0       0       0       0       0       0       0       0
 19073 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19075 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19076 ;;Total ram usage:        0 bytes
 19077 ;; Hardware stack levels used:    1
 19078 ;; This function calls:
 19079 ;;		Nothing
 19080 ;; This function is called by:
 19081 ;;		_main
 19082 ;; This function uses a non-reentrant model
 19083 ;;
 19084                           psect	text52,class=CODE,space=0,reloc=2,group=0
 19085                           	file	"./servomoteur.h"
 19086                           	line	36
 19087                           global __ptext52
 19088                           __ptext52:
 19089  005794                     psect	text52
 19090                           	file	"./servomoteur.h"
 19091                           	line	36
 19092                           	global	__size_of_PWM_Init
 19093                           	__size_of_PWM_Init	equ	__end_of_PWM_Init-_PWM_Init
 19094  0000                     	
 19095                           _PWM_Init:
 19096  005794                     ;incstack = 0
 19097                           	opt	stack 30
 19098                           	line	38
 19099                           	
 19100                           l4825:
 19101  005794                     ;./servomoteur.h: 38:     TRISCbits.TRISC2 = 0;
 19102                           	bcf	((c:3988)),c,2	;volatile
 19103  005794  9494               	line	39
 19104                           	
 19105                           l4827:
 19106  005796                     ;./servomoteur.h: 39:     CCP1CON = 0x0C;
 19107                           	movlw	low(0Ch)
 19108  005796  0E0C               	movwf	((c:4029)),c	;volatile
 19109  005798  6EBD               	line	40
 19110                           	
 19111                           l116:
 19112  00579A                     	return	;funcret
 19113  00579A  0012               	opt stack 0
 19114                           GLOBAL	__end_of_PWM_Init
 19115                           	__end_of_PWM_Init:
 19116  00579C                     	signat	_PWM_Init,89
 19117                           	global	_LCD_Init
 19118                           
 19119 ;; *************** function _LCD_Init *****************
 19120 ;; Defined at:
 19121 ;;		line 31 in file "./LCD4BITS.h"
 19122 ;; Parameters:    Size  Location     Type
 19123 ;;		None
 19124 ;; Auto vars:     Size  Location     Type
 19125 ;;		None
 19126 ;; Return value:  Size  Location     Type
 19127 ;;                  1    wreg      void 
 19128 ;; Registers used:
 19129 ;;		wreg, status,2, status,0, cstack
 19130 ;; Tracked objects:
 19131 ;;		On entry : 0/0
 19132 ;;		On exit  : 0/0
 19133 ;;		Unchanged: 0/0
 19134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19135 ;;      Params:         0       0       0       0       0       0       0       0       0
 19136 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19137 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19138 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19139 ;;Total ram usage:        0 bytes
 19140 ;; Hardware stack levels used:    1
 19141 ;; Hardware stack levels required when called:    2
 19142 ;; This function calls:
 19143 ;;		_LCD_Command
 19144 ;;		_MSdelay
 19145 ;; This function is called by:
 19146 ;;		_main
 19147 ;; This function uses a non-reentrant model
 19148 ;;
 19149                           psect	text53,class=CODE,space=0,reloc=2,group=0
 19150                           	file	"./LCD4BITS.h"
 19151                           	line	31
 19152                           global __ptext53
 19153                           __ptext53:
 19154  0056B8                     psect	text53
 19155                           	file	"./LCD4BITS.h"
 19156                           	line	31
 19157                           	global	__size_of_LCD_Init
 19158                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
 19159  0000                     	
 19160                           _LCD_Init:
 19161  0056B8                     ;incstack = 0
 19162                           	opt	stack 28
 19163                           	line	33
 19164                           	
 19165                           l4809:
 19166  0056B8                     ;./LCD4BITS.h: 33:     TRISB = 0;
 19167                           	movlw	low(0)
 19168  0056B8  0E00               	movwf	((c:3987)),c	;volatile
 19169  0056BA  6E93               	line	34
 19170                           	
 19171                           l4811:
 19172  0056BC                     ;./LCD4BITS.h: 34:     MSdelay(15);
 19173                           	movlw	high(0Fh)
 19174  0056BC  0E00               	movwf	((c:MSdelay@val+1)),c
 19175  0056BE  6E02               	movlw	low(0Fh)
 19176  0056C0  0E0F               	movwf	((c:MSdelay@val)),c
 19177  0056C2  6E01               	call	_MSdelay	;wreg free
 19178  0056C4  EC07  F028         	line	35
 19179                           	
 19180                           l4813:
 19181  0056C8                     ;./LCD4BITS.h: 35:     LCD_Command(0x02);
 19182                           	movlw	(02h)&0ffh
 19183  0056C8  0E02               	
 19184                           	call	_LCD_Command
 19185  0056CA  EC91  F02A         	line	37
 19186                           	
 19187                           l4815:
 19188  0056CE                     ;./LCD4BITS.h: 37:     LCD_Command(0x28);
 19189                           	movlw	(028h)&0ffh
 19190  0056CE  0E28               	
 19191                           	call	_LCD_Command
 19192  0056D0  EC91  F02A         	line	39
 19193                           	
 19194                           l4817:
 19195  0056D4                     ;./LCD4BITS.h: 39:  LCD_Command(0x01);
 19196                           	movlw	(01h)&0ffh
 19197  0056D4  0E01               	
 19198                           	call	_LCD_Command
 19199  0056D6  EC91  F02A         	line	40
 19200                           	
 19201                           l4819:
 19202  0056DA                     ;./LCD4BITS.h: 40:     LCD_Command(0x0c);
 19203                           	movlw	(0Ch)&0ffh
 19204  0056DA  0E0C               	
 19205                           	call	_LCD_Command
 19206  0056DC  EC91  F02A         	line	41
 19207                           	
 19208                           l4821:
 19209  0056E0                     ;./LCD4BITS.h: 41:  LCD_Command(0x06);
 19210                           	movlw	(06h)&0ffh
 19211  0056E0  0E06               	
 19212                           	call	_LCD_Command
 19213  0056E2  EC91  F02A         	line	42
 19214                           	
 19215                           l85:
 19216  0056E6                     	return	;funcret
 19217  0056E6  0012               	opt stack 0
 19218                           GLOBAL	__end_of_LCD_Init
 19219                           	__end_of_LCD_Init:
 19220  0056E8                     	signat	_LCD_Init,89
 19221                           	global	_LCD_Clear
 19222                           
 19223 ;; *************** function _LCD_Clear *****************
 19224 ;; Defined at:
 19225 ;;		line 106 in file "./LCD4BITS.h"
 19226 ;; Parameters:    Size  Location     Type
 19227 ;;		None
 19228 ;; Auto vars:     Size  Location     Type
 19229 ;;		None
 19230 ;; Return value:  Size  Location     Type
 19231 ;;                  1    wreg      void 
 19232 ;; Registers used:
 19233 ;;		wreg, status,2, status,0, cstack
 19234 ;; Tracked objects:
 19235 ;;		On entry : 0/0
 19236 ;;		On exit  : 0/0
 19237 ;;		Unchanged: 0/0
 19238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19239 ;;      Params:         0       0       0       0       0       0       0       0       0
 19240 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19241 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19242 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19243 ;;Total ram usage:        0 bytes
 19244 ;; Hardware stack levels used:    1
 19245 ;; Hardware stack levels required when called:    2
 19246 ;; This function calls:
 19247 ;;		_LCD_Command
 19248 ;; This function is called by:
 19249 ;;		_main
 19250 ;; This function uses a non-reentrant model
 19251 ;;
 19252                           psect	text54,class=CODE,space=0,reloc=2,group=0
 19253                           	line	106
 19254                           global __ptext54
 19255                           __ptext54:
 19256  00579C                     psect	text54
 19257                           	file	"./LCD4BITS.h"
 19258                           	line	106
 19259                           	global	__size_of_LCD_Clear
 19260                           	__size_of_LCD_Clear	equ	__end_of_LCD_Clear-_LCD_Clear
 19261  0000                     	
 19262                           _LCD_Clear:
 19263  00579C                     ;incstack = 0
 19264                           	opt	stack 28
 19265                           	line	108
 19266                           	
 19267                           l4823:
 19268  00579C                     ;./LCD4BITS.h: 108:     LCD_Command(0x01);
 19269                           	movlw	(01h)&0ffh
 19270  00579C  0E01               	
 19271                           	call	_LCD_Command
 19272  00579E  EC91  F02A         	line	109
 19273                           	
 19274                           l105:
 19275  0057A2                     	return	;funcret
 19276  0057A2  0012               	opt stack 0
 19277                           GLOBAL	__end_of_LCD_Clear
 19278                           	__end_of_LCD_Clear:
 19279  0057A4                     	signat	_LCD_Clear,89
 19280                           	global	_LCD_Command
 19281                           
 19282 ;; *************** function _LCD_Command *****************
 19283 ;; Defined at:
 19284 ;;		line 45 in file "./LCD4BITS.h"
 19285 ;; Parameters:    Size  Location     Type
 19286 ;;  cmd             1    wreg     unsigned char 
 19287 ;; Auto vars:     Size  Location     Type
 19288 ;;  cmd             1    7[COMRAM] unsigned char 
 19289 ;; Return value:  Size  Location     Type
 19290 ;;                  1    wreg      void 
 19291 ;; Registers used:
 19292 ;;		wreg, status,2, status,0, cstack
 19293 ;; Tracked objects:
 19294 ;;		On entry : 0/0
 19295 ;;		On exit  : 0/0
 19296 ;;		Unchanged: 0/0
 19297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19298 ;;      Params:         0       0       0       0       0       0       0       0       0
 19299 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19300 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19301 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19302 ;;Total ram usage:        2 bytes
 19303 ;; Hardware stack levels used:    1
 19304 ;; Hardware stack levels required when called:    1
 19305 ;; This function calls:
 19306 ;;		_MSdelay
 19307 ;; This function is called by:
 19308 ;;		_LCD_Init
 19309 ;;		_LCD_String_xy
 19310 ;;		_LCD_Clear
 19311 ;; This function uses a non-reentrant model
 19312 ;;
 19313                           psect	text55,class=CODE,space=0,reloc=2,group=0
 19314                           	line	45
 19315                           global __ptext55
 19316                           __ptext55:
 19317  005522                     psect	text55
 19318                           	file	"./LCD4BITS.h"
 19319                           	line	45
 19320                           	global	__size_of_LCD_Command
 19321                           	__size_of_LCD_Command	equ	__end_of_LCD_Command-_LCD_Command
 19322  0000                     	
 19323                           _LCD_Command:
 19324  005522                     ;incstack = 0
 19325                           	opt	stack 26
 19326                           ;LCD_Command@cmd stored from wreg
 19327                           	movwf	((c:LCD_Command@cmd)),c
 19328  005522  6E08               	line	47
 19329                           	
 19330                           l3477:
 19331  005524                     ;./LCD4BITS.h: 45: void LCD_Command(unsigned char cmd );./LCD4BITS.h: 46: {;./LCD4BITS.h
                                 : 47:  LATB = (LATB & 0x0f) |(0xF0 & cmd);
 19332                           	movff	(c:LCD_Command@cmd),??_LCD_Command+0+0
 19333  005524  C008  F007         	movlw	0F0h
 19334  005528  0EF0               	andwf	(??_LCD_Command+0+0),c
 19335  00552A  1607               	movf	((c:3978)),c,w	;volatile
 19336  00552C  508A               	andlw	low(0Fh)
 19337  00552E  0B0F               	iorwf	(??_LCD_Command+0+0),c,w
 19338  005530  1007               	movwf	((c:3978)),c	;volatile
 19339  005532  6E8A               	line	48
 19340                           	
 19341                           l3479:
 19342  005534                     ;./LCD4BITS.h: 48:  LATB0 = 0;
 19343                           	bcf	c:(31824/8),(31824)&7	;volatile
 19344  005534  908A               	line	49
 19345                           	
 19346                           l3481:
 19347  005536                     ;./LCD4BITS.h: 49:  LATB1 = 1;
 19348                           	bsf	c:(31825/8),(31825)&7	;volatile
 19349  005536  828A               	line	50
 19350                           	
 19351                           l3483:
 19352  005538                     ;./LCD4BITS.h: 50:  __nop();
 19353                           	opt	asmopt_push
 19354                           	opt	asmopt_off
 19355                           	nop
 19356  005538  F000               	opt	asmopt_pop
 19357                           	line	51
 19358                           	
 19359                           l3485:
 19360  00553A                     ;./LCD4BITS.h: 51:  LATB1 = 0;
 19361                           	bcf	c:(31825/8),(31825)&7	;volatile
 19362  00553A  928A               	line	52
 19363                           	
 19364                           l3487:
 19365  00553C                     ;./LCD4BITS.h: 52:  MSdelay(1);
 19366                           	movlw	high(01h)
 19367  00553C  0E00               	movwf	((c:MSdelay@val+1)),c
 19368  00553E  6E02               	movlw	low(01h)
 19369  005540  0E01               	movwf	((c:MSdelay@val)),c
 19370  005542  6E01               	call	_MSdelay	;wreg free
 19371  005544  EC07  F028         	line	53
 19372                           	
 19373                           l3489:
 19374  005548                     ;./LCD4BITS.h: 53:     LATB = (LATB & 0x0f) | (cmd<<4);
 19375                           	movff	(c:LCD_Command@cmd),??_LCD_Command+0+0
 19376  005548  C008  F007         	swapf	(??_LCD_Command+0+0),c
 19377  00554C  3A07               	movlw	(0ffh shl 4) & 0ffh
 19378  00554E  0EF0               	andwf	(??_LCD_Command+0+0),c
 19379  005550  1607               	movf	((c:3978)),c,w	;volatile
 19380  005552  508A               	andlw	low(0Fh)
 19381  005554  0B0F               	iorwf	(??_LCD_Command+0+0),c,w
 19382  005556  1007               	movwf	((c:3978)),c	;volatile
 19383  005558  6E8A               	line	54
 19384                           	
 19385                           l3491:
 19386  00555A                     ;./LCD4BITS.h: 54:  LATB1 = 1;
 19387                           	bsf	c:(31825/8),(31825)&7	;volatile
 19388  00555A  828A               	line	55
 19389                           	
 19390                           l3493:
 19391  00555C                     ;./LCD4BITS.h: 55:  __nop();
 19392                           	opt	asmopt_push
 19393                           	opt	asmopt_off
 19394                           	nop
 19395  00555C  F000               	opt	asmopt_pop
 19396                           	line	56
 19397                           	
 19398                           l3495:
 19399  00555E                     ;./LCD4BITS.h: 56:  LATB1 = 0;
 19400                           	bcf	c:(31825/8),(31825)&7	;volatile
 19401  00555E  928A               	line	57
 19402                           ;./LCD4BITS.h: 57:  MSdelay(3);
 19403                           	movlw	high(03h)
 19404  005560  0E00               	movwf	((c:MSdelay@val+1)),c
 19405  005562  6E02               	movlw	low(03h)
 19406  005564  0E03               	movwf	((c:MSdelay@val)),c
 19407  005566  6E01               	call	_MSdelay	;wreg free
 19408  005568  EC07  F028         	line	58
 19409                           	
 19410                           l88:
 19411  00556C                     	return	;funcret
 19412  00556C  0012               	opt stack 0
 19413                           GLOBAL	__end_of_LCD_Command
 19414                           	__end_of_LCD_Command:
 19415  00556E                     	signat	_LCD_Command,4217
 19416                           	global	_MSdelay
 19417                           
 19418 ;; *************** function _MSdelay *****************
 19419 ;; Defined at:
 19420 ;;		line 112 in file "./LCD4BITS.h"
 19421 ;; Parameters:    Size  Location     Type
 19422 ;;  val             2    0[COMRAM] unsigned int 
 19423 ;; Auto vars:     Size  Location     Type
 19424 ;;  j               2    4[COMRAM] unsigned int 
 19425 ;;  i               2    2[COMRAM] unsigned int 
 19426 ;; Return value:  Size  Location     Type
 19427 ;;                  1    wreg      void 
 19428 ;; Registers used:
 19429 ;;		wreg, status,2, status,0
 19430 ;; Tracked objects:
 19431 ;;		On entry : 0/0
 19432 ;;		On exit  : 0/0
 19433 ;;		Unchanged: 0/0
 19434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19435 ;;      Params:         2       0       0       0       0       0       0       0       0
 19436 ;;      Locals:         4       0       0       0       0       0       0       0       0
 19437 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19438 ;;      Totals:         6       0       0       0       0       0       0       0       0
 19439 ;;Total ram usage:        6 bytes
 19440 ;; Hardware stack levels used:    1
 19441 ;; This function calls:
 19442 ;;		Nothing
 19443 ;; This function is called by:
 19444 ;;		_LCD_Init
 19445 ;;		_LCD_Command
 19446 ;;		_LCD_Char
 19447 ;;		_main
 19448 ;;		_lcd_lum
 19449 ;;		_lcd_sol
 19450 ;;		_lcd_humid
 19451 ;;		_lcd_temp
 19452 ;;		_adc_read_lum
 19453 ;;		_adc_read_sol
 19454 ;;		_adc_read_humid
 19455 ;;		_adc_read_temp
 19456 ;; This function uses a non-reentrant model
 19457 ;;
 19458                           psect	text56,class=CODE,space=0,reloc=2,group=0
 19459                           	line	112
 19460                           global __ptext56
 19461                           __ptext56:
 19462  00500E                     psect	text56
 19463                           	file	"./LCD4BITS.h"
 19464                           	line	112
 19465                           	global	__size_of_MSdelay
 19466                           	__size_of_MSdelay	equ	__end_of_MSdelay-_MSdelay
 19467  0000                     	
 19468                           _MSdelay:
 19469  00500E                     ;incstack = 0
 19470                           	opt	stack 25
 19471                           	line	115
 19472                           	
 19473                           l3337:
 19474  00500E                     ;./LCD4BITS.h: 112: void MSdelay(unsigned int val);./LCD4BITS.h: 113: {;./LCD4BITS.h: 11
                                 4:  unsigned int i,j;;./LCD4BITS.h: 115:  for(i=0;i<=val;i++)
 19475                           	movlw	high(0)
 19476  00500E  0E00               	movwf	((c:MSdelay@i+1)),c
 19477  005010  6E04               	movlw	low(0)
 19478  005012  0E00               	movwf	((c:MSdelay@i)),c
 19479  005014  6E03               	goto	l3351
 19480  005016  EF33  F028         	
 19481                           l109:
 19482  00501A                     	line	116
 19483                           	
 19484                           l3339:
 19485  00501A                     ;./LCD4BITS.h: 116:      for(j=0;j<81;j++);
 19486                           	movlw	high(0)
 19487  00501A  0E00               	movwf	((c:MSdelay@j+1)),c
 19488  00501C  6E06               	movlw	low(0)
 19489  00501E  0E00               	movwf	((c:MSdelay@j)),c
 19490  005020  6E05               	
 19491                           l3341:
 19492  005022                     		movf	((c:MSdelay@j+1)),c,w
 19493  005022  5006               	bnz	u3860
 19494  005024  E109               	movlw	81
 19495  005026  0E51               	subwf	 ((c:MSdelay@j)),c,w
 19496  005028  5C05               	btfss	status,0
 19497  00502A  A0D8               	goto	u3861
 19498  00502C  EF1A  F028         	goto	u3860
 19499  005030  EF1C  F028         
 19500                           u3861:
 19501  005034                     	goto	l3345
 19502  005034  EF20  F028         u3860:
 19503  005038                     	goto	l3349
 19504  005038  EF2F  F028         	
 19505                           l3343:
 19506  00503C                     	goto	l3349
 19507  00503C  EF2F  F028         	
 19508                           l110:
 19509  005040                     	
 19510                           l3345:
 19511  005040                     	infsnz	((c:MSdelay@j)),c
 19512  005040  4A05               	incf	((c:MSdelay@j+1)),c
 19513  005042  2A06               	
 19514                           l3347:
 19515  005044                     		movf	((c:MSdelay@j+1)),c,w
 19516  005044  5006               	bnz	u3870
 19517  005046  E109               	movlw	81
 19518  005048  0E51               	subwf	 ((c:MSdelay@j)),c,w
 19519  00504A  5C05               	btfss	status,0
 19520  00504C  A0D8               	goto	u3871
 19521  00504E  EF2B  F028         	goto	u3870
 19522  005052  EF2D  F028         
 19523                           u3871:
 19524  005056                     	goto	l3345
 19525  005056  EF20  F028         u3870:
 19526  00505A                     	goto	l3349
 19527  00505A  EF2F  F028         	
 19528                           l111:
 19529  00505E                     	
 19530                           l3349:
 19531  00505E                     	infsnz	((c:MSdelay@i)),c
 19532  00505E  4A03               	incf	((c:MSdelay@i+1)),c
 19533  005060  2A04               	goto	l3351
 19534  005062  EF33  F028         	
 19535                           l108:
 19536  005066                     	
 19537                           l3351:
 19538  005066                     		movf	((c:MSdelay@i)),c,w
 19539  005066  5003               	subwf	((c:MSdelay@val)),c,w
 19540  005068  5C01               	movf	((c:MSdelay@i+1)),c,w
 19541  00506A  5004               	subwfb	((c:MSdelay@val+1)),c,w
 19542  00506C  5802               	btfsc	status,0
 19543  00506E  B0D8               	goto	u3881
 19544  005070  EF3C  F028         	goto	u3880
 19545  005074  EF3E  F028         
 19546                           u3881:
 19547  005078                     	goto	l3339
 19548  005078  EF0D  F028         u3880:
 19549  00507C                     	goto	l113
 19550  00507C  EF40  F028         	
 19551                           l112:
 19552  005080                     	line	117
 19553                           	
 19554                           l113:
 19555  005080                     	return	;funcret
 19556  005080  0012               	opt stack 0
 19557                           GLOBAL	__end_of_MSdelay
 19558                           	__end_of_MSdelay:
 19559  005082                     	signat	_MSdelay,4217
 19560                           psect	smallconst
 19561                           	db 0	; dummy byte at the end
 19562  0008C0  00                 	global	__smallconst
 19563                           	global	__mediumconst
 19564                           	GLOBAL	__activetblptr
 19565                           __activetblptr	EQU	2
 19566  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 19567                           	PSECT	rparam,class=COMRAM,space=1,noexec
 19568                           	GLOBAL	__Lrparam
 19569                           	FNCONF	rparam,??,?
 19570                           	GLOBAL	___rparam_used
 19571                           	___rparam_used EQU 1
 19572  0000                     	GLOBAL	___param_bank
 19573                           	___param_bank EQU 0
 19574  0000                     GLOBAL	__Lparam, __Hparam
 19575                           GLOBAL	__Lrparam, __Hrparam
 19576                           __Lparam	EQU	__Lrparam
 19577  0000                     __Hparam	EQU	__Hrparam
 19578  0000                     	end


Data Sizes:
    Strings     163
    Constant    28
    Data        98
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     76     159
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info(BANK0[16]), 
		 -> lcd_lum@lum_info(BANK0[16]), lcd_arrosage@data(BANK0[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info(BANK0[16]), 
		 -> lcd_lum@lum_info(BANK0[16]), lcd_arrosage@data(BANK0[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info(BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
		 -> lcd_arrosage@data(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info(BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
		 -> lcd_arrosage@data(BANK0[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 7
		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK0[3]), lcd_lum@value(BANK0[3]), 
		 -> STR_5(CODE[2]), lcd_arrosage@time2(BANK0[2]), STR_3(CODE[7]), STR_2(CODE[4]), 
		 -> STR_1(CODE[3]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK0[3]), lcd_lum@value(BANK0[3]), 
		 -> STR_5(CODE[2]), lcd_arrosage@time2(BANK0[2]), STR_3(CODE[7]), STR_2(CODE[4]), 
		 -> STR_1(CODE[3]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info(BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
		 -> lcd_arrosage@data(BANK0[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 7
		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK0[3]), lcd_lum@value(BANK0[3]), 
		 -> STR_5(CODE[2]), lcd_arrosage@time2(BANK0[2]), STR_3(CODE[7]), STR_2(CODE[4]), 
		 -> STR_1(CODE[3]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info(BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
		 -> lcd_arrosage@data(BANK0[16]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_15(CODE[3]), STR_11(CODE[3]), STR_8(CODE[3]), 
		 -> STR_4(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3
		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK0[3]), lcd_lum@value(BANK0[3]), 
		 -> lcd_arrosage@time2(BANK0[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK0[3]), lcd_lum@value(BANK0[3]), 
		 -> lcd_arrosage@time2(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S984_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 3
		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK0[3]), lcd_lum@value(BANK0[3]), 
		 -> lcd_arrosage@time2(BANK0[2]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> lcd_temp@temperature(BANK0[3]), lcd_humid@humidity(BANK0[3]), lcd_sol@value(BANK0[3]), lcd_lum@value(BANK0[3]), 
		 -> lcd_arrosage@time2(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> hex_converter@convert(COMRAM[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_15(CODE[3]), STR_11(CODE[3]), STR_8(CODE[3]), 
		 -> STR_4(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_15(CODE[3]), STR_11(CODE[3]), STR_8(CODE[3]), 
		 -> STR_4(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_temp@temp_info(BANK0[16]), lcd_humid@humid_info(BANK0[16]), lcd_sol@sol_info(BANK0[16]), lcd_lum@lum_info(BANK0[16]), 
		 -> lcd_arrosage@data(BANK0[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_20(CODE[14]), STR_19(CODE[14]), lcd_temp@temp_info(BANK0[16]), STR_17(CODE[15]), 
		 -> STR_16(CODE[12]), lcd_humid@humid_info(BANK0[16]), STR_14(CODE[15]), STR_13(CODE[12]), 
		 -> STR_12(CODE[12]), lcd_sol@sol_info(BANK0[16]), STR_10(CODE[13]), STR_9(CODE[13]), 
		 -> lcd_lum@lum_info(BANK0[16]), STR_7(CODE[13]), STR_6(CODE[13]), lcd_arrosage@data(BANK0[16]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_20(CODE[14]), STR_19(CODE[14]), lcd_temp@temp_info(BANK0[16]), STR_17(CODE[15]), 
		 -> STR_16(CODE[12]), lcd_humid@humid_info(BANK0[16]), STR_14(CODE[15]), STR_13(CODE[12]), 
		 -> STR_12(CODE[12]), lcd_sol@sol_info(BANK0[16]), STR_10(CODE[13]), STR_9(CODE[13]), 
		 -> lcd_lum@lum_info(BANK0[16]), STR_7(CODE[13]), STR_6(CODE[13]), lcd_arrosage@data(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_lcd_humid
    _main->_lcd_lum
    _main->_lcd_sol
    _main->_lcd_temp
    _main->_setPeriodTo
    _stream->_setPeriodTo
    _setPeriodTo->___fltol
    _roundf->___fladd
    _lcd_arrosage->_sprintf
    _SetDutyCycleTo->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _lcd_temp->_sprintf
    _lcd_sol->_sprintf
    _lcd_lum->_sprintf
    _lcd_humid->_sprintf
    _strcat->_strcpy
    _strcpy->_strlen
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _hex_converter->_atoi
    _atoi->_isspace
    ___lwmod->___lwdiv
    _adc_read_temp->_MSdelay
    _adc_read_sol->_MSdelay
    _adc_read_lum->_MSdelay
    _adc_read_humid->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_stream
    _stream->_setPeriodTo
    _setPeriodTo->_roundf
    _lcd_arrosage->_sprintf
    _arrosage->_SetDutyCycleTo
    _lcd_temp->_sprintf
    _lcd_sol->_sprintf
    _lcd_lum->_sprintf
    _lcd_humid->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    18      5  164978
                                             53 BANK0     23    18      5
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                           _PWM_Init
                     _SetDutyCycleTo
                           _adc_init
                     _adc_read_humid
                       _adc_read_lum
                       _adc_read_sol
                      _adc_read_temp
                      _hex_converter
                          _lcd_humid
                            _lcd_lum
                            _lcd_sol
                           _lcd_temp
                        _setPeriodTo
                             _stream
 ---------------------------------------------------------------------------------
 (1) _stream                                               9     3      6   55706
                                             44 BANK0      9     3      6
                     _SetDutyCycleTo
                           _arrosage
                              _delay
                       _lcd_arrosage
                        _setPeriodTo
 ---------------------------------------------------------------------------------
 (2) _setPeriodTo                                         27    23      4   17028
                                             94 COMRAM     1     1      0
                                             18 BANK0     26    22      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4    7582
                                             84 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     349
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _lcd_arrosage                                        24    18      6   16725
                                             10 BANK0     24    18      6
                      _LCD_String_xy
                            ___awdiv
                             ___fleq
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _arrosage                                             8     0      8   11444
                                             14 BANK0      8     0      8
                     _SetDutyCycleTo
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2     244
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _SetDutyCycleTo                                      14     8      6    9310
                                              0 BANK0     14     8      6
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                             84 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2352
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3756
                                             64 COMRAM    20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_temp                                            26    24      2   17435
                                             93 COMRAM     2     0      2
                                             10 BANK0     24    24      0
                      _LCD_String_xy
                            _MSdelay
                            _sprintf
                             _strcat
                       _temp_convert
 ---------------------------------------------------------------------------------
 (2) _temp_convert                                         4     2      2    1877
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lcd_sol                                             21    19      2   15578
                                             93 COMRAM     2     0      2
                                             10 BANK0     19    19      0
                      _LCD_String_xy
                            _MSdelay
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _lcd_lum                                             21    19      2   15534
                                             93 COMRAM     2     0      2
                                             10 BANK0     19    19      0
                      _LCD_String_xy
                            _MSdelay
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _lcd_humid                                           26    24      2   16490
                                             93 COMRAM     2     0      2
                                             10 BANK0     24    24      0
                      _LCD_String_xy
                            _MSdelay
                      _humid_convert
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     0      4    1930
                                             16 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcpy                                              10     6      4     248
                                              6 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6    7140
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                            ___awdiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6181
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5827
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4434
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2785
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     242
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _humid_convert                                        4     2      2     932
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _LCD_String_xy                                        5     2      3    5088
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (4) _LCD_String                                           2     0      2    1321
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (5) _LCD_Char                                             2     2      0    1200
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _hex_converter                                        7     5      2    3178
                                             22 COMRAM     7     5      2
                            ___lwdiv
                            ___lwmod
                               _atoi
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    1276
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     511
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _adc_read_temp                                        2     0      2    1156
                                              6 COMRAM     2     0      2
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _adc_read_sol                                         2     0      2    1156
                                              6 COMRAM     2     0      2
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _adc_read_lum                                         2     0      2    1156
                                              6 COMRAM     2     0      2
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _adc_read_humid                                       2     0      2    1156
                                              6 COMRAM     2     0      2
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    2356
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    1200
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Command                                          2     2      0    1200
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (6) _MSdelay                                              6     4      2    1156
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _PWM_Init
   _SetDutyCycleTo
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _adc_init
   _adc_read_humid
     _MSdelay
   _adc_read_lum
     _MSdelay
   _adc_read_sol
     _MSdelay
   _adc_read_temp
     _MSdelay
   _hex_converter
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _atoi
       ___wmul
       _isdigit
       _isspace
   _lcd_humid
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _humid_convert
     _sprintf
       ___awdiv (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
   _lcd_lum
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _sprintf
       ___awdiv (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
   _lcd_sol
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _sprintf
       ___awdiv (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
   _lcd_temp
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _sprintf
       ___awdiv (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _temp_convert
   _setPeriodTo
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___xxtofl (ARG)
       ___flneg
   _stream
     _SetDutyCycleTo
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _arrosage
       _SetDutyCycleTo
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _delay
     _delay
     _lcd_arrosage
       _LCD_String_xy
         _LCD_Command
           _MSdelay
         _LCD_String
           _LCD_Char
             _MSdelay
       ___awdiv
       ___fleq
       _sprintf
         ___awdiv (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
     _setPeriodTo
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _roundf
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
         ___flneg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13E      20        0.0%
DATA                 0      0     13E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Nov 12 20:28:57 2018

                    ___fldiv@aexp 0040                      ___fldiv@bexp 003F  
                               _h 00FC                                 _l 00FE  
                               _t 00FA                      ___fldiv@sign 0038  
         stream@limit_temperature 0817                      ?_LCD_Command 0001  
                              l82 4D2E                                l91 5520  
                              l85 56E6                                l94 5180  
                              l79 5792                                l95 5154  
                              l88 556C                                l96 51B4  
                              l97 51B4                      ___awdiv@sign 0006  
                     __CFG_BOR$ON 000000               ___wmul@multiplicand 0003  
                     __CFG_BORV$3 000000                       ?_LCD_String 0009  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                             l100 5596                               l101 55A8  
                             l110 5040                               l102 55B4  
                             l111 505E                               l112 5080  
                             l120 3148                               l113 5080  
                             l105 57A2                               l121 3182  
                             l202 4E76                               l122 334E  
                             l130 333E                               l203 4E8C  
                             l211 47C0                               l131 32D6  
                             l123 31C6                               l108 5066  
                             l116 579A                               l300 23F0  
                             l204 4E98                               l212 481C  
                             l124 334A                               l132 333A  
                             l109 501A                               l301 23FC  
                             l213 4802                               l141 4FF2  
                             l133 331A                               l125 320A  
                             l302 2450                               l214 4818  
                             l310 120C                               l142 4FA6  
                             l126 3346                               l134 3336  
                             l215 4828                               l311 098C  
                             l143 4FCC                               l151 4558  
                             l135 34B8                               l127 324E  
                             l119 3134                               l240 53F2  
                             l224 4C46                               l312 1208  
                             l320 11F8                               l144 4FEA  
                             l152 45A2                               l128 3342  
                             l241 53F2                               l225 4C5C  
                             l321 0AA4                               l313 09C4  
                             l305 08E4                               l145 500C  
                             l153 45A2                               l129 3292  
                             l242 5400                               l410 4A36  
                             l226 4C68                               l306 1214  
                             l314 1204                               l322 11F4  
                             l330 11E4                               l138 4732  
                             l146 500C                               l154 4632  
                             l243 5436                               l331 0BBC  
                             l323 0ADC                               l315 09FC  
                             l307 091C                               l235 4B76  
                             l252 533C                               l260 5292  
                             l412 4A3E                               l420 3526  
                             l308 1210                               l316 1200  
                             l324 11F0                               l332 11E0  
                             l340 11D0                               l236 4B8C  
                             l180 172C                               l253 533C  
                             l261 52D0                               l413 4A66  
                             l421 353C                               l341 0CD4  
                             l333 0BF4                               l325 0B14  
                             l317 0A34                               l309 0954  
                             l237 4B98                               l157 5710  
                             l181 1828                               l254 534A  
                             l246 52E0                               l270 20A8  
                             l414 4A4A                               l430 35BC  
                             l318 11FC                               l326 11EC  
                             l334 11DC                               l342 11CC  
                             l350 11BC                               l182 1924  
                             l255 5388                               l247 52E0  
                             l271 2438                               l415 4A84  
                             l423 3562                               l351 0DEC  
                             l343 0D0C                               l335 0C2C  
                             l327 0B4C                               l319 0A6C  
                             l183 1A20                               l191 4108  
                             l248 52EE                               l280 21C0  
                             l272 20E0                               l264 2000  
                             l416 4AAC                               l408 4A1C  
                             l440 378A                               l432 373C  
                             l328 11E8                               l336 11D8  
                             l344 11C8                               l352 11B8  
                             l360 11A8                               l184 1A58  
                             l176 133C                               l192 4236  
                             l249 532C                               l265 2444  
                             l273 2434                               l281 2424  
                             l417 4AC8                               l425 356A  
                             l361 0F04                               l353 0E24  
                             l345 0D44                               l337 0C64  
                             l329 0B84                               l177 1438  
                             l193 423A                               l258 5284  
                             l290 22D8                               l282 21F8  
                             l274 2118                               l266 2038  
                             l442 3796                               l434 3738  
                             l426 35A0                               l450 3D86  
                             l338 11D4                               l346 11C4  
                             l354 11B4                               l362 11A4  
                             l370 1194                               l178 1534  
                             l194 423E                               l259 5284  
                             l267 2440                               l275 2430  
                             l283 2420                               l291 2410  
                             l443 37D6                               l435 3740  
                             l451 3D2A                               l371 101C  
                             l363 0F3C                               l355 0E5C  
                             l347 0D7C                               l339 0C9C  
                             l179 1630                               l195 423E  
                             l460 5764                               l292 2310  
                             l284 2230                               l276 2150  
                             l268 2070                               l436 37AA  
                             l428 3596                               l348 11C0  
                             l356 11B0                               l364 11A0  
                             l372 1190                               l380 1180  
                             l269 243C                               l277 242C  
                             l285 241C                               l293 240C  
                             l429 36B8                               l381 1134  
                             l373 1054                               l365 0F74  
                             l357 0E94                               l349 0DB4  
                             l294 2348                               l286 2268  
                             l278 2188                               l438 3766  
                             l446 3D48                               l454 512A  
                             l358 11AC                               l366 119C  
                             l374 118C                               l382 117C  
                             l279 2428                               l287 2418  
                             l295 2408                               l447 3CD4  
                             l455 5100                               l383 116C  
                             l375 108C                               l367 0FAC  
                             l359 0ECC                               l296 2380  
                             l288 22A0                               l456 5146  
                             l368 1198                               l376 1188  
                             l384 1178                               l289 2414  
                             l297 2404                               l449 3C50  
                             l457 514E                               l385 1220  
                             l377 10C4                               l369 0FE4  
                             l713 4D72                               l298 23B8  
                             l570 3E58                               l378 1184  
                             l714 4DB4                               l730 43A8  
                             l722 4284                               l299 2400  
                             l571 3EBE                               l379 10FC  
                             l723 42C6                               l572 3EDA  
                             l564 3DC2                               l580 3FE2  
                             l716 4DDE                               l724 4312  
                             l573 3F12                               l565 3DF8  
                             l581 3FCA                               l725 435A  
                             l733 5666                               l574 3F36  
                             l566 3EDE                               l582 3FF4  
                             l718 4DE4                               l734 567A  
                             l567 3E42                               l583 3FF8  
                             l719 4DE8                               l727 439E  
                             l568 3E2A                               l584 404A  
                             l760 4456                               l569 3E54  
                             l585 4066                               l577 3F72  
                             l761 446A                               l681 484C  
                             l729 43A4                               l586 409E  
                             l578 3FA4                               l762 44C2  
                             l690 4908                               l682 486A  
                             l587 40C2                               l579 406A  
                             l763 4496                               l691 4914  
                             l683 48EC                               l764 44AA  
                             l756 43D8                               l684 4898  
                             l765 449A                               l757 44FA  
                             l685 488C                               l766 44BE  
                             l758 446E                               l686 48AA  
                             l951 4F18                               l767 44E6  
                             l759 4452                               l687 48AE  
                             l952 4EC8                               l688 48D8  
                             l953 4EBC                               l961 4F90  
                             l689 48E8                               l954 4EDA  
                             l962 4F48                               l955 4EDE  
                             l963 4F3C                               l956 4F08  
                             l964 4F5A                               l980 1AEA  
                             l957 4F18                               l965 4F5E  
                             l981 1B04                               l958 4F20  
                             l966 4F80                               l990 1C32  
                             l982 1B42                               l967 4F90  
                             l991 1C4C                               l983 1B38  
                             l968 4F98                               l992 1C54  
                             l984 1B56                               l976 1A7A  
                             l993 1C68                               l985 1BBE  
                             l977 1AB8                               l994 1C8A  
                             l986 1B7E                               l978 1AAE  
                             l995 1D28                               l987 1C2E  
                             l979 1ACC                               l996 1CC0  
                             l988 1C8A                               l997 1FDC  
                             l989 1C74                               l998 1D24  
                             l999 1CF8                      __CFG_CPB$OFF 000000  
                             _PR2 000FCB                      __CFG_CPD$OFF 000000  
                             _abs 55B6                               _pad 49F4  
                             wreg 000FE8                      ___flmul@aexp 0020  
                    ___flmul@bexp 0021                      ___flmul@sign 001B  
                    ___flmul@temp 0026                      ___flmul@prod 0022  
                    __CFG_LVP$OFF 000000                       LCD_Char@dat 0008  
                    ___fltol@exp1 005E                      __CFG_WDT$OFF 000000  
                            l1000 1D00                              l1001 1D14  
                            l1002 1E88                              l1010 1E50  
                            l1011 1E58                              l1003 1DCA  
                            l1020 1F3C                              l1012 1E6E  
                            l1004 1DC6                              l1021 1F94  
                            l1013 1E84                              l1005 1DDA  
                            l1014 1ED2                              l1006 1E18  
                            l1023 1F68                              l1015 1EB8  
                            l1007 1E72                              l1200 54B0  
                            l1024 1F90                              l1016 1ED2  
                            l1008 1E1C                              l1040 29A4  
                            l1120 3A80                              l1201 5496  
                            l1025 1FA8                              l1017 1ECE  
                            l1009 1E3A                              l1041 29EE  
                            l1033 28E0                              l1121 3AC2  
                            l1202 54D4                              l1210 5274  
                            l1026 1FAE                              l1018 1F44  
                            l1050 2B2E                              l1042 2CDE  
                            l1034 291E                              l1130 3B5A  
                            l1122 3ADE                              l1203 54D4  
                            l1027 1FC8                              l1019 1F40  
                            l1051 2B60                              l1043 2A26  
                            l1035 2914                              l1131 3BA6  
                            l1123 3AC6                              l1115 3A36  
                            ?_abs 0013                              l1060 2C30  
                            l1052 2B32                              l1044 2AFE  
                            l1036 2932                              l1124 3B10  
                            l1116 3A4A                              l1220 2D5E  
                            l1213 57A4                              l1061 2C68  
                            l1053 2B4C                              l1045 2A86  
                            l1037 2952                              l1125 3B24  
                            l1117 3A78                              l1221 30F0  
                            l1150 387A                              l1062 2CA2  
                            l1054 2B72                              l1046 2AC8  
                            l1038 2990                              l1070 24C0  
                            l1126 3B14                              l1118 3BBA  
                            l1222 2DC2                              l1135 55EC  
                            l1063 2CBA                              l1055 2BD4  
                            l1047 2ABA                              l1039 2986  
                            l1071 24E0                              l1119 3A90  
                            l1223 2E1C                              l1152 384E  
                            l1240 50E8                              l1064 2CC0  
                            l1056 2BBA                              l1048 2AFC  
                            l1080 270E                              l1072 251A  
                            l1128 3B46                              l1224 2F9E  
                            l1161 396C                              l1153 3890  
                            l1145 37F4                              l1137 55F8  
                            l1241 50E8                              l1057 2BD4  
                            l1049 2B12                              l1081 2728  
                            l1073 2514                              l1129 3B46  
                            l1225 3078                              l1154 38A8  
                            l1146 37EC                              l1138 55F8  
                            l1058 2BD0                              l1090 28A6  
                            l1082 274E                              l1074 252A  
                            l1226 303C                              l1163 398E  
                            l1155 3894                              l1235 573A  
                            l1059 2C34                              l1091 2870  
                            l1083 27B0                              l1075 2566  
                            l1067 2472                              l1227 3074  
                            l1172 56B6                              l1180 53E2  
                            l1164 39A4                              l1156 38A0  
                            l1148 3858                              l1244 544C  
                            l1092 28A2                              l1084 2796  
                            l1068 24AC                              l1228 30DC  
                            l1157 38DA                              l1245 5444  
                            l1093 2898                              l1085 27B0  
                            l1077 254E                              l1069 24A6  
                            l1166 39D2                              l1158 392C  
                            l1190 493E                              l1246 5468  
                            l1238 509A                              l1086 27AC  
                            l1078 28BE                              l1159 38DE  
                            l1191 49EE                              l1247 5488  
                            l1239 5096                              l1087 2810  
                            l1079 273C                              l1168 39DE  
                            l1192 49EA                              l1088 280C  
                            l1169 39DE                              l3201 4928  
                            l1089 283E                              l4001 439E  
                            l1194 49A0                              l1179 53D8  
                            l3211 49F2                              l1195 49F2  
                            l3203 493E                              l4003 43A8  
                            l4011 567A                              l1188 4948  
                            l3301 3F38                              l3205 4948  
                            l3213 548A                              l3221 5438  
                            l4021 4402                              l4013 43AA  
                            l4101 3BBA                              l4005 563C  
                            l4111 5584                              l3311 3F80  
                            l3303 3F3C                              l3207 4966  
                            l3215 5496                              l3223 5444  
                            l3231 49F4                              l4103 5082  
                            l4031 443A                              l4023 4404  
                            l4015 43C0                              l4007 5652  
                            l5001 5364                              l4201 5764  
                            l4113 558C                              l3321 3FF8  
                            l3313 3FA4                              l3305 3F4A  
                            l3209 49A0                              l3217 54A8  
                            l3225 544C                              l3241 4A4A  
                            l3233 4A04                              l3401 3766  
                            l4105 509A                              l4041 447E  
                            l4033 444E                              l4025 4414  
                            l4017 43D4                              l4009 5666  
                            l4121 2CE0                              l5011 5388  
                            l5003 5368                              l4115 5596  
                            l4107 5570                              l3331 407A  
                            l3323 4026                              l3315 3FC2  
                            l3307 3F6A                              l3219 54B0  
                            l3227 5468                              l3251 4AC8  
                            l3243 4A5E                              l3235 4A1C  
                            l3403 376C                              l3411 37AA  
                            l4051 44D2                              l4043 4492  
                            l4035 4456                              l4027 4418  
                            l4019 43D8                              l4211 484C  
                            l4203 482A                              l4131 2DC2  
                            l4123 2D00                              l3341 5022  
                            l5005 536C                              l4301 38A8  
                            l3421 54EC                              l3501 5178  
                            l4117 559E                              l4109 5574  
                            l3261 3D9A                              l3333 409E  
                            l3325 404A                              l3317 3FCA  
                            l3309 3F72                              l3253 55B6  
                            l3229 5488                              l3245 4A66  
                            l3237 4A2A                              l3413 37D6  
                            l3405 377E                              l5021 4BE2  
                            l5013 4B9A                              l4053 44E6  
                            l4045 449A                              l4037 4460  
                            l4029 4426                              l4061 3A00  
                            l4221 4884                              l4213 485A  
                            l4205 482E                              l4141 2F00  
                            l4133 2DE0                              l4125 2D4A  
                            l5101 4162                              l3343 503C  
                            l3351 5066                              l5007 5372  
                            l4311 398E                              l4303 38DE  
                            l3431 5510                              l3423 54EE  
                            l3415 54D8                              l3503 5180  
                            l4119 55A8                              l3271 3DF8  
                            l3263 3DBA                              l3335 40C2  
                            l3327 405C                              l3319 3FE2  
                            l3255 55D0                              l3247 4A94  
                            l3239 4A36                              l3407 378A  
                            l3511 512A                              l5031 4C46  
                            l5023 4BF4                              l5015 4BA6  
                            l4055 44FA                              l4047 44AA  
                            l4039 446E                              l4071 3A80  
                            l4063 3A4A                              l4231 48CA  
                            l4223 488C                              l4215 4862  
                            l4207 483C                              l4151 3078  
                            l4143 2F32                              l4135 2E18  
                            l4127 2D5E                              l5111 419E  
                            l5103 416E                              l3345 5040  
                            l3337 500E                              l5009 537C  
                            l5041 52A4                              l4313 39A4  
                            l4305 3924                              l3433 5512  
                            l3425 54F0                              l3417 54E8  
                            l4401 2000                              l3281 3E58  
                            l3273 3E04                              l3265 3DC2  
                            l3257 3D88                              l3329 406A  
                            l3249 4AAC                              l3409 3796  
                            l3361 3536                              l3353 34BA  
                            l3441 3C00                              l3505 50EA  
                            l5033 4C5C                              l5025 4C08  
                            l5017 4BBA                              l3601 1C40  
                            l3521 1A8A                              l3513 1A5A  
                            l4049 44C2                              l4081 3B14  
                            l4073 3A90                              l4065 3A60  
                            l4057 39E2                              l4161 4708  
                            l4241 48FC                              l4233 48D2  
                            l4225 4898                              l4217 486A  
                            l4209 4844                              l4153 30B4  
                            l4145 2F9E                              l4137 2E1C  
                            l4129 2D9A                              l4321 30F2  
                            l5121 41D2                              l5113 41A2  
                            l5105 4172                              l3347 5044  
                            l3339 501A                              l5051 52C4  
                            l5043 52AC                              l5035 5276  
                            l4315 39B6                              l4307 392C  
                            l3427 54FC                              l3419 54EA  
                            l4411 2064                              l4403 2016  
                            l3291 3ED0                              l3283 3E6A  
                            l3275 3E22                              l3267 3DD0  
                            l3259 3D8C                              l3371 3596  
                            l3363 353C                              l3355 34DA  
                            l3451 3CD0                              l3443 3C04  
                            l3435 3BBC                              l3507 50F2  
                            l5027 4C1A                              l5019 4BC6  
                            l3611 1C72                              l3603 1C4C  
                            l3531 1ACC                              l3523 1A9A  
                            l3515 1A66                              l4091 3B5E  
                            l4083 3B24                              l4075 3AC6  
                            l4067 3A74                              l4059 39F2  
                            l4163 4722                              l4171 4FC8  
                            l4243 4908                              l4235 48D8  
                            l4227 48AE                              l4219 4872  
                            l4251 4D72                              l4155 30DC  
                            l4147 2FD0                              l4139 2EB8  
                            l4331 3166                              l4323 3104  
                            l5123 41E6                              l5115 41B6  
                            l5107 4186                              l3349 505E  
                            l5053 52D0                              l5045 52B0  
                            l5037 5294                              l4309 396C  
                            l3429 550E                              l4501 23AC  
                            l4421 20BE                              l4413 2070  
                            l4405 202C                              l3285 3E98  
                            l3277 3E2A                              l3293 3EDE  
                            l3269 3DF0                              l3381 3644  
                            l3373 35A0                              l3365 3556  
                            l3357 3502                              l3461 3D26  
                            l3453 3CD4                              l3445 3C28  
                            l3437 3BE0                              l3509 5100  
                            l4181 5712                              l5029 4C30  
                            l5061 4AF6                              l3701 1FA2  
                            l3621 1CD0                              l3613 1C98  
                            l3605 1C54                              l3541 1AFE  
                            l3533 1AD2                              l3525 1AAE  
                            l3517 1A74                              l4093 3B82  
                            l4085 3B32                              l4077 3AC8  
                            l4069 3A78                              l4173 4FCC  
                            l4165 4F9A                              l4245 4914  
                            l4237 48DE                              l4229 48B4  
                            l4261 4DE8                              l4253 4DA0  
                            l4157 30F0                              l4149 303C  
                            l4341 320A                              l4333 3182  
                            l4325 3120                              l5125 41F2  
                            l5117 41C2                              l5109 4192  
                            l5047 52B4                              l5039 52A0  
                            l4271 53D8                              l4263 538A  
                            l4503 23B8                              l4431 2118  
                            l4423 20D4                              l4415 2086  
                            l4407 2038                              l4511 2444  
                            l3295 3EEE                              l3287 3EB8  
                            l3279 3E42                              l3199 4916  
                            l3391 36F0                              l3383 364A  
                            l3375 35A8                              l3367 3572  
                            l3359 3526                              l3471 3D6C  
                            l3455 3CF8                              l3463 3D2A  
                            l3447 3C50                              l3439 3BEE  
                            l4191 523A                              l4183 573A  
                            l5071 4B60                              l5063 4B12  
                            l5055 4ACA                              l3711 1FC8  
                            l3703 1FA8                              l3631 1D0E  
                            l3623 1CDE                              l3615 1CA8  
                            l3607 1C62                              l3551 1B3A  
                            l3543 1B04                              l3535 1AE4  
                            l3527 1AB0                              l3519 1A7A  
                            l4095 3B92                              l4087 3B54  
                            l4079 3AD4                              l4159 4634  
                            l4175 4FD0                              l4167 4FA6  
                            l4239 48EC                              l4255 4DB4  
                            l4247 4D30                              l4351 32BA  
                            l4343 3232                              l4335 31AA  
                            l4327 3134                              l5127 4216  
                            l5119 41CE                              l3481 5536  
                            l5049 52BA                              l4273 53E2  
                            l4265 538E                              l4281 37EC  
                            l4513 2450                              l4505 23CE  
                            l4441 217C                              l4433 212E  
                            l4425 20E0                              l4417 209C  
                            l4409 204E                              l3297 3F12  
                            l3289 3EBE                              l3393 370A  
                            l3385 3650                              l3377 35BC  
                            l3369 3584                              l3473 3D7A  
                            l3465 3D38                              l3457 3D06  
                            l3449 3C98                              l4193 525E  
                            l4185 5218                              l4601 0BE8  
                            l4521 08FA                              l5073 4B76  
                            l5065 4B24                              l5057 4AD6  
                            l3713 1FDC                              l3705 1FAE  
                            l3641 1DA4                              l3633 1D14  
                            l3625 1CEC                              l3617 1CBC  
                            l3609 1C68                              l3561 1B7E  
                            l3545 1B14                              l3553 1B42  
                            l3537 1AEA                              l3529 1AB8  
                            l3801 2B28                              l3721 28E0  
                            l4097 3BA0                              l4089 3B5A  
                            l4177 4FEA                              l4169 4FAE  
                            l4257 4DD8                              l4249 4D5E  
                            l4361 339A                              l4353 32D6  
                            l4345 324E                              l4337 31C6  
                            l4329 3148                              l5081 40E6  
                            l3491 555A                              l3483 5538  
                            l4275 567C                              l4267 53A2  
                            l4291 384E                              l4283 37F4  
                            l4507 23E4                              l4451 21D6  
                            l4443 2188                              l4435 2144  
                            l4427 20F6                              l4419 20A8  
                            l3299 3F36                              l3395 3724  
                            l3379 35C2                              l3387 36B8  
                            l3475 3D86                              l3467 3D44  
                            l3459 3D1A                              l4195 5274  
                            l4187 522A                              l4611 0C42  
                            l4603 0BF4                              l4531 0954  
                            l4523 0910                              l4515 08C2  
                            l5075 4B8C                              l5067 4B38  
                            l5059 4AEA                              l3707 1FB4  
                            l3651 1E00                              l3643 1DA6  
                            l3635 1D1E                              l3627 1CF8  
                            l3619 1CC0                              l3571 1B92  
                            l3563 1B82                              l3555 1B56  
                            l3547 1B24                              l3539 1AF0  
                            l3811 2B72                              l3803 2B32  
                            l3723 28F0                              l3731 291E  
                            l3715 28C0                              l4099 3BA6  
                            l4179 4FF2                              l4259 4DDE  
                            l4371 3492                              l4363 3442  
                            l4355 32FE                              l4347 3276  
                            l4339 31EE                              l5091 4126  
                            l5083 4108                              l3493 555C  
                            l3485 553A                              l3477 5524  
                            l4197 573C                              l4277 56B6  
                            l4269 53D0                              l5149 38C4  
                            l4293 3858                              l4285 37F8  
                            l4509 23F0                              l4461 2230  
                            l4453 21EC                              l4445 219E  
                            l4437 2150                              l4429 210C  
                            l3389 36D2                              l3397 3740  
                            l3469 3D48                              l4189 5232  
                            l4701 0F8A                              l4621 0C9C  
                            l4613 0C58                              l4605 0C0A  
                            l4541 09B8                              l4533 096A  
                            l4525 091C                              l4517 08D8  
                            l5069 4B4A                              l3709 1FC2  
                            l3661 1E3A                              l3653 1E14  
                            l3645 1DB6                              l3629 1D00  
                            l3637 1D28                              l3581 1BA6  
                            l3573 1B96                              l3565 1B86  
                            l3557 1B68                              l3549 1B38  
                            l3821 2BE4                              l3813 2B76  
                            l3805 2B3C                              l3741 2952  
                            l3733 2932                              l3725 2900  
                            l3717 28CC                              l3901 259E  
                            l4381 450E                              l4373 3496  
                            l4365 3466                              l4357 331A  
                            l4349 3292                              l5093 4132  
                            l5085 410C                              l5077 40C4  
                            ?_pad 0011                              l3495 555E  
                            l3487 553C                              l3479 5534  
                            l4199 5758                              l4295 387A  
                            l4287 3812                              l4279 37D8  
                            l4471 2294                              l4463 2246  
                            l4455 21F8                              l4447 21B4  
                            l4439 2166                              l3399 3752  
                            l4711 0FE4                              l4703 0FA0  
                            l4631 0D00                              l4623 0CB2  
                            l4615 0C64                              l4607 0C20  
                            l4551 0A12                              l4543 09C4  
                            l4535 0980                              l4527 0932  
                            l4519 08E4                              l3663 1E48  
                            l3655 1E1C                              l3671 1E72  
                            l3639 1D4E                              l3647 1DCA  
                            l3583 1BAA                              l3575 1B9A  
                            l3567 1B8A                              l3559 1B76  
                            l3591 1BBE                              l3831 2C4E  
                            l3823 2BF0                              l3815 2B84  
                            l3807 2B4A                              l3743 2962  
                            l3751 2990                              l3735 2938  
                            l3727 2914                              l3719 28DA  
                            l3911 25E8                              l3903 25B6  
                            l4391 4620                              l4383 4540  
                            l4375 3498                              l4367 3476  
                            l4359 334E                              l5095 413E  
                            l5087 4110                              l5079 40C8  
                            l3489 5548                              l4297 3894  
                            l4289 3846                              l4801 4C6A  
                            l3497 5150                              l4481 22EE  
                            l4473 22A0                              l4465 225C  
                            l4457 220E                              l4449 21C0  
                            l4721 1048                              l4713 0FFA  
                            l4705 0FAC                              l4641 0D5A  
                            l4633 0D0C                              l4625 0CC8  
                            l4617 0C7A                              l4609 0C2C  
                            l4561 0A6C                              l4553 0A28  
                            l4545 09DA                              l4537 098C  
                            l4529 0948                              l3681 1EC6  
                            l3665 1E50                              l3657 1E26  
                            l3649 1DF0                              l3673 1E88  
                            l3593 1BC2                              l3585 1BAE  
                            l3577 1B9E                              l3569 1B8E  
                            l3841 2CB4                              l3833 2C68  
                            l3825 2BFE                              l3817 2BB2  
                            l3809 2B60                              l3761 29D6  
                            l3753 29A4                              l3745 2972  
                            l3737 293E                              l3729 2916  
                            l3921 263E                              l3913 25F8  
                            l3905 25C2                              l4393 56E8  
                            l4385 4558                              l4377 34B8  
                            l4369 348E                              l5097 4142  
                            l5089 4114                              l4811 56BC  
                            l4299 38A0                              l4803 4D0E  
                            l3499 5154                              l4491 2348  
                            l4483 2304                              l4475 22B6  
                            l4467 2268                              l4459 2224  
                            l4731 10A2                              l4723 1054  
                            l4715 1010                              l4707 0FC2  
                            l4651 0DB4                              l4643 0D70  
                            l4635 0D22                              l4627 0CD4  
                            l4619 0C90                              l4571 0AD0  
                            l4563 0A82                              l4555 0A34  
                            l4547 09F0                              l4539 09A2  
                            l3683 1EE2                              l3691 1F44  
                            l3675 1E8C                              l3667 1E58  
                            l3659 1E34                              l3595 1BFA  
                            l3587 1BB2                              l3579 1BA2  
                            l3851 2CDE                              l3843 2CBA  
                            l3835 2C82                              l3827 2C28  
                            l3819 2BC8                              l3771 2A22  
                            l3763 29EA                              l3755 29BA  
                            l3747 2986                              l3739 294C  
                            l3931 26E2                              l3923 265A  
                            l3915 2604                              l3907 25CE  
                            l4395 5704                              l4387 458A  
                            l4379 44FC                              l5099 4156  
                            l4821 56E0                              l4813 56C8  
                            l4805 4D22                              l4493 235E  
                            l4485 2310                              l4477 22CC  
                            l4469 227E                              l4397 1FDE  
                            l4741 10FC                              l4733 10B8  
                            l4725 106A                              l4717 101C  
                            l4709 0FD8                              l4661 0E18  
                            l4653 0DCA                              l4645 0D7C  
                            l4637 0D38                              l4629 0CEA  
                            l4581 0B2A                              l4573 0ADC  
                            l4565 0A98                              l4557 0A4A  
                            l4549 09FC                              l3693 1F54  
                            l3685 1EEE                              l3677 1E9A  
                            l3669 1E68                              l3597 1C16  
                            l3589 1BB6                              l3845 2CC0  
                            l3837 2CA2                              l3829 2C34  
                            l3781 2A7E                              l3773 2A26  
                            l3757 29CA                              l3765 29EE  
                            l3749 2988                              l3941 273C  
                            l3933 26F0                              l3925 2666  
                            l3917 2614                              l3909 25DC  
                            l3861 2482                              l3853 2452  
                            l4389 460E                              l4901 1924  
                            l4823 579C                              l4815 56CE  
                            l4807 4D2E                              l4495 2374  
                            l4487 2326                              l4479 22D8  
                            l4399 1FF4                              l4751 1160  
                            l4743 1112                              l4735 10C4  
                            l4727 1080                              l4719 1032  
                            l4671 0E72                              l4663 0E24  
                            l4655 0DE0                              l4647 0D92  
                            l4639 0D44                              l4591 0B84  
                            l4583 0B40                              l4575 0AF2  
                            l4567 0AA4                              l4559 0A60  
                            l3695 1F68                              l3687 1EFC  
                            l3679 1EB0                              l3599 1C26  
                            l3847 2CC6                              l3839 2CA6  
                            l3791 2AC8                              l3783 2A86  
                            l3775 2A4E                              l3767 29FE  
                            l3759 29D2                              l3951 27A4  
                            l3943 274E                              l3935 270E  
                            l3927 2682                              l3919 262E  
                            l3871 24C6                              l3863 2492  
                            l3855 245E                              l4903 1950  
                            l4911 1A20                              l4831 1240  
                            l4817 56D4                              l4809 56B8  
                            l4825 5794                              l4921 5412  
                            l4761 4EA2                              l4497 2380  
                            l4489 233C                              l4753 116C  
                            l4745 1128                              l4737 10DA  
                            l4729 108C                              l4681 0ECC  
                            l4673 0E88                              l4665 0E3A  
                            l4657 0DEC                              l4649 0DA8  
                            l4593 0B9A                              l4585 0B4C  
                            l4577 0B08                              l4569 0ABA  
                            l3697 1F88                              l3689 1F36  
                            l3849 2CCA                              l3793 2AE6  
                            l3785 2A96                              l3777 2A5E  
                            l3769 2A0E                              l3953 27C0  
                            l3961 2810                              l3945 2752  
                            l3937 2718                              l3929 26AC  
                            l3881 2500                              l3873 24CC  
                            l3865 24A6                              l3857 246C  
                            l4913 1A4C                              l4905 197A  
                            l4833 126C                              l4841 133C  
                            l4819 56DA                              l4827 5796  
                            l4923 541A                              l4915 53E4  
                            l4771 4EE4                              l4763 4EB4  
                            l4499 2396                              l4931 4DEA  
                            l4747 1134                              l4739 10F0  
                            l4691 0F30                              l4683 0EE2  
                            l4675 0E94                              l4667 0E50  
                            l4659 0E02                              l4595 0BB0  
                            l4587 0B62                              l4579 0B14  
                            l4755 1214                              l3699 1F94  
                            l3795 2AE8                              l3787 2AAA  
                            l3779 2A6E                              l3971 2884  
                            l3963 282A                              l3955 27CC  
                            l3947 2760                              l3939 2726  
                            l3891 2562                              l3883 2514  
                            l3875 24DA                              l3867 24AC  
                            l3859 2472                              l4907 19A4  
                            l4843 1368                              l4851 1438  
                            l4835 1296                              l4925 5420  
                            l4917 5402                              l4773 4EFA  
                            l4765 4EBC                              l4781 4F22  
                            l4941 4E4A                              l4933 4DF6  
                            l4757 1220                              l4749 114A  
                            l4693 0F3C                              l4685 0EF8  
                            l4677 0EAA                              l4669 0E5C  
                            l4597 0BBC                              l4589 0B78  
                            l3797 2AFC                              l3789 2AB8  
                            l3981 28BE                              l3973 2892  
                            l3965 283E                              l3957 27DA  
                            l3949 278E                              l3893 2566  
                            l3885 251A                              l3877 24E0  
                            l3869 24C0                              l4909 19DC  
                            l4853 1464                              l4861 1534  
                            l4845 1392                              l4837 12C0  
                            l4829 1222                              l4927 542A  
                            l4919 540E                              l4951 52F0  
                            l4775 4F02                              l4767 4EC8  
                            l4759 4E9A                              l4791 4F74  
                            l4783 4F34                              l4943 4E60  
                            l4935 4E12                              l4695 0F52  
                            l4687 0F04                              l4679 0EC0  
                            l4599 0BD2                              l3799 2B12  
                            l3975 2898                              l3967 2858  
                            l3959 2804                              l3895 2572  
                            l3887 253A                              l3879 24F0  
                            l3991 42C6                              l3983 4242  
                            l4863 1560                              l4871 1630  
                            l4855 148E                              l4847 13BC  
                            l4839 12F8                              l4929 5436  
                            l4961 5310                              l4953 52FC  
                            l4777 4F08                              l4769 4EDE  
                            l4793 4F80                              l4785 4F3C  
                            l4945 4E76                              l4937 4E24  
                            l4697 0F68                              l4689 0F1A  
                            l3969 2874                              l3977 28A6  
                            l3897 257C                              l3889 254E  
                            l3993 42D4                              l3985 4270  
                            l4873 165C                              l4881 172C  
                            l4865 158A                              l4857 14B8  
                            l4849 13F4                              l4963 5316  
                            l4955 5300                              l4779 4F0E  
                            l4795 4F86                              l4787 4F48  
                            l4947 4E8C                              l4939 4E38  
                            l4971 4740                              l4699 0F74  
                            l3979 28AA                              l3899 2592  
                            l3995 4312                              l3987 4284  
                            l4883 1758                              l4891 1828  
                            l4875 1686                              l4867 15B4  
                            l4859 14F0                              l4797 5786  
                            l4965 5320                              l4957 5308  
                            l4949 52D2                              l4789 4F5E  
                            l4981 47AA                              l4973 475C  
                            l3997 4320                              l3989 42B2  
                            l4893 1854                              l4885 1782  
                            l4877 16B0                              l4869 15EC  
                            l4799 578A                              l4967 532C  
                            l4959 530C                              l4991 481C  
                            l4983 47C0                              l4975 476E  
                            l3999 4398                              l4895 187E  
                            l4887 17AC                              l4879 16E8  
                            l4993 532E                              l4985 47D6  
                            l4977 4782                              l4969 4734  
                            l4897 18A8                              l4889 17E4  
                            l4995 534C                              l4987 47EC  
                            l4979 4794                              l4899 18E0  
                            l4997 5358                              l4989 4802  
                            l4999 535C                              STR_1 08BA  
                            STR_2 08B6                              STR_3 08AF  
                            STR_4 08BD                              STR_5 087C  
                            STR_6 0857                              STR_7 0871  
                            STR_8 08BD                              STR_9 087E  
                            _LATB 000F8A                              u4000 3734  
                            u4001 3730                              u4010 3752  
                            u4011 374E                              u4100 51B0  
                            u4020 3762                              u4101 51AC  
                            u4021 375E                              u4030 377E  
                            u4110 5146                              u4031 377A  
                            u4111 5142                              u4040 3BE0  
                            u4200 1B76                              u4120 1A74  
                            u5000 43F8                              u4041 3BDC  
                            u4201 1B72                              u4121 1A70  
                            u4050 3C28                              u4210 1BFA  
                            u4130 1A8A                              u5010 4426  
                            u4051 3C24                              u4211 1BF6  
                            u4131 1A86                              u5011 4422  
                            u4060 3C4C                              u4300 1CEC  
                            u4220 1C12                              u4140 1A9A  
                            u5020 443A                              u5100 3B0C  
                            u4061 3C48                              u4301 1CE8  
                            u4221 1C0C                              u4141 1A96  
                            u5021 4436                              u5005 43EE  
                            u5101 3B08                              u4070 3CF8  
                            u4310 1D0E                              u4230 1C14  
                            u4150 1AE4                              u5030 447E  
                            u5110 3B32                              u4071 3CF4  
                            u4311 1D0A                              u4151 1AE0  
                            u5031 447A                              u5111 3B2E  
                            u4080 5174                              u6000 08FA  
                            u4400 1E9A                              u4320 1D4E  
                            u4240 1C40                              u4160 1AFE  
                            u5040 44BA                              u5120 3B42  
                            u5200 2D4A                              u6001 08F6  
                            u4401 1E96                              u4321 1D4A  
                            u4241 1C3C                              u4161 1AFA  
                            u5041 44B6                              u5121 3B3E  
                            u5201 2D46                              u4090 51A0  
                            u6010 0910                              u4410 1EB0  
                            u4330 1DB6                              u4250 1C62  
                            u4170 1B14                              u5050 44D2  
                            u5130 3B54                              u5210 2D7E  
                            u6011 090C                              u4411 1EAC  
                            u4331 1DB2                              u4251 1C5E  
                            u4171 1B10                              u5051 44CE  
                            u5131 3B50                              u3620 4928  
                            u3700 4A84                              u6100 0A12  
                            u6020 0932                              u4500 1FC2  
                            u4420 1EC6                              u4340 1DF0  
                            u4260 1C86                              u4180 1B24  
                            u5140 3B92                              u5060 39F2  
                            u5300 5008                              u5220 2D9A  
                            u3621 4924                              u3701 4A80  
                            u6101 0A0E                              u6021 092E  
                            u4501 1FBE                              u4421 1EC2  
                            u4341 1DEC                              u4261 1C82  
                            u4181 1B20                              u5141 3B8E  
                            u5061 39EE                              u5301 5004  
                            u5221 2D96                              u3630 493A  
                            u3710 4A94                              u6110 0A28  
                            u6030 0948                              u4430 1EE2  
                            u4350 1E00                              u4270 1C98  
                            u4190 1B68                              u4510 28DA  
                            u5150 3BA0                              u5070 3A00  
                            u5310 483C                              u5230 2DE0  
                            u4087 516A                              u3631 4936  
                            u3711 4A90                              u6111 0A24  
                            u6031 0944                              u4431 1EDE  
                            u4351 1DFC                              u4271 1C94  
                            u4191 1B64                              u4511 28D6  
                            u5151 3B9C                              u5071 39FC  
                            u5311 4838                              u5231 2DDC  
                            u5215 2D74                              u5400 53A2  
                            u3800 3F4A                              u3720 55D0  
                            u3640 4966                              u5160 50D2  
                            u6200 0B2A                              u6120 0A4A  
                            u6040 096A                              u4440 1EFC  
                            u4360 1E34                              u4280 1CA8  
                            u4600 2AB8                              u4520 28F0  
                            u5080 3A60                              u5320 485A  
                            u5240 2F32                              u7000 1782  
                            u5401 539E                              u4097 5196  
                            u3801 3F46                              u3721 55CC  
                            u3641 4962                              u6201 0B26  
                            u6121 0A46                              u6041 0966  
                            u4441 1EF8                              u4361 1E30  
                            u4281 1CA4                              u4601 2AB4  
                            u4521 28EC                              u5081 3A5C  
                            u5321 4856                              u5241 2F2E  
                            u7001 177E                              u5410 53D0  
                            u3730 3D9A                              u3810 3F80  
                            u3650 499C                              u5170 50E4  
                            u6210 0B40                              u6130 0A60  
                            u6050 0980                              u4450 1F36  
                            u4370 1E48                              u4290 1CDE  
                            u4610 2AE6                              u4530 2900  
                            u5090 3ABE                              u5330 4884  
                            u5250 2FD0                              u7010 17AC  
                            u5411 53CC                              u3731 3D96  
                            u3811 3F7C                              u3651 4998  
                            u5171 50E0                              u6211 0B3C  
                            u6131 0A5C                              u6051 097C  
                            u4451 1F32                              u4371 1E44  
                            u4291 1CDA                              u4611 2AE2  
                            u4531 28FC                              u5091 3ABA  
                            u5331 4880                              u5251 2FCC  
                            u7011 17A8                              u5420 56AC  
                            u5500 39B6                              u5180 5584  
                            u3740 3DD0                              u3820 3FC2  
                            u3660 54D0                              u3900 34EC  
                            u7100 4E60                              u6300 0C42  
                            u6220 0B62                              u6140 0A82  
                            u6060 09A2                              u4460 1F54  
                            u4380 1E68                              u4700 2BFE  
                            u4620 2B0E                              u4540 294C  
                            u5340 48A6                              u5260 3098  
                            u7020 1854                              u5421 56A6  
                            u5501 39B2                              u5181 5580  
                            u3741 3DCC                              u3821 3FBE  
                            u3661 54CC                              u7101 4E5C  
                            u6301 0C3E                              u6221 0B5E  
                            u6141 0A7E                              u6061 099E  
                            u4461 1F50                              u4381 1E64  
                            u4701 2BFA                              u4621 2B0A  
                            u4541 2948                              u5341 48A2  
                            u7021 1850                              u7110 52EE  
                            u5430 56AE                              u3830 3FF0  
                            u3670 5464                              u3910 3502  
                            u6310 0C58                              u6230 0B78  
                            u6150 0A98                              u6070 09B8  
                            u4470 1F64                              u4390 1E80  
                            u4710 2C4E                              u4630 2B28  
                            u4550 2962                              u5350 48CA  
                            u5270 30B4                              u5190 2D20  
                            u5510 3120                              u7030 187E  
                            u7111 52EA                              u3751 3DFE  
                            u3831 3FEC                              u3671 5460  
                            u3911 34FE                              u5167 50C8  
                            u6311 0C54                              u6231 0B74  
                            u6151 0A94                              u6071 09B4  
                            u4471 1F60                              u4391 1E7C  
                            u4711 2C4A                              u4631 2B24  
                            u4551 295E                              u5351 48C6  
                            u5271 30B0                              u5511 311C  
                            u7031 187A                              u5440 3812  
                            u3760 3E22                              u3840 4026  
                            u3680 4A04                              u3920 3536  
                            u6400 0D5A                              u6320 0C7A  
                            u6240 0B9A                              u6160 0ABA  
                            u6080 09DA                              u4480 1F88  
                            u4720 2C82                              u4640 2B4A  
                            u4560 2972                              u4800 253A  
                            u5280 4FC4                              u5360 48FC  
                            u5600 4540                              u5520 3166  
                            u7040 18A8                              u5441 380E  
                            u3761 3E1E                              u3841 4022  
                            u3681 4A00                              u3921 3532  
                            u7121 4766                              u6401 0D56  
                            u6321 0C76                              u6241 0B96  
                            u6161 0AB6                              u6081 09D6  
                            u7201 4B1C                              u4481 1F84  
                            u4721 2C7E                              u4641 2B46  
                            u4561 296E                              u4801 2536  
                            u5281 4FC0                              u5361 48F8  
                            u5601 453C                              u5265 308E  
                            u5521 3162                              u7041 18A4  
                            u5450 3846                              u3770 3E50  
                            u3850 407A                              u3690 4A2A  
                            u3930 3556                              u7130 47AA  
                            u6410 0D70                              u6330 0C90  
                            u6250 0BB0                              u6170 0AD0  
                            u6090 09F0                              u7210 4B60  
                            u4490 1FA2                              u4730 2CB4  
                            u4650 2B6E                              u4570 29BA  
                            u4810 254A                              u5290 4FE6  
                            u5370 4D5E                              u5610 458A  
                            u5530 31AA                              u7050 1950  
                            u5451 3842                              u3771 3E4C  
                            u3851 4076                              u3691 4A26  
                            u3931 3552                              u7131 47A6  
                            u6411 0D6C                              u6331 0C8C  
                            u6251 0BAC                              u6171 0ACC  
                            u6091 09EC                              u7211 4B5C  
                            u4491 1F9E                              u4731 2CB0  
                            u4651 2B6A                              u4571 29B6  
                            u4811 2546                              u5291 4FE2  
                            u5371 4D5A                              u5611 4586  
                            u5195 2D16                              u5531 31A6  
                            u7051 194C                              u3860 5038  
                            u5460 388C                              u5700 20D4  
                            u5620 1FF4                              u3780 3E98  
                            u3940 3584                              u7140 47D6  
                            u6500 0E72                              u6420 0D92  
                            u6340 0CB2                              u6260 0BD2  
                            u6180 0AF2                              u4660 2B84  
                            u4580 29FE                              u4900 282A  
                            u4820 26CC                              u4740 246C  
                            u5380 4DA0                              u5540 31EE  
                            u7060 197A                              u7220 4216  
                            u3861 5034                              u5461 3888  
                            u5701 20D0                              u5621 1FF0  
                            u3781 3E94                              u3941 3580  
                            u7141 47D2                              u6501 0E6E  
                            u6421 0D8E                              u6341 0CAE  
                            u6261 0BCE                              u6181 0AEE  
                            u4661 2B80                              u4581 29FA  
                            u4901 2826                              u4741 2468  
                            u5381 4D9C                              u5541 31EA  
                            u7061 1976                              u7221 4212  
                            u3870 505A                              u5470 3962  
                            u5710 20F6                              u5630 2016  
                            u3790 3EEE                              u3950 3592  
                            u7150 47EC                              u6510 0E88  
                            u6430 0DA8                              u6350 0CC8  
                            u6270 0BE8                              u6190 0B08  
                            u4670 2BB2                              u4590 2A96  
                            u4910 2858                              u4830 2726  
                            u4750 2482                              u5390 4DD8  
                            u5550 3232                              u7070 19A4  
                            u3871 5056                              u5471 395C  
                            u5711 20F2                              u5631 2012  
                            u3791 3EEA                              u3951 358E  
                            u7151 47E8                              u6511 0E84  
                            u6431 0DA4                              u6351 0CC4  
                            u6271 0BE4                              u6191 0B04  
                            u4671 2BAE                              u4591 2A92  
                            u4911 2854                              u4831 2722  
                            u4751 247E                              u5391 4DD4  
                            u5551 322E                              u7071 19A0  
                            u3880 507C                              u7160 534A  
                            u7080 5400                              u5480 3964  
                            u5800 21EC                              u5720 210C  
                            u5640 202C                              u3960 36D2  
                            u6600 0F8A                              u6520 0EAA  
                            u6440 0DCA                              u6360 0CEA  
                            u6280 0C0A                              u4680 2BC8  
                            u4920 2892                              u4840 274A  
                            u4760 2492                              u5560 3276  
                            u3881 5078                              u7161 5346  
                            u7081 53FC                              u5801 21E8  
                            u5721 2108                              u5641 2028  
                            u3961 36CE                              u6601 0F86  
                            u6521 0EA6                              u6441 0DC6  
                            u6361 0CE6                              u6281 0C06  
                            u4681 2BC4                              u4921 288E  
                            u4841 2746                              u4825 26C2  
                            u4761 248E                              u5561 3272  
                            u5490 39A0                              u5810 220E  
                            u5730 212E                              u5650 204E  
                            u3970 36F0                              u3890 34EA  
                            u6610 0FA0                              u6530 0EC0  
                            u6450 0DE0                              u6370 0D00  
                            u6290 0C20                              u4690 2BE4  
                            u4850 2760                              u4770 24DA  
                            u4930 4270                              u5570 32BA  
                            u5491 399C                              u5811 220A  
                            u5731 212A                              u5651 204A  
                            u3971 36EC                              u3891 34E4  
                            u7171 4BEC                              u7091 4E1C  
                            u6611 0F9C                              u6531 0EBC  
                            u6451 0DDC                              u6371 0CFC  
                            u6291 0C1C                              u4691 2BE0  
                            u4851 275C                              u4771 24D6  
                            u4931 426C                              u5571 32B6  
                            u5900 2304                              u5820 2224  
                            u5740 2144                              u5660 2064  
                            u3980 370A                              u7180 4C30  
                            u6700 10A2                              u6620 0FC2  
                            u6540 0EE2                              u6460 0E02  
                            u6380 0D22                              u4860 278E  
                            u4780 24F0                              u4940 42B2  
                            u5580 32FE                              u5901 2300  
                            u5821 2220                              u5741 2140  
                            u5661 2060                              u3981 3706  
                            u7181 4C2C                              u6701 109E  
                            u6621 0FBE                              u6541 0EDE  
                            u6461 0DFE                              u6381 0D1E  
                            u4861 278A                              u4781 24EC  
                            u4941 42AE                              u5581 32FA  
                            u7190 5292                              u5910 2326  
                            u5830 2246                              u5750 2166  
                            u5670 2086                              u3990 3724  
                            u6710 10B8                              u6630 0FD8  
                            u6550 0EF8                              u6470 0E18  
                            u6390 0D38                              u4870 27A4  
                            u4790 2500                              u4950 42D4  
                            u7191 528E                              u5911 2322  
                            u5831 2242                              u5751 2162  
                            u5671 2082                              u3991 3720  
                            u6711 10B4                              u6631 0FD4  
                            u6551 0EF4                              u6471 0E14  
                            u6391 0D34                              u4871 27A0  
                            u4791 24FC                              u5591 4506  
                            u4951 42D0                              u6800 4EFA  
                            u5920 233C                              u5840 225C  
                            u5760 217C                              u5680 209C  
                            u6720 10DA                              u6640 0FFA  
                            u6560 0F1A                              u6480 0E3A  
                            u4880 27C0                              u4960 4320  
                            u6801 4EF6                              u5921 2338  
                            u5841 2258                              u5761 2178  
                            u5681 2098                              u6721 10D6  
                            u6641 0FF6                              u6561 0F16  
                            u6481 0E36                              u4881 27BC  
                            u4961 431C                              u6810 4F34  
                            u5930 235E                              u5850 227E  
                            u5770 219E                              u5690 20BE  
                            u6730 10F0                              u6650 1010  
                            u6570 0F30                              u6490 0E50  
                            u4890 27DA                              u4970 4398  
                            u6811 4F30                              u5931 235A  
                            u5851 227A                              u5771 219A  
                            u5691 20BA                              u6731 10EC  
                            u6651 100C                              u6571 0F2C  
                            u6491 0E4C                              u4891 27D6  
                            u4971 4394                              u6820 4F56  
                            u5940 2374                              u5860 2294  
                            u5780 21B4                              u6740 1112  
                            u6660 1032                              u6580 0F52  
                            u4980 5652                              u6900 1464  
                            u6821 4F52                              u5941 2370  
                            u5861 2290                              u5781 21B0  
                            u6741 110E                              u6661 102E  
                            u6581 0F4E                              u4981 564E  
                            u6901 1460                              u6830 4F74  
                            u5950 2396                              u5870 22B6  
                            u5790 21D6                              u6750 1128  
                            u6670 1048                              u6590 0F68  
                            u4990 43C0                              u6910 148E  
                            u6831 4F70                              u5951 2392  
                            u5871 22B2                              u5791 21D2  
                            u6751 1124                              u6671 1044  
                            u6591 0F64                              u4991 43BC  
                            u6911 148A                              u5960 23AC  
                            u5880 22CC                              u6760 114A  
                            u6680 106A                              u6920 14B8  
                            u6840 126C                              u5961 23A8  
                            u5881 22C8                              u6761 1146  
                            u6681 1066                              u6921 14B4  
                            u6841 1268                              u5970 23CE  
                            u5890 22EE                              u6770 1160  
                            u6690 1080                              u6930 1560  
                            u6850 1296                              u5971 23CA  
                            u5891 22EA                              u6771 115C  
                            u6691 107C                              u6931 155C  
                            u6851 1292                              u6780 4EB4  
                            u5980 23E4                              u6940 158A  
                            u6860 12C0                              u6781 4EB0  
                            u5981 23E0                              u6941 1586  
                            u6861 12BC                              u6790 4ED6  
                            u5990 08D8                              u6950 15B4  
                            u6870 1368                              u6791 4ED2  
                            u5991 08D4                              u6951 15B0  
                            u6871 1364                              u6960 165C  
                            u6880 1392                              u6961 1658  
                            u6881 138E                              u6970 1686  
                            u6890 13BC                              u6971 1682  
                            u6891 13B8                              u6980 16B0  
                            u6981 16AC                              u6990 1758  
                            u6991 1754                              _TMR2 000FCC  
                    lcd_lum@F4224 00EB                      lcd_lum@F4226 00BC  
        SetDutyCycleTo@Duty_cycle 0060                     _hex_converter 4C6A  
                  ??_lcd_arrosage 005E                              abs@a 0013  
                            _dbuf 0100             __size_of_adc_read_lum 0054  
                            _atoi 37D8             __size_of_adc_read_sol 005C  
                            _main 40C4                              _dtoa 34BA  
              __size_of_LCD_Clear 0008                              _prec 00F6  
                            _nout 00F2                              pad@i 0018  
                            pad@p 0015                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001A                              fsr2l 000FD9  
                     main@x_humid 009E                              prodh 000FF4  
                            prodl 000FF3                              start 0000  
                 __end_of_MSdelay 5082                     __CFG_IESO$OFF 000000  
                 ___fldiv@new_exp 0039                      lcd_sol@F4230 00E8  
                    lcd_sol@F4232 00AC                     _LCD_String_xy 556E  
                    ___param_bank 000000                      lcd_lum@value 007A  
             lcd_temp@temperature 007D                             ??_abs 0015  
                           ??_pad 0017                  __end_of_LCD_Char 5522  
                __end_of_LCD_Init 56E8                     __CFG_PLLDIV$1 000000  
                  __CFG_CCP2MX$ON 000000                     ___fltol@sign1 005D  
                 __end_of___aodiv 3F38                             ?_atoi 0008  
                 __end_of___fladd 1FDE                             ?_main 0095  
                           ?_dtoa 001C                      lcd_temp@temp 0080  
                 __end_of___aomod 40C4                   __end_of___fldiv 2CE0  
                 __end_of___awdiv 4916                   __end_of___flneg 567C  
                           STR_10 0864                             STR_11 08BD  
                           STR_12 08A3                             STR_20 0849  
                           STR_13 0897                             STR_14 081D  
                           STR_15 08BD                             STR_16 088B  
                           STR_17 082C                             STR_18 08BD  
                           STR_19 083B                   __end_of___flmul 28C0  
                 __end_of___fltol 44FC                   ___awdiv@divisor 0003  
                           _T2CON 000FCA                             _LATB0 007C50  
                           _LATB1 007C51                      lcd_sol@value 007A  
                 __end_of___lwdiv 4F22                   __end_of___lwmod 4F9A  
                 ___awdiv@counter 0005                      vfpfcnvrt@fmt 0042  
                   __CFG_USBDIV$1 000000                             _TRISA 000F92  
                           _TRISB 000F93                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                   __end_of_lcd_lum 4E9A  
                   __CFG_WRTB$OFF 000000                   __end_of_lcd_sol 482A  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                    _adc_read_lum 53E4        setPeriodTo@clockSelectBits 0082  
                    _adc_read_sol 52D2                    __CFG_EBTRB$OFF 000000  
                           _delay 4F9A                             _flags 00F8  
          __size_of_adc_read_temp 005C                             _fputc 4916  
                           _fputs 548A                   __end_of_isdigit 56B8  
                           atoi@n 0015                             pad@fp 0011  
                           atoi@s 0008                             _width 00F4  
                           _putch 57A4                             _toint 0801  
                           dtoa@d 001E                             dtoa@i 003E  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 53E4                  __end_of_PWM_Init 579C  
                  ?_hex_converter 0017                             tablat 000FF5  
                           plusw1 000FE3                             plusw2 000FDB  
                           status 000FD8               __size_of_LCD_String 0066  
                 __end_of_sprintf 5276                    __CFG_ICPRT$OFF 000000  
                  __CFG_PBADEN$ON 000000                    ?_LCD_String_xy 000B  
                  __CFG_MCLRE$OFF 000000                  stream@limit_time 0813  
                 __initialization 51B6                      __end_of_atoi 39E0  
                    __end_of_main 4242                      __end_of_dtoa 37D8  
                   lcd_temp@F4250 0120                     lcd_temp@F4245 00DF  
                   lcd_temp@F4248 00DC                            ??_atoi 000A  
                          ??_main 0060                            ??_dtoa 0026  
              stream@air_humidity 008E                 __end_of_LCD_Clear 57A4  
                   __activetblptr 000002                      ?_setPeriodTo 0072  
                          ?_delay 0001                            _ADCON1 000FC1  
                          _ADCON2 000FC0                     lcd_temp@value 007A  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _CCPR1L 000FBE                  ___awdiv@dividend 0001  
                          ?_putch 0001                  LCD_String_xy@msg 000C  
                LCD_String_xy@pos 000B                  LCD_String_xy@row 000E  
                __end_of_adc_init 5794                         ??_MSdelay 0003  
                          _OSCCON 000FD3                  __end_of___xxtofl 3BBC  
                ??_SetDutyCycleTo 0066                  stream@servo_init 080D  
                    arrosage@time 0074                    __CFG_XINST$OFF 000000  
                    vfprintf@cfmt 0056                  __end_of_lcd_temp 4B9A  
                          ___flge 4242                            ___fleq 4D30  
                   _adc_read_temp 5276                         ??___aodiv 0011  
               lcd_humid@humidity 007D                         ??___fladd 0049  
                       ??___aomod 0011                            ___wmul 573C  
                __end_of_arrosage 5712                         ??___fldiv 0030  
                       ??___awdiv 0005                         ??___flneg 0005  
                  __CFG_STVREN$ON 000000                         ??___flmul 0017  
                       ??___fltol 0059                         ??___lwdiv 0005  
         __size_of_adc_read_humid 005C                         ??___lwmod 000C  
                          delay@i 0003                            delay@j 0005  
                          clear_0 51FC                            clear_1 5208  
                ___awdiv@quotient 0007                            pad@buf 0013  
                          _roundf 2CE0              __size_of_LCD_Command 004C  
                          _strcat 5712                            _stream 1222  
                          dtoa@fp 001C                         ??_lcd_lum 0060  
                          _strcpy 5082                            _strlen 5438  
                       ??_lcd_sol 0060              __end_of_lcd_arrosage 4634  
                          fputc@c 0001                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_isdigit 0003   __end_ofstream@limit_temperature 0819  
                    __mediumconst 0000                         ??_isspace 0003  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                            putch@c 0001  
                __end_of_vfprintf 5150                   ??_hex_converter 0019  
                       ??_sprintf 005E                        ___flge@ff1 0001  
                      ___flge@ff2 0005                      ___xxtofl@arg 000B  
                    ___xxtofl@exp 000A                      ___xxtofl@val 0001  
                      ___fleq@ff1 0001                        ___fleq@ff2 0005  
                       ?_LCD_Char 0001                        __accesstop 0060  
         __end_of__initialization 520E                    lcd_humid@F4241 0130  
                  lcd_humid@F4236 00E5                    lcd_humid@F4239 00E2  
                       ?_LCD_Init 0001                   ??_LCD_String_xy 000E  
                      ___flneg@f1 0001                     ___rparam_used 000001  
                      ___fltol@f1 0055                    ?_adc_read_temp 0007  
                  __pcstackCOMRAM 0001            setPeriodTo@_resolution 0088  
                    __pidataBANK0 55FA                      __pidataBANK1 5766  
                   __end_of_delay 500E                    lcd_humid@humid 0080  
                   __end_of_fputc 49F4                    lcd_humid@value 007A  
                   __end_of_fputs 54D6                     __end_of_putch 57A6  
                   __end_of_toint 0805                      ??_LCD_String 000B  
                       ?_PWM_Init 0001  __end_ofstream@limit_humidity_air 0817  
                  stream@time_mid 081B                    stream@time_max 0819  
              __size_of_lcd_humid 00D0                           ??_delay 0003  
                    stream@Period 0093                           ??_fputc 0005  
                         ??_fputs 000E                           ??_putch 0001  
                      __pbssBANK0 00EE                        __pbssBANK1 0100  
                      ??_LCD_Char 0007                        ??_LCD_Init 0009  
              __end_of_LCD_String 51B6                    humid_convert@x 0001  
                         ?___flge 0001                           ?___fleq 0001  
                         ?___wmul 0001                           _CCP1CON 000FBD  
          __size_of_humid_convert 0474                         ?_adc_init 0001  
                      ??_PWM_Init 0001                           ?_roundf 0055  
                         ?_strcat 0011                           ?_stream 008C  
                         ?_strcpy 0007                           ?_strlen 0001  
          __end_ofstream@time_mid 081D            __end_ofstream@time_max 081B  
                       ?___xxtofl 0001           temp_convert@temperature 0003  
              __size_of_vfpfcnvrt 01CC          __end_ofstream@limit_time 0815  
               stream@temperature 008C                         ?_lcd_temp 005E  
            __size_of_setPeriodTo 03C8                         ?_arrosage 006E  
                         _MSdelay 500E                   __CFG_VREGEN$OFF 000000  
                   LCD_String@msg 0009                   ??_adc_read_temp 0009  
                         __Hparam 0000                           __Lparam 0000  
               __end_of_lcd_humid 4C6A                   __size_of___flge 0168  
                 __size_of___fleq 00BA                           ___aodiv 3D88  
                         ___fladd 1A5A                           ___aomod 3F38  
                         ___fldiv 28C0                           ___awdiv 482A  
                         ___flneg 563C                    _adc_read_humid 532E  
                         ___flmul 2452             __size_of_lcd_arrosage 0138  
                         ___fltol 43AA                   __size_of___wmul 002A  
                         ___lwdiv 4E9A                           ___lwmod 4F22  
                       ?_vfprintf 0050                      __psmallconst 0800  
                         __pcinit 51B6                           __ramtop 0800  
                      ??_adc_init 0001                           __ptext0 40C4  
                         __ptext1 1222                           __ptext2 30F2  
                         __ptext3 2CE0                           __ptext4 563C  
                         __ptext5 4242                           __ptext6 44FC  
                         __ptext7 4D30                           __ptext8 482A  
                         __ptext9 56E8                     ?_temp_convert 0001  
                         _lcd_lum 4DEA                           _lcd_sol 4734  
                 __size_of_roundf 0412                   __size_of_strcat 002A  
                 __size_of_stream 0838                   __size_of_strcpy 0068  
                 __size_of_strlen 0052                         _T2CONbits 000FCA  
                    __size_of_abs 0044                      __size_of_pad 00D6  
                         _isdigit 567C                        ??___xxtofl 0005  
        __end_ofstream@servo_init 0811                           _isspace 538A  
           humid_convert@humidity 0003                         _LCD_Clear 579C  
                         atoi@neg 000E      setPeriodTo@TimerPrescaleBits 007A  
                         _sprintf 5218                           main@lum 00A4  
                         main@sol 009C              hex_converter@convert 001B  
                      ??_lcd_temp 0060              end_of_initialization 520E  
                      ??_arrosage 005F                     _humid_convert 1FDE  
                         fputc@fp 0003                    LCD_Command@cmd 0008  
                   __Lmediumconst 0000                           fputs@fp 000C  
                    _lcd_arrosage 44FC            __end_of_adc_read_humid 538A  
               __end_of_vfpfcnvrt 3D88                           postdec1 000FE5  
                         postdec2 000FDD     setPeriodTo@TimerPrescaleValue 007C  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                           roundf@e 0064  
                         roundf@u 006A                           roundf@x 0055  
                         roundf@y 006E                        ??_vfprintf 0056  
                         strcpy@d 000F                           strlen@a 0005  
                         strcpy@s 000D                           strlen@s 0001  
                  ??_temp_convert 0003                       ___fladd@grs 0054  
                   ___xxtofl@sign 0009                         _TRISCbits 000F94  
                      ?_LCD_Clear 0001                       ___fldiv@grs 003B  
                     ___fldiv@rem 0034              SetDutyCycleTo@Period 0064  
                      main@Period 00A2                    ?_humid_convert 0001  
                     ___flmul@grs 001C                        lcd_humid@h 005E  
               __size_of_LCD_Char 004C                 lcd_arrosage@F4173 00CC  
               __size_of_LCD_Init 0030                        main@x_temp 00A0  
                 ?_adc_read_humid 0007           main@limit_humidity_soil 0811  
                   ??_LCD_Command 0007                    __end_of___flge 43AA  
                  __end_of___fleq 4DEA                       vfpfcnvrt@ap 0044  
               setPeriodTo@period 0084                       vfpfcnvrt@fp 0040  
                     vfpfcnvrt@ll 0048                    __end_of___wmul 5766  
               lcd_arrosage@angle 006A                 lcd_arrosage@time2 0080  
                  __end_of_roundf 30F2                    __end_of_strcat 573C  
                  __end_of_stream 1A5A                    __end_of_strcpy 50EA  
                  __end_of_strlen 548A                 __size_of_PWM_Init 0008  
             start_initialization 51B6                arrosage@duty_cycle 006E  
                     __end_of_abs 55FA                       __end_of_pad 4ACA  
           __end_of_hex_converter 4D30                   lcd_lum@lum_info 006A  
           __end_of_LCD_String_xy 55B6       SetDutyCycleTo@PWM10BitValue 006C  
                 stream@servo_mid 0809                   stream@servo_max 0805  
                     vfprintf@fmt 0052                          ??___flge 0009  
                        ??___fleq 0009                          ??___wmul 0005  
                     __pdataBANK0 00AC                       __pdataBANK1 0120  
                __CFG_LPT1OSC$OFF 000000           __size_of_SetDutyCycleTo 0100  
                        ??_roundf 0059                          ??_strcat 0015  
                        ??_stream 0092                          ??_strcpy 000B  
                        ??_strlen 0003                         ___fladd@a 0045  
                       ___fladd@b 0041                         ___fldiv@a 002C  
                       ___fldiv@b 0028               __end_of_LCD_Command 556E  
               __size_of_adc_init 000E                         ___flmul@a 0013  
                       ___flmul@b 000F                     __pcstackBANK0 0060  
                ___aodiv@dividend 0001                     ?_adc_read_lum 0007  
                   ?_adc_read_sol 0007                       ??_LCD_Clear 0009  
                 ??_humid_convert 0003                 __size_of___xxtofl 01DC  
                        ?_MSdelay 0001                 __size_of_lcd_temp 00D0  
            __end_of_temp_convert 1222                 __size_of_arrosage 002A  
                ___lwdiv@dividend 0001                          ?___aodiv 0001  
                        ?___fladd 0041                          ?___aomod 0001  
                        ?___fldiv 0028                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___flmul 000F                          ?___fltol 0055  
                        ?___lwdiv 0001                          ?___lwmod 0008  
                       _lcd_humid 4B9A                 __size_of_vfprintf 0066  
                        ?_lcd_lum 005E                          ?_lcd_sol 005E  
                     __smallconst 0800                          ?_isdigit 0001  
                  ??_adc_read_lum 0009                    ??_adc_read_sol 0009  
                   ??_setPeriodTo 005F                          ?_isspace 0001  
                ___lwdiv@quotient 0005                    __size_of_delay 0074  
           LCD_String_xy@location 000F                          ?_sprintf 0058  
                  __size_of_fputc 00DE                    __size_of_fputs 004C  
                  __size_of_putch 0002           __end_ofstream@servo_mid 080D  
         __end_ofstream@servo_max 0809                          MSdelay@i 0003  
                        MSdelay@j 0005                          _LCD_Char 54D6  
                 lcd_sol@sol_info 006A                          _LCD_Init 56B8  
                  ___wmul@product 0005               hex_converter@result 0019  
           __end_of_adc_read_temp 52D2                  __CFG_WDTPS$32768 000000  
                  hex_converter@x 0017                       _LCD_Command 5522  
                       _vfpfcnvrt 3BBC             stream@photoresistance 0090  
                      ?_lcd_humid 005E                        _ADCON0bits 000FC2  
                        _PWM_Init 5794                 ___wmul@multiplier 0001  
                       lcd_temp@t 005E   __end_ofmain@limit_humidity_soil 0813  
                       main@humid 00A8                         main@x_lum 009A  
                       main@x_sol 00A6                 lcd_temp@temp_info 006A  
                  arrosage@Period 0072                  lcd_arrosage@data 0070  
                       copy_data0 51CA                         copy_data1 51EA  
                lcd_arrosage@time 006E               __end_of_setPeriodTo 34BA  
                _setPeriodTo$1280 0076                  __size_of_MSdelay 0074  
                ??_adc_read_humid 0009                        roundf@F521 00EE  
                        __Hrparam 0000                        vfprintf@ap 0054  
                        __Lrparam 0000                        vfprintf@fp 0050  
                __size_of___aodiv 01B0                  __size_of___fladd 0584  
                __size_of___aomod 018C                  __size_of___fldiv 0420  
                __size_of___awdiv 00EC                  __size_of___flneg 0040  
                __size_of___flmul 046E                    _SetDutyCycleTo 4634  
                __size_of___fltol 0152                        ?_vfpfcnvrt 0040  
                __size_of___lwdiv 0088                  __size_of___lwmod 0078  
                 ___aodiv@divisor 0009               lcd_humid@humid_info 006A  
                        _adc_init 5786                   ___aodiv@counter 0011  
                   temp_convert@x 0001                  __size_of_lcd_lum 00B0  
                __size_of_lcd_sol 00F6                        sprintf@fmt 005A  
                      sprintf@ret 0060                          ___xxtofl 39E0  
                      strcat@dest 0011                          _atoi$962 0010  
                        _atoi$963 0014                          _atoi$964 0012  
                __size_of_isdigit 003C                          _dtoa$487 002E  
                 ___lwdiv@divisor 0003                  __size_of_isspace 005A  
                 ___lwdiv@counter 0007                          __ptext10 4F9A  
                        __ptext11 4634                          __ptext20 4DEA  
                        __ptext12 39E0                          __ptext21 4B9A  
                        __ptext13 43AA                          __ptext30 548A  
                        __ptext22 5712                          __ptext14 2452  
                        __ptext31 4916                          __ptext23 5082  
                        __ptext15 28C0                          __ptext40 4C6A  
                        __ptext32 57A4                          __ptext24 5218  
                        __ptext16 1A5A                          __ptext41 37D8  
                        __ptext33 55B6                          __ptext25 50EA  
                        __ptext17 4ACA                          __ptext50 532E  
                        __ptext42 538A                          __ptext34 3F38  
                        __ptext26 3BBC                          __ptext18 08C2  
                        __ptext51 5786                          __ptext43 567C  
                        __ptext35 3D88                          __ptext27 34BA  
                        __ptext19 4734                          __ptext52 5794  
                        __ptext44 573C                          __ptext36 1FDE  
                        __ptext28 49F4                          __ptext53 56B8  
                        __ptext45 4F22                          __ptext37 556E  
                        __ptext29 5438                          __ptext54 579C  
                        __ptext46 4E9A                          __ptext38 5150  
                        __ptext55 5522                          __ptext47 5276  
                        __ptext39 54D6                          __ptext56 500E  
                        __ptext48 52D2                          __ptext49 53E4  
           __size_of_temp_convert 0960                          _lcd_temp 4ACA  
                __size_of_sprintf 005E                          _arrosage 56E8  
                      strcpy@dest 0007          stream@limit_humidity_air 0815  
                   __size_of_atoi 0208                     __size_of_main 017E  
                   __size_of_dtoa 031E                          delay@val 0001  
                      MSdelay@val 0001              __end_of_adc_read_lum 5438  
            __end_of_adc_read_sol 532E            __end_of_SetDutyCycleTo 4734  
                        _vfprintf 50EA                   setPeriodTo@FOSC 007E  
                 setPeriodTo@FPWM 0072                          lcd_lum@l 005E  
                        main@argc 0095                          main@argv 0097  
                        lcd_sol@s 005E                          main@temp 00AA  
                      _LCD_String 5150                       ??_lcd_humid 0060  
                     _isspace$980 0007                  ___aomod@dividend 0001  
           __CFG_CPUDIV$OSC1_PLL2 000000                      _temp_convert 08C2  
                     _setPeriodTo 30F2                          isdigit@c 0001  
                       sprintf@ap 0062                         strcat@src 0013  
                ___lwmod@dividend 0008                          isspace@c 0001  
                       strcpy@src 0009                   ?_SetDutyCycleTo 0060  
                 ___aomod@divisor 0009                       ??_vfpfcnvrt 0046  
                 ___aomod@counter 0011            __size_of_hex_converter 00C6  
             __CFG_FOSC$INTOSC_EC 000000                          sprintf@f 0064  
                        sprintf@s 0058                   ___lwmod@divisor 000A  
                 ___lwmod@counter 000C            __size_of_LCD_String_xy 0048  
             _SetDutyCycleTo$1281 0068                     ___fladd@signs 0051  
           __end_of_humid_convert 2452                      ___aodiv@sign 0012  
                    ___fladd@aexp 0052                      ___fladd@bexp 0053  
                   ?_lcd_arrosage 006A                      ___aomod@sign 0012  
                     _roundf$1282 0066                       _roundf$1283 0060  
